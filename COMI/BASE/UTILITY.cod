;	Static Name Aliases
;
	TITLE   UTILITY.c
	.286p
	.287
INCLUDELIB	LLIBCE
_TEXT	SEGMENT  WORD PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT  WORD PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT  WORD PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT  WORD PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT  BYTE PUBLIC 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT  BYTE PUBLIC 'DEBTYP'
$$TYPES	ENDS
DGROUP	GROUP	CONST, _BSS, _DATA
	ASSUME DS: DGROUP
	ASSUME  SS: NOTHING
EXTRN	__aFulrem:FAR
EXTRN	__aFuldiv:FAR
_TEXT      SEGMENT
	ASSUME	CS: _TEXT
;|*** /************************************************************************
; Line 1
;|*** **
;|*** ** $Revision:   1.4  $
;|*** **
;|*** ** $Log:   P:/archive/comi/utility.c_v  $
;|*** ** 
;|*** **    Rev 1.4   19 Feb 1996 11:55:44   EMMETT
;|*** ** Moved all global variable definitions to DATA_SEG.ASM.
;|*** ** Modified variable argument functions
;|*** ** Added replacement for math functions so it is not necessary to link standard libraries.
;|*** ** 
;|*** **    Rev 1.3   25 Apr 1995 22:17:16   EMMETT
;|*** ** Added Support for DigiBoard PC/16.  Changed interrupt Routine for better adapter independence.
;|*** ** Changed interrupt routine to allow user to select interrupting device selection algorithim.  Fixed
;|*** ** ABIOS interaction for better "non.INI" initialization in MCA machines.  Fixed various initialization
;|*** ** message strings.  COMscope and receive buffer are now allocated from system memory, allowing
;|*** ** a 32k (word) COMscope buffer and a 64k (byte) receive buffer.
;|*** ** 
;|*** **    Rev 1.2   11 Jun 1994 10:32:52   EMMETT
;|*** ** Changed all references to "Mirror" to "COMscope".
;|*** ** 
;|*** **    Rev 1.1   07 Jun 1994 00:19:50   EMMETT
;|*** ** Added support for DigiBoard.
;|*** ** Added initialization support for OEM specific loads.
;|*** ** Fixed bug in StartWriteStream and ProcessModemSignals that caused handshaking problems.
;|*** ** Fixed hardware tests to set baud rate before testing interrupts.
;|*** ** Fixed hardware tests off switch to work only for retail version.
;|*** ** 
;|*** **    Rev 1.0   16 Apr 1994 08:35:52   EMMETT
;|*** ** Initial version control archive.
;|*** **
;|*** ************************************************************************/
;|*** 
;|*** #define INCL_DOSDEVICES
;|*** #define INCL_VIO
;|*** #define INCL_DOS
;|*** #define INCL_NOPM
;|*** #define building_DD
;|*** 
;|*** #include <os2.h>
; Line 40
;|*** /*DDK*************************************************************************/
;|*** /*                                                                           */
;|*** /* COPYRIGHT (C) Microsoft Corporation, 1989                                 */
;|*** /* COPYRIGHT    Copyright (C) 1995 IBM Corporation                           */
;|*** /*                                                                           */
;|*** /*    The following IBM OS/2 WARP source code is provided to you solely for  */
;|*** /*    the purpose of assisting you in your development of OS/2 WARP device   */
;|*** /*    drivers. You may use this code in accordance with the IBM License      */
;|*** /*    Agreement provided in the IBM Device Driver Source Kit for OS/2. This  */
;|*** /*    Copyright statement may not be removed.                                */
;|*** /*                                                                           */
;|*** /*****************************************************************************/
;|*** /*static char *SCCSID = "@(#)os2.h	6.3 91/05/26";*/
;|*** /****************************** Module Header ******************************\
;|*** *
;|*** *
;|*** * Module Name: OS2.H
;|*** *
;|*** * This is the top level include file that includes all the files necessary
;|*** * for writing an OS/2 application.
;|*** *
;|*** \***************************************************************************/
;|*** 
;|*** #define OS2_INCLUDED
;|*** 
;|*** #if !(defined(INCL_32) || defined(INCL_16))
;|*** #ifdef M_I386
;|***     #define INCL_32
;|*** #else /* not M_I386 */
;|***     #define INCL_16
;|*** #endif /* M_I386 */
;|*** #endif /* INCL_32 || INCL_16 */
;|*** 
;|*** /* XLATOFF */
;|*** #if (defined(INCL_32) && defined(INCL_16))
;|*** #error message ("Illegal combination of API Flags - 32 && 16")
;|*** #endif /* INCL_32 && INCL_16 */
;|*** /* XLATON */
;|*** 
;|*** /* Common definitions */
;|*** 
;|*** #include <os2def.h>
; Line 42
;|*** /*DDK*************************************************************************/
;|*** /*                                                                           */
;|*** /* COPYRIGHT    Copyright (C) 1995 IBM Corporation                           */
;|*** /*                                                                           */
;|*** /*    The following IBM OS/2 WARP source code is provided to you solely for  */
;|*** /*    the purpose of assisting you in your development of OS/2 WARP device   */
;|*** /*    drivers. You may use this code in accordance with the IBM License      */
;|*** /*    Agreement provided in the IBM Device Driver Source Kit for OS/2. This  */
;|*** /*    Copyright statement may not be removed.                                */
;|*** /*                                                                           */
;|*** /*****************************************************************************/
;|*** /****************************** Module Header ******************************\
;|*** *
;|*** * Module Name: OS2DEF.H
;|*** *
;|*** * OS/2 Common Definitions file
;|*** *
;|*** *
;|*** * ===========================================================================
;|*** *
;|*** * Comments at the end of each typedef line give the name tags used in
;|*** * the assembler include version of this file.
;|*** *
;|*** * The assembler include version of this file excludes lines between NOINC
;|*** * and INC comments.
;|*** *
;|*** #ifndef __IBMC__
;|***    * The public version of this file (as shipped with the OS/2 Toolkit
;|***    * product) excludes all non 32-bit material marked in this file
;|***    * as well as any areas specifically marked with __IBMC__ conditional
;|***    * sections - including this paragraph. The H2IBMH rexx command file
;|***    * removes these sections.
;|*** #endif
;|*** \***************************************************************************/
;|*** 
;|*** #ifdef __IBMC__
;|***    #pragma checkout( suspend )
;|***       #ifndef __CHKHDR__
;|***          #pragma checkout( suspend )
;|***       #endif
;|***    #pragma checkout( resume )
;|*** #endif
;|*** 
;|*** #define OS2DEF_INCLUDED
;|*** 
;|*** #ifndef INCL_32         /* If neither INCL_32 or INCL_16 set already */
;|***    #ifndef INCL_16      /* find out from compiler if 32-bit or not.  */
;|***      #ifdef M_I386
;|***         #define INCL_32 /* Compiling for 32-bit */
;|***      #else
;|***         #define INCL_16 /* Compiling for 16-bit */
;|***      #endif
;|***   #endif
;|*** #endif
;|*** 
;|*** #ifdef INCL_32
;|***    #ifndef __IBMC__
;|***    /*****************************************************************/
;|***    /* This #ifdef brackets the rest of this entire file.  It is     */
;|***    /* used to include either the 32-bit or 16-bit base definitions. */
;|***    /* No definitions (other than 16/32-bit determination) must be   */
;|***    /* placed above this.                                            */
;|***    /*****************************************************************/
;|***    #endif
;|*** 
;|***    /* NOINC */
;|***    #ifdef INCL_16
;|***       #error message ("Using 32 bit definitions when compiling 16 bit code")
;|***    #endif /* INCL_16 */
;|***    #ifdef __IBMC__
;|***       #define FAR         /* this will be deleted shortly */
;|***       #define NEAR        /* this will be deleted shortly */
;|*** 
;|***       #define APIENTRY    _System
;|***       #define EXPENTRY    _System
;|*** 
;|***       #define APIENTRY16  _Far16 _Pascal
;|***       #define PASCAL16    _Far16 _Pascal
;|***       #define CDECL16     _Far16 _Cdecl
;|***    #else
;|***       #define FAR         /* nothing */
;|***       #define NEAR        /* nothing */
;|*** 
;|***       #define APIENTRY    _syscall
;|***       #define EXPENTRY    _syscall
;|*** 
;|***       #define PASCAL      /* nothing */
;|***    #endif
;|*** 
;|***    #define VOID        void
;|***    /* INC */
;|*** 
;|***    typedef unsigned long  APIRET;
;|***    typedef unsigned short APIRET16;
;|***    typedef unsigned long  APIRET32;
;|*** 
;|***    #ifndef FALSE
;|***       #define FALSE   0
;|***    #endif
;|*** 
;|***    #ifndef TRUE
;|***       #define TRUE    1
;|***    #endif
;|*** 
;|***    #ifndef NULL
;|***       #ifdef __IBMC__
;|***          #define NULL ((void *)0)
;|***       #else
;|***          #define NULL 0
;|***       #endif
;|***    #endif
;|*** 
;|***    #ifdef __IBMC__
;|***       typedef unsigned short   SHANDLE;
;|***    #else
;|***       /* TEMP      - David Kerr, this will change to short when the    */
;|***       /*             rest of the BSExxx.H files are changed to LHANDLE */
;|***       typedef unsigned long   SHANDLE;
;|***    #endif
;|***    typedef unsigned long    LHANDLE;
;|*** 
;|***    #define NULLHANDLE    ( (LHANDLE) 0)
;|***    #define NULLSHANDLE   ( (SHANDLE) 0)
;|*** 
;|***    /* NOINC */
;|***    #define CHAR    char            /* ch  */
;|***    #define SHORT   short           /* s   */
;|***    #define LONG    long            /* l   */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define INT  int             /* i   */
;|***    #endif /* !INCL_SAADEFS */
;|***    /* INC */
;|*** 
;|***    typedef unsigned char  UCHAR;   /* uch */
;|***    typedef unsigned short USHORT;  /* us  */
;|***    typedef unsigned long  ULONG;   /* ul  */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       typedef unsigned int UINT;   /* ui  */
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef __IBMC__
;|***       typedef UCHAR     * _Seg16 PUCHAR16;
;|***       typedef CHAR      * _Seg16 PCHAR16;
;|***    #endif
;|*** 
;|***    typedef unsigned char BYTE;     /* b   */
;|*** 
;|***    typedef unsigned char FAR  *PSZ;
;|***    typedef unsigned char NEAR *NPSZ;
;|*** 
;|***    typedef unsigned char FAR  *PCH;
;|***    typedef unsigned char NEAR *NPCH;
;|*** 
;|***    #ifdef __IBMC__
;|***       typedef int (* APIENTRY PFN)  ();
;|***       typedef int (* APIENTRY NPFN) ();
;|***    #else
;|***       typedef int   (PASCAL FAR  *PFN)();
;|***       typedef int   (PASCAL NEAR *NPFN)();
;|***    #endif
;|*** 
;|***    typedef BYTE   FAR  *PBYTE;
;|***    typedef BYTE   NEAR *NPBYTE;
;|*** 
;|***    typedef CHAR   FAR *PCHAR;
;|***    typedef SHORT  FAR *PSHORT;
;|***    typedef LONG   FAR *PLONG;
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       typedef INT    FAR *PINT;
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    typedef UCHAR  FAR *PUCHAR;
;|***    typedef USHORT FAR *PUSHORT;
;|***    typedef ULONG  FAR *PULONG;
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       typedef UINT FAR *PUINT;
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    typedef VOID   FAR *PVOID;
;|***    typedef PVOID  FAR *PPVOID;
;|*** 
;|***    typedef unsigned long BOOL;     /* f   */
;|***    typedef BOOL FAR *PBOOL;
;|*** 
;|***    typedef unsigned short  BOOL16;
;|***    #ifdef __IBMC__
;|***       typedef BOOL16     * _Seg16 PBOOL16;
;|***    #else
;|***       typedef BOOL16 FAR *PBOOL16;
;|***    #endif
;|*** 
;|***    /* NOINC */
;|***    #define BOOL32    BOOL
;|***    #define PBOOL32   PBOOL
;|***    /* INC */
;|*** 
;|***    /* NOINC */
;|***    /* Quad-word */
;|***    typedef struct _QWORD {        /* qword */
;|***       ULONG   ulLo;
;|***       ULONG   ulHi;
;|***    } QWORD;
;|***    typedef QWORD FAR *PQWORD;
;|***    /* INC */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       typedef unsigned short SEL;     /* sel */
;|***       typedef SEL FAR *PSEL;
;|*** 
;|***       /*** Useful Helper Macros */
;|*** 
;|***       /* Create untyped far pointer from selector and offset */
;|***       #ifdef __IBMC__
;|***          #define MAKEP(sel,off) ((void * _Seg16)((((sel)&0xfff8)<<13)|(off)))
;|***       #else
;|***          #define MAKEP(sel, off)     ((PVOID)MAKEULONG(off, sel))
;|***       #endif
;|*** 
;|***       /* Extract selector or offset from far pointer */
;|***       #ifdef __IBMC__
;|***          #define SELECTOROF(ptr)     ((((ULONG)(ptr))>>13)|7)
;|***       #else
;|***          #define SELECTOROF(p)       (((PUSHORT)&(p))[1])
;|***       #endif
;|***       #define OFFSETOF(p)         (((PUSHORT)&(p))[0])
;|***    #endif  /* !INCL_SAADEFS */
;|*** 
;|***    /* Cast any variable to an instance of the specified type. */
;|***    #define MAKETYPE(v, type)   (*((type FAR *)&v))
;|*** 
;|***    /* Calculate the byte offset of a field in a structure of type type. */
;|***    #define FIELDOFFSET(type, field)    ((SHORT)&(((type *)0)->field))
;|*** 
;|***    /* Combine l & h to form a 32 bit quantity. */
;|***    #define MAKEULONG(l, h)  ((ULONG)(((USHORT)(l)) | ((ULONG)((USHORT)(h))) << 16))
;|***    #define MAKELONG(l, h)   ((LONG)MAKEULONG(l, h))
;|*** 
;|***    /* Combine l & h to form a 16 bit quantity. */
;|***    #define MAKEUSHORT(l, h) (((USHORT)(l)) | ((USHORT)(h)) << 8)
;|***    #define MAKESHORT(l, h)  ((SHORT)MAKEUSHORT(l, h))
;|*** 
;|***    /* Extract high and low order parts of 16 and 32 bit quantity */
;|***    #define LOBYTE(w)       LOUCHAR(w)
;|***    #define HIBYTE(w)       HIUCHAR(w)
;|***    #define LOUCHAR(w)      ((UCHAR)(w))
;|***    #define HIUCHAR(w)      ((UCHAR)(((USHORT)(w) >> 8) & 0xff))
;|***    #define LOUSHORT(l)     ((USHORT)((ULONG)l))
;|***    #define HIUSHORT(l)     ((USHORT)(((ULONG)(l) >> 16) & 0xffff))
;|*** 
;|***    /*** Common Error definitions ****/
;|*** 
;|***    typedef ULONG ERRORID;  /* errid */
;|***    typedef ERRORID FAR *PERRORID;
;|*** 
;|***    /* Combine severity and error code to produce ERRORID */
;|***    #define MAKEERRORID(sev, error) (ERRORID)(MAKEULONG((error), (sev)))
;|*** 
;|***    /* Extract error number from an errorid */
;|***    #define ERRORIDERROR(errid)            (LOUSHORT(errid))
;|*** 
;|***    /* Extract severity from an errorid */
;|***    #define ERRORIDSEV(errid)              (HIUSHORT(errid))
;|*** 
;|***    /* Severity codes */
;|***    #define SEVERITY_NOERROR                    0x0000
;|***    #define SEVERITY_WARNING                    0x0004
;|***    #define SEVERITY_ERROR                      0x0008
;|***    #define SEVERITY_SEVERE                     0x000C
;|***    #define SEVERITY_UNRECOVERABLE              0x0010
;|*** 
;|***    /* Base component error values */
;|*** 
;|***    #define WINERR_BASE     0x1000  /* Window Manager                  */
;|***    #define GPIERR_BASE     0x2000  /* Graphics Presentation Interface */
;|***    #define DEVERR_BASE     0x3000  /* Device Manager                  */
;|***    #define SPLERR_BASE     0x4000  /* Spooler                         */
;|*** 
;|***    /*** Common types used across components */
;|*** 
;|***    /*** Common DOS types */
;|*** 
;|***    typedef LHANDLE HMODULE;        /* hmod */
;|***    typedef LHANDLE PID;            /* pid  */
;|***    typedef LHANDLE TID;            /* tid  */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       typedef USHORT  SGID;        /* sgid */
;|***    #endif  /* !INCL_SAADEFS */
;|*** 
;|***    typedef HMODULE FAR *PHMODULE;
;|***    typedef PID FAR *PPID;
;|***    typedef TID FAR *PTID;
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       typedef VOID FAR *HSEM;      /* hsem */
;|***       typedef HSEM FAR *PHSEM;
;|***    #endif  /* !INCL_SAADEFS */
;|*** 
;|***    /*** Common SUP types */
;|*** 
;|***    typedef LHANDLE   HAB;         /* hab  */
;|***    typedef HAB FAR *PHAB;
;|*** 
;|***    /*** Common GPI/DEV types */
;|*** 
;|***    typedef LHANDLE   HPS;         /* hps  */
;|***    typedef HPS FAR *PHPS;
;|*** 
;|***    typedef LHANDLE   HDC;         /* hdc  */
;|***    typedef HDC FAR *PHDC;
;|*** 
;|***    typedef LHANDLE   HRGN;        /* hrgn */
;|***    typedef HRGN FAR *PHRGN;
;|*** 
;|***    typedef LHANDLE   HBITMAP;     /* hbm  */
;|***    typedef HBITMAP FAR *PHBITMAP;
;|*** 
;|***    typedef LHANDLE   HMF;         /* hmf  */
;|***    typedef HMF FAR *PHMF;
;|*** 
;|***    typedef LHANDLE   HPAL;        /* hpal */
;|***    typedef HPAL FAR *PHPAL;
;|*** 
;|***    typedef LONG     COLOR;        /* clr  */
;|***    typedef COLOR FAR *PCOLOR;
;|*** 
;|***    typedef struct _POINTL  {      /* ptl  */
;|***       LONG  x;
;|***       LONG  y;
;|***    } POINTL;
;|***    typedef POINTL  FAR  *PPOINTL;
;|***    typedef POINTL  NEAR *NPPOINTL;
;|*** 
;|***    typedef struct _POINTS {       /* pts */
;|***       SHORT x;
;|***       SHORT y;
;|***    } POINTS;
;|***    typedef POINTS FAR *PPOINTS;
;|*** 
;|***    typedef struct _RECTL {        /* rcl */
;|***       LONG  xLeft;
;|***       LONG  yBottom;
;|***       LONG  xRight;
;|***       LONG  yTop;
;|***    } RECTL;
;|***    typedef RECTL FAR  *PRECTL;
;|***    typedef RECTL NEAR *NPRECTL;
;|*** 
;|***    typedef CHAR STR8[8];          /* str8 */
;|***    typedef STR8 FAR *PSTR8;
;|*** 
;|***    /*** common DEV/SPL types */
;|*** 
;|***    /* structure for Device Driver data */
;|*** 
;|***    typedef struct _DRIVDATA {     /* driv */
;|***       LONG    cb;
;|***       LONG    lVersion;
;|***       CHAR    szDeviceName[32];
;|***       CHAR    abGeneralData[1];
;|***    } DRIVDATA;
;|***    typedef DRIVDATA FAR *PDRIVDATA;
;|*** 
;|***    /* pointer data for DevOpenDC */
;|*** 
;|***    typedef PSZ FAR *PDEVOPENDATA;
;|*** 
;|***    /* array indices for array parameter for DevOpenDC, SplQmOpen or SplQpOpen */
;|*** 
;|***    #define ADDRESS          0
;|***    #ifndef INCL_SAADEFS
;|***       #define DRIVER_NAME      1
;|***       #define DRIVER_DATA      2
;|***       #define DATA_TYPE        3
;|***       #define COMMENT          4
;|***       #define PROC_NAME        5
;|***       #define PROC_PARAMS      6
;|***       #define SPL_PARAMS       7
;|***       #define NETWORK_PARAMS   8
;|*** 
;|***       /* structure definition as an alternative of the array parameter */
;|*** 
;|***       typedef struct _DEVOPENSTRUC {    /* dop */
;|***          PSZ        pszLogAddress;
;|***          PSZ        pszDriverName;
;|***          PDRIVDATA  pdriv;
;|***          PSZ        pszDataType;
;|***          PSZ        pszComment;
;|***          PSZ        pszQueueProcName;
;|***          PSZ        pszQueueProcParams;
;|***          PSZ        pszSpoolerParams;
;|***          PSZ        pszNetworkParams;
;|***       } DEVOPENSTRUC;
;|***       typedef DEVOPENSTRUC FAR *PDEVOPENSTRUC;
;|***    #endif  /* !INCL_SAADEFS */
;|*** 
;|***    /* common PMWP object and PMSTDDLG drag data */
;|*** 
;|***    typedef struct _PRINTDEST {   /* prntdst */
;|***       ULONG        cb;
;|***       LONG         lType;
;|***       PSZ          pszToken;
;|***       LONG         lCount;
;|***       PDEVOPENDATA pdopData;
;|***       ULONG        fl;
;|***       PSZ          pszPrinter;
;|***    } PRINTDEST;
;|***    typedef PRINTDEST FAR *PPRINTDEST;
;|*** 
;|***    #define PD_JOB_PROPERTY   0x0001      /* Flags for .fl field           */
;|*** 
;|***    /*** common AVIO/GPI types */
;|*** 
;|***    /* values of fsSelection field of FATTRS structure */
;|***    #define FATTR_SEL_ITALIC        0x0001
;|***    #define FATTR_SEL_UNDERSCORE    0x0002
;|***    #define FATTR_SEL_OUTLINE       0x0008
;|***    #define FATTR_SEL_STRIKEOUT     0x0010
;|***    #define FATTR_SEL_BOLD          0x0020
;|*** 
;|***    /* values of fsType field of FATTRS structure */
;|***    #define FATTR_TYPE_KERNING      0x0004
;|***    #define FATTR_TYPE_MBCS         0x0008
;|***    #define FATTR_TYPE_DBCS         0x0010
;|***    #define FATTR_TYPE_ANTIALIASED  0x0020
;|*** 
;|***    /* values of fsFontUse field of FATTRS structure */
;|***    #define FATTR_FONTUSE_NOMIX         0x0002
;|***    #define FATTR_FONTUSE_OUTLINE       0x0004
;|***    #define FATTR_FONTUSE_TRANSFORMABLE 0x0008
;|***    /* size for fields in the font structures */
;|*** 
;|***    #define FACESIZE 32
;|*** 
;|***    /* font struct for Vio/GpiCreateLogFont */
;|*** 
;|***    typedef struct _FATTRS {          /* fat */
;|***       USHORT  usRecordLength;
;|***       USHORT  fsSelection;
;|***       LONG    lMatch;
;|***       CHAR    szFacename[FACESIZE];
;|***       USHORT  idRegistry;
;|***       USHORT  usCodePage;
;|***       LONG    lMaxBaselineExt;
;|***       LONG    lAveCharWidth;
;|***       USHORT  fsType;
;|***       USHORT  fsFontUse;
;|***    } FATTRS;
;|***    typedef FATTRS FAR *PFATTRS;
;|*** 
;|***    /* values of fsType field of FONTMETRICS structure */
;|***    #define FM_TYPE_FIXED           0x0001
;|***    #define FM_TYPE_LICENSED        0x0002
;|***    #define FM_TYPE_KERNING         0x0004
;|***    #define FM_TYPE_DBCS            0x0010
;|***    #define FM_TYPE_MBCS            0x0018
;|***    #define FM_TYPE_64K             0x8000
;|***    #define FM_TYPE_ATOMS           0x4000
;|***    #define FM_TYPE_FAMTRUNC        0x2000
;|***    #define FM_TYPE_FACETRUNC       0x1000
;|*** 
;|***    /* values of fsDefn field of FONTMETRICS structure */
;|***    #define FM_DEFN_OUTLINE         0x0001
;|***    #define FM_DEFN_IFI             0x0002
;|***    #define FM_DEFN_WIN             0x0004
;|***    #define FM_DEFN_GENERIC         0x8000
;|*** 
;|***    /* values of fsSelection field of FONTMETRICS structure */
;|***    #define FM_SEL_ITALIC           0x0001
;|***    #define FM_SEL_UNDERSCORE       0x0002
;|***    #define FM_SEL_NEGATIVE         0x0004
;|***    #define FM_SEL_OUTLINE          0x0008          /* Hollow Outline Font */
;|***    #define FM_SEL_STRIKEOUT        0x0010
;|***    #define FM_SEL_BOLD             0x0020
;|***    #define FM_SEL_ISO9241_TESTED   0x0040
;|*** 
;|***    /* ISO 9241 is an international standard covering health and safety      */
;|***    /* in the work place for users of visual display terminals. Part 3 of    */
;|***    /* this standard covers clarity and legibility of text displayed on      */
;|***    /* computer screens, it places requirements on minimum sizes and         */
;|***    /* luminance contrast. The presence of FM_SEL_ISO9241_TESTED flag in the */
;|***    /* font metrics indicates that the font has been tested for compliance   */
;|***    /* to the standard. The FM_ISO_XXX flags indicate the results of the     */
;|***    /* test on the IBM 9515, 9517 and 9518 color displays at the supported   */
;|***    /* dimensions of 640x480 and 1024x768. To ensure compliance the          */
;|***    /* sXDeviceRes and sYDeviceRes must also match the target display        */
;|***    /* resolution.                                                           */
;|*** 
;|***    /* values of fbPassed/FailedISO field in the PANOSE structure */
;|***    #define FM_ISO_9518_640        0x01
;|***    #define FM_ISO_9515_640        0x02
;|***    #define FM_ISO_9515_1024       0x04
;|***    #define FM_ISO_9517_640        0x08
;|***    #define FM_ISO_9517_1024       0x10
;|*** 
;|***    /* values of fsCapabilities field of FONTMETRICS structure */
;|***    #define FM_CAP_NOMIX            0x0001
;|*** 
;|***    /* font metrics returned by GpiQueryFonts and others */
;|*** 
;|***    typedef struct _PANOSE { /* panose */
;|***       BYTE    bFamilyType;
;|***       BYTE    bSerifStyle;
;|***       BYTE    bWeight;
;|***       BYTE    bProportion;
;|***       BYTE    bContrast;
;|***       BYTE    bStrokeVariation;
;|***       BYTE    bArmStyle;
;|***       BYTE    bLetterform;
;|***       BYTE    bMidline;
;|***       BYTE    bXHeight;
;|***       BYTE    fbPassedISO;
;|***       BYTE    fbFailedISO;
;|***    } PANOSE;
;|*** 
;|***    typedef struct _FONTMETRICS {   /* fm */
;|***       CHAR    szFamilyname[FACESIZE];
;|***       CHAR    szFacename[FACESIZE];
;|***       USHORT  idRegistry;
;|***       USHORT  usCodePage;
;|***       LONG    lEmHeight;
;|***       LONG    lXHeight;
;|***       LONG    lMaxAscender;
;|***       LONG    lMaxDescender;
;|***       LONG    lLowerCaseAscent;
;|***       LONG    lLowerCaseDescent;
;|***       LONG    lInternalLeading;
;|***       LONG    lExternalLeading;
;|***       LONG    lAveCharWidth;
;|***       LONG    lMaxCharInc;
;|***       LONG    lEmInc;
;|***       LONG    lMaxBaselineExt;
;|***       SHORT   sCharSlope;
;|***       SHORT   sInlineDir;
;|***       SHORT   sCharRot;
;|***       USHORT  usWeightClass;
;|***       USHORT  usWidthClass;
;|***       SHORT   sXDeviceRes;
;|***       SHORT   sYDeviceRes;
;|***       SHORT   sFirstChar;
;|***       SHORT   sLastChar;
;|***       SHORT   sDefaultChar;
;|***       SHORT   sBreakChar;
;|***       SHORT   sNominalPointSize;
;|***       SHORT   sMinimumPointSize;
;|***       SHORT   sMaximumPointSize;
;|***       USHORT  fsType;
;|***       USHORT  fsDefn;
;|***       USHORT  fsSelection;
;|***       USHORT  fsCapabilities;
;|***       LONG    lSubscriptXSize;
;|***       LONG    lSubscriptYSize;
;|***       LONG    lSubscriptXOffset;
;|***       LONG    lSubscriptYOffset;
;|***       LONG    lSuperscriptXSize;
;|***       LONG    lSuperscriptYSize;
;|***       LONG    lSuperscriptXOffset;
;|***       LONG    lSuperscriptYOffset;
;|***       LONG    lUnderscoreSize;
;|***       LONG    lUnderscorePosition;
;|***       LONG    lStrikeoutSize;
;|***       LONG    lStrikeoutPosition;
;|***       SHORT   sKerningPairs;
;|***       SHORT   sFamilyClass;
;|***       LONG    lMatch;
;|***       LONG    FamilyNameAtom;
;|***       LONG    FaceNameAtom;
;|***       PANOSE  panose;
;|***    } FONTMETRICS;
;|***    typedef FONTMETRICS FAR *PFONTMETRICS;
;|*** 
;|***    /*** Common WIN types */
;|*** 
;|***    typedef LHANDLE HWND;      /* hwnd */
;|***    typedef HWND FAR *PHWND;
;|*** 
;|***    typedef LHANDLE HMQ;       /* hmq */
;|***    typedef LHANDLE FAR *PHMQ;
;|*** 
;|***    /* NOINC */
;|***    #define WRECT RECTL
;|***    #define PWRECT PRECTL
;|***    #define NPWRECT NPRECTL
;|*** 
;|***    #define WPOINT POINTL
;|***    #define PWPOINT PPOINTL
;|***    #define NPWPOINT NPPOINTL
;|***    /* INC */
;|*** 
;|***    typedef struct _ICONINFO {  /* icninf */
;|***       ULONG   cb;                  /* size of ICONINFO structure */
;|***       ULONG   fFormat;
;|***       PSZ     pszFileName;         /* use when fFormat = ICON_FILE */
;|***       HMODULE hmod;                /* use when fFormat = ICON_RESOURCE */
;|***       ULONG   resid;               /* use when fFormat = ICON_RESOURCE */
;|***       ULONG   cbIconData;          /* use when fFormat = ICON_DATA     */
;|***       PVOID   pIconData;           /* use when fFormat = ICON_DATA     */
;|***    } ICONINFO;
;|***    typedef ICONINFO FAR *PICONINFO;
;|*** 
;|***    #define ICON_FILE     1         /* flags for fFormat */
;|***    #define ICON_RESOURCE 2
;|***    #define ICON_DATA     3
;|***    #define ICON_CLEAR    4
;|*** 
;|*** #else /* not INCL_32 */
;|***    /* The previous #else/#endif corresponds to a #if near the top of this  */
;|***    /* file.  The next three lines include the 16-bit version of this file, */
;|***    /* hence these lines MUST be the last lines in this include file.       */
;|*** 
;|***    #ifdef INCL_16
;|***       #include <os2def16.h>
; Line 616
;|*** 
;|*** /* OS/2 Base Include File */
;|*** 
;|*** #ifndef INCL_NOBASEAPI
;|*** #include <bse.h>
; Line 47
;|*** /*DDK*************************************************************************/
;|*** /*                                                                           */
;|*** /* COPYRIGHT (C) Microsoft Corporation, 1989                                 */
;|*** /* COPYRIGHT    Copyright (C) 1995 IBM Corporation                           */
;|*** /*                                                                           */
;|*** /*    The following IBM OS/2 WARP source code is provided to you solely for  */
;|*** /*    the purpose of assisting you in your development of OS/2 WARP device   */
;|*** /*    drivers. You may use this code in accordance with the IBM License      */
;|*** /*    Agreement provided in the IBM Device Driver Source Kit for OS/2. This  */
;|*** /*    Copyright statement may not be removed.                                */
;|*** /*                                                                           */
;|*** /*****************************************************************************/
;|*** /*static char *SCCSID = "@(#)bse.h	6.2 91/02/12";*/
;|*** /*static char *SCCSID = "@(#)bse.h	6.2 91/02/12";*/
;|*** /****************************** Module Header ******************************\
;|*** *
;|*** * Module Name: BSE.H
;|*** *
;|*** * This file includes the definitions necessary for writing Base OS/2 applications.
;|*** *
;|*** *
;|*** *
;|*** *
;|*** * ===========================================================================
;|*** *
;|*** * The following symbols are used in this file for conditional sections.
;|*** *
;|*** *   INCL_BASE   -  ALL of OS/2 Base
;|*** *   INCL_DOS    -  OS/2 DOS Kernel
;|*** *   INCL_SUB    -  OS/2 VIO/KBD/MOU
;|*** *   INCL_DOSERRORS -  OS/2 Errors         - only included if symbol defined
;|*** *
;|*** \***************************************************************************/
;|*** 
;|*** #define INCL_BASEINCLUDED
;|*** 
;|*** /* if INCL_BASE defined then define all the symbols */
;|*** #ifdef INCL_BASE
;|***     #define INCL_DOS
;|***     #define INCL_SUB
;|***     #define INCL_DOSERRORS
;|*** #endif /* INCL_BASE */
;|*** 
;|*** #ifndef OS2_INCLUDED
;|*** #if !(defined(INCL_32) || defined(INCL_16))
;|*** #ifdef M_I386
;|***     #define INCL_32
;|*** #else /* not M_I386 */
;|***     #define INCL_16
;|*** #endif /* M_I386 */
;|*** #endif /* INCL_32 || INCL_16 */
;|*** #endif /* OS2_INCLUDED */
;|*** 
;|*** /* XLATOFF */
;|*** #ifdef INCL_32
;|*** #if defined(INCL_16)
;|*** #error message ("Illegal combination of API Flags - 32 && 16")
;|*** #endif /* || INCL_16 */
;|*** #endif /* INCL_32 */
;|*** /* XLATON */
;|*** 
;|*** #include <bsedos.h>       /* Base definitions */
; Line 62
;|*** /*DDK*************************************************************************/
;|*** /*                                                                           */
;|*** /* COPYRIGHT (C) Microsoft Corporation, 1989                                 */
;|*** /* COPYRIGHT    Copyright (C) 1995 IBM Corporation                           */
;|*** /*                                                                           */
;|*** /*    The following IBM OS/2 WARP source code is provided to you solely for  */
;|*** /*    the purpose of assisting you in your development of OS/2 WARP device   */
;|*** /*    drivers. You may use this code in accordance with the IBM License      */
;|*** /*    Agreement provided in the IBM Device Driver Source Kit for OS/2. This  */
;|*** /*    Copyright statement may not be removed.                                */
;|*** /*                                                                           */
;|*** /*****************************************************************************/
;|*** /*static char *SCCSID = "@(#)bsedos.h   6.29 92/03/10";*/
;|*** /***************************************************************************\
;|*** *
;|*** * Module Name: BSEDOS.H
;|*** *
;|*** * OS/2 Base Include File
;|*** *
;|*** *
;|*** *****************************************************************************
;|*** *
;|*** * Subcomponents marked with "+" are partially included by default
;|*** *
;|*** *   #define:                To include:
;|*** *
;|*** * + INCL_DOSPROCESS         Process and thread support
;|*** * + INCL_DOSFILEMGR         File Management
;|*** * + INCL_DOSMEMMGR          Memory Management
;|*** * + INCL_DOSSEMAPHORES      Semaphore support
;|*** * + INCL_DOSDATETIME        Date/Time and Timer support
;|*** *   INCL_DOSMODULEMGR       Module manager
;|*** * + INCL_DOSRESOURCES       Resource support
;|*** *   INCL_DOSNLS             National Language Support
;|*** *   INCL_DOSEXCEPTIONS      Exceptions
;|*** *   INCL_DOSMISC            Miscellaneous
;|*** *   INCL_DOSMONITORS        Monitors
;|*** *   INCL_DOSQUEUES          Queues
;|*** *   INCL_DOSSESMGR          Session Manager Support
;|*** *   INCL_DOSDEVICES         Device specific, ring 2 support
;|*** *   INCL_DOSNMPIPES         Named Pipes Support
;|*** *   INCL_DOSPROFILE         DosProfile API
;|*** *   INCL_DOSMVDM            MVDM support
;|*** *
;|*** \***************************************************************************/
;|*** 
;|*** #define INCL_DOSINCLUDED
;|*** 
;|*** #ifndef INCL_BASEINCLUDED
;|*** #if !(defined(INCL_32) || defined(INCL_16))
;|*** #ifdef M_I386
;|***     #define INCL_32
;|*** #else /* not M_I386 */
;|***     #define INCL_16
;|*** #endif /* M_I386 */
;|*** #endif /* INCL_32 || INCL_16 */
;|*** 
;|*** /* XLATOFF */
;|*** #if defined(INCL_16)
;|*** #pragma message ("32-bit Base API included when using 16-bit compiler")
;|*** #endif /* INCL_16 */
;|*** /* XLATON */
;|*** #endif /* INCL_BASEINCLUDED */
;|*** 
;|*** #ifdef INCL_32  /* This #ifdef brackets the rest of this entire */
;|***                         /* file.  It is used to include either the      */
;|***                         /* 32-bit or 16-bit base definitions.  No       */
;|***                         /* definitions (other than 16/32-bit            */
;|***                         /* determination) must be placed above this.    */
;|*** 
;|*** #ifdef INCL_DOS
;|*** 
;|*** #define INCL_DOSPROCESS
;|*** #define INCL_DOSFILEMGR
;|*** #define INCL_DOSMEMMGR
;|*** #define INCL_DOSSEMAPHORES
;|*** #define INCL_DOSDATETIME
;|*** #define INCL_DOSMODULEMGR
;|*** #define INCL_DOSRESOURCES
;|*** #define INCL_DOSNLS
;|*** #define INCL_DOSEXCEPTIONS
;|*** #define INCL_DOSMISC
;|*** #define INCL_DOSMONITORS
;|*** #define INCL_DOSQUEUES
;|*** #define INCL_DOSSESMGR
;|*** #define INCL_DOSDEVICES
;|*** #define INCL_DOSNMPIPES
;|*** #define INCL_DOSPROFILE
;|*** #define INCL_DOSMVDM
;|*** 
;|*** #endif /* INCL_DOS */
;|*** 
;|*** #ifdef INCL_ERRORS
;|*** #define INCL_DOSERRORS
;|*** #endif /* INCL_ERRORS */
;|*** 
;|*** #if (defined(INCL_DOSPROCESS) || !defined(INCL_NOCOMMON))
;|*** 
;|*** /*** General services */
;|*** 
;|*** APIRET  APIENTRY        DosBeep(ULONG freq, ULONG dur);
;|*** 
;|*** /*** Process and Thread support */
;|*** 
;|*** VOID    APIENTRY        DosExit(ULONG action, ULONG result);
;|*** 
;|*** /* DosExit codes */
;|*** 
;|*** #define EXIT_THREAD         0
;|*** #define EXIT_PROCESS        1
;|*** 
;|*** #endif /* common INCL_DOSPROCESS stuff */
;|*** 
;|*** #ifdef INCL_DOSPROCESS
;|*** 
;|*** /* XLATOFF */
;|*** #define DosCwait        DosWaitChild
;|*** #define DosSetPrty      DosSetPriority
;|*** /* XLATON */
;|*** 
;|*** #include <bsetib.h>
;|*** 
;|*** typedef VOID (*PFNTHREAD)(VOID);
;|*** 
;|*** APIRET  APIENTRY        DosCreateThread(PTID ptid, PFNTHREAD pfn, ULONG param, ULONG flag, ULONG cbStack);
;|*** 
;|*** APIRET  APIENTRY        DosResumeThread(TID tid);
;|*** 
;|*** APIRET  APIENTRY        DosSuspendThread(TID tid);
;|*** 
;|*** APIRET  APIENTRY        DosGetInfoBlocks(PTIB *pptib,PPIB *pppib);
;|*** 
;|*** APIRET  APIENTRY        DosKillThread(TID tid);
;|*** 
;|*** APIRET APIENTRY DosAllocThreadLocalMemory(ULONG cb, PULONG *p);
;|*** APIRET APIENTRY DosFreeThreadLocalMemory(ULONG *p);
;|*** 
;|*** /* Action code values */
;|*** 
;|*** #define DCWA_PROCESS        0
;|*** #define DCWA_PROCESSTREE    1
;|*** 
;|*** /* Wait option values */
;|*** 
;|*** #define DCWW_WAIT   0
;|*** #define DCWW_NOWAIT 1
;|*** 
;|*** /* Thread Flags for DosCreateThread options 59468 */
;|*** 
;|*** #define CREATE_READY        0
;|*** #define CREATE_SUSPENDED    1
;|*** #define STACK_SPARSE        0
;|*** #define STACK_COMMITTED     2
;|*** 
;|*** typedef struct _RESULTCODES {     /* resc */
;|***     ULONG codeTerminate;
;|***     ULONG codeResult;
;|*** } RESULTCODES;
;|*** typedef RESULTCODES     *PRESULTCODES;
;|*** 
;|*** APIRET  APIENTRY        DosWaitChild(ULONG action, ULONG option, PRESULTCODES pres, PPID ppid, PID pid);
;|*** 
;|*** APIRET  APIENTRY        DosWaitThread(PTID ptid, ULONG option);
;|*** 
;|*** APIRET  APIENTRY        DosSleep(ULONG msec);
;|*** 
;|*** APIRET  APIENTRY        DosDebug(PVOID pdbgbuf);
;|*** 
;|*** 
;|*** /* codeTerminate values (also passed to ExitList routines) */
;|*** 
;|*** #define TC_EXIT          0
;|*** #define TC_HARDERROR     1
;|*** #define TC_TRAP          2
;|*** #define TC_KILLPROCESS   3
;|*** #define TC_EXCEPTION     4
;|*** 
;|*** typedef VOID    (*PFNEXITLIST)(ULONG);
;|*** 
;|*** APIRET  APIENTRY        DosEnterCritSec(VOID);
;|*** 
;|*** APIRET  APIENTRY        DosExitCritSec(VOID);
;|*** 
;|*** APIRET  APIENTRY        DosExitList(ULONG ordercode, PFNEXITLIST pfn);
;|*** 
;|*** /* DosExitList functions */
;|*** 
;|*** #define EXLST_ADD       1
;|*** #define EXLST_REMOVE    2
;|*** #define EXLST_EXIT      3
;|*** 
;|*** APIRET  APIENTRY        DosExecPgm(PCHAR pObjname, LONG cbObjname, ULONG execFlag, PSZ pArg, PSZ pEnv, PRESULTCODES pRes, PSZ pName);
;|*** 
;|*** /* DosExecPgm functions */
;|*** 
;|*** #define EXEC_SYNC           0
;|*** #define EXEC_ASYNC          1
;|*** #define EXEC_ASYNCRESULT    2
;|*** #define EXEC_TRACE          3
;|*** #define EXEC_BACKGROUND     4
;|*** #define EXEC_LOAD           5
;|*** #define EXEC_ASYNCRESULTDB  6
;|*** 
;|*** 
;|*** APIRET  APIENTRY        DosSetPriority(ULONG scope, ULONG class, LONG delta, ULONG PorTid);
;|*** 
;|*** /* Priority scopes */
;|*** 
;|*** #define PRTYS_PROCESS       0
;|*** #define PRTYS_PROCESSTREE   1
;|*** #define PRTYS_THREAD        2
;|*** 
;|*** /* Priority classes */
;|*** 
;|*** #define PRTYC_NOCHANGE      0
;|*** #define PRTYC_IDLETIME      1
;|*** #define PRTYC_REGULAR       2
;|*** #define PRTYC_TIMECRITICAL  3
;|*** #define PRTYC_FOREGROUNDSERVER  4
;|*** 
;|*** /* Priority deltas */
;|*** 
;|*** #define PRTYD_MINIMUM      -31
;|*** #define PRTYD_MAXIMUM       31
;|*** 
;|*** APIRET  APIENTRY        DosKillProcess(ULONG action, PID pid);
;|*** 
;|*** #define DKP_PROCESSTREE     0
;|*** #define DKP_PROCESS         1
;|*** 
;|*** #endif /* INCL_DOSPROCESS */
;|*** 
;|*** #ifndef INCL_SAADEFS
;|*** 
;|*** /*
;|***  * CCHMAXPATH is the maximum fully qualified path name length including
;|***  * the drive letter, colon, backslashes and terminating NULL.
;|***  */
;|*** #define CCHMAXPATH      260
;|*** 
;|*** /*
;|***  * CCHMAXPATHCOMP is the maximum individual path component name length
;|***  * including a terminating NULL.
;|***  */
;|*** #define CCHMAXPATHCOMP  256
;|*** 
;|*** #endif  /* !INCL_SAADEFS */
;|*** 
;|*** #if (defined(INCL_DOSFILEMGR) || !defined(INCL_NOCOMMON))
;|*** 
;|*** /*** File manager */
;|*** 
;|*** /* DosSetFilePtr() file position codes */
;|*** 
;|*** #define FILE_BEGIN      0x0000  /* Move relative to beginning of file */
;|*** #define FILE_CURRENT    0x0001  /* Move relative to current fptr position */
;|*** #define FILE_END        0x0002  /* Move relative to end of file */
;|*** 
;|*** /* DosFindFirst/Next Directory handle types */
;|*** 
;|*** #define HDIR_SYSTEM     1       /* Use system handle (1) */
;|*** #define HDIR_CREATE     (-1)    /* Allocate a new, unused handle */
;|*** 
;|*** /* DosCopy control bits; may be or'ed together */
;|*** #define DCPY_EXISTING   0x00001         /* Copy even if target exists */
;|*** #define DCPY_APPEND     0x00002         /* Append to existing file, do not replace */
;|*** #define DCPY_FAILEAS    0x00004         /* Fail if EAs not supported on target*/
;|*** 
;|*** /* DosOpen/DosQFHandState/DosQueryFileInfo et al file attributes; also */
;|*** /* known as Dos File Mode bits... */
;|*** #define FILE_NORMAL     0x0000
;|*** #define FILE_READONLY   0x0001
;|*** #define FILE_HIDDEN     0x0002
;|*** #define FILE_SYSTEM     0x0004
;|*** #define FILE_DIRECTORY  0x0010
;|*** #define FILE_ARCHIVED   0x0020
;|*** 
;|*** 
;|*** #define MUST_HAVE_READONLY      ( (FILE_READONLY  << 8) | FILE_READONLY  )
;|*** #define MUST_HAVE_HIDDEN        ( (FILE_HIDDEN    << 8) | FILE_HIDDEN    )
;|*** #define MUST_HAVE_SYSTEM        ( (FILE_SYSTEM    << 8) | FILE_SYSTEM    )
;|*** #define MUST_HAVE_DIRECTORY     ( (FILE_DIRECTORY << 8) | FILE_DIRECTORY )
;|*** #define MUST_HAVE_ARCHIVED      ( (FILE_ARCHIVED  << 8) | FILE_ARCHIVED  )
;|*** 
;|*** /* DosOpen() actions */
;|*** 
;|*** #define FILE_EXISTED    0x0001
;|*** #define FILE_CREATED    0x0002
;|*** #define FILE_TRUNCATED  0x0003
;|*** 
;|*** /* DosOpen() open flags */
;|*** #define FILE_OPEN                  0x0001
;|*** #define FILE_TRUNCATE              0x0002
;|*** #define FILE_CREATE                0x0010
;|*** 
;|*** /*     this nibble applies if file already exists                xxxx */
;|*** 
;|*** #define OPEN_ACTION_FAIL_IF_EXISTS     0x0000  /* ---- ---- ---- 0000 */
;|*** #define OPEN_ACTION_OPEN_IF_EXISTS     0x0001  /* ---- ---- ---- 0001 */
;|*** #define OPEN_ACTION_REPLACE_IF_EXISTS  0x0002  /* ---- ---- ---- 0010 */
;|*** 
;|*** /*     this nibble applies if file does not exist           xxxx      */
;|*** 
;|*** #define OPEN_ACTION_FAIL_IF_NEW        0x0000  /* ---- ---- 0000 ---- */
;|*** #define OPEN_ACTION_CREATE_IF_NEW      0x0010  /* ---- ---- 0001 ---- */
;|*** 
;|*** /* DosOpen/DosSetFHandState flags */
;|*** 
;|*** #define OPEN_ACCESS_READONLY        0x0000  /* ---- ---- ---- -000 */
;|*** #define OPEN_ACCESS_WRITEONLY       0x0001  /* ---- ---- ---- -001 */
;|*** #define OPEN_ACCESS_READWRITE       0x0002  /* ---- ---- ---- -010 */
;|*** #define OPEN_SHARE_DENYREADWRITE    0x0010  /* ---- ---- -001 ---- */
;|*** #define OPEN_SHARE_DENYWRITE        0x0020  /* ---- ---- -010 ---- */
;|*** #define OPEN_SHARE_DENYREAD         0x0030  /* ---- ---- -011 ---- */
;|*** #define OPEN_SHARE_DENYNONE         0x0040  /* ---- ---- -100 ---- */
;|*** #define OPEN_FLAGS_NOINHERIT        0x0080  /* ---- ---- 1--- ---- */
;|*** #define OPEN_FLAGS_NO_LOCALITY      0x0000  /* ---- -000 ---- ---- */
;|*** #define OPEN_FLAGS_SEQUENTIAL       0x0100  /* ---- -001 ---- ---- */
;|*** #define OPEN_FLAGS_RANDOM           0x0200  /* ---- -010 ---- ---- */
;|*** #define OPEN_FLAGS_RANDOMSEQUENTIAL 0x0300  /* ---- -011 ---- ---- */
;|*** #define OPEN_FLAGS_NO_CACHE         0x1000  /* ---1 ---- ---- ---- */
;|*** #define OPEN_FLAGS_FAIL_ON_ERROR    0x2000  /* --1- ---- ---- ---- */
;|*** #define OPEN_FLAGS_WRITE_THROUGH    0x4000  /* -1-- ---- ---- ---- */
;|*** #define OPEN_FLAGS_DASD             0x8000  /* 1--- ---- ---- ---- */
;|*** #define OPEN_FLAGS_NONSPOOLED       0x00040000
;|*** #define OPEN_FLAGS_PROTECTED_HANDLE 0x40000000
;|*** 
;|*** 
;|*** /* DosSearchPath() constants */
;|*** 
;|*** #define SEARCH_PATH            0x0000
;|*** #define SEARCH_CUR_DIRECTORY   0x0001
;|*** #define SEARCH_ENVIRONMENT     0x0002
;|*** #define SEARCH_IGNORENETERRS   0x0004
;|*** 
;|*** 
;|*** /************************************************************
;|*** EA Info Levels & Find First/Next
;|*** =========================================
;|*** API's: DosFindFirst, DosQueryFileInfo, DosQueryPathInfo, DosSetFileInfo,
;|***        DosSetPathInfo
;|*** ************************************************************/
;|*** 
;|*** /* File info levels&gml All listed API's */
;|*** #define FIL_STANDARD            1       /* Info level 1, standard file info */
;|*** #define FIL_QUERYEASIZE         2       /* Level 2, return Full EA size */
;|*** #define FIL_QUERYEASFROMLIST    3       /* Level 3, return requested EA's */
;|*** 
;|*** /* File info levels: Dos...PathInfo only */
;|*** #define FIL_QUERYFULLNAME       5       /* Level 5, return fully qualified
;|***                                            name of file */
;|*** /* DosFsAttach() */
;|*** /* Attact or detach */
;|*** #define FS_ATTACH       0       /* Attach file server */
;|*** #define FS_DETACH       1       /* Detach file server */
;|*** #define FS_SPOOLATTACH  2       /* Register a spooler device */
;|*** #define FS_SPOOLDETACH  3       /* De-register a spooler device */
;|*** 
;|*** 
;|*** /* DosFsCtl() */
;|*** /* Routing type */
;|*** #define FSCTL_HANDLE    1       /* File Handle directs req routing */
;|*** #define FSCTL_PATHNAME  2       /* Path Name directs req routing */
;|*** #define FSCTL_FSDNAME   3       /* FSD Name directs req routing */
;|*** 
;|*** /* defined FSCTL functions */
;|*** #define FSCTL_ERROR_INFO        1       /* return error info from FSD */
;|*** #define FSCTL_MAX_EASIZE        2       /* Max ea size for the FSD */
;|*** 
;|*** typedef struct  _EASIZEBUF {    /* struct for FSCTL fn 2 - max ea size */
;|***         USHORT  cbMaxEASize;    /* max. size of one EA */
;|***         ULONG   cbMaxEAListSize;        /* max size of the full EA List */
;|*** } EASIZEBUF;
;|*** typedef EASIZEBUF FAR * PEASIZEBUF;
;|*** 
;|*** 
;|*** /* DosQueryFSAttach() */
;|*** /* Information level types (defines method of query) */
;|*** #define FSAIL_QUERYNAME 1       /* Return data for a Drive or Device */
;|*** #define FSAIL_DEVNUMBER 2       /* Return data for Ordinal Device # */
;|*** #define FSAIL_DRVNUMBER 3       /* Return data for Ordinal Drive # */
;|*** 
;|*** /* Item types (from data structure item "iType") */
;|*** #define FSAT_CHARDEV    1       /* Resident character device */
;|*** #define FSAT_PSEUDODEV  2       /* Pseudo-character device */
;|*** #define FSAT_LOCALDRV   3       /* Local drive */
;|*** #define FSAT_REMOTEDRV  4       /* Remote drive attached to FSD */
;|*** 
;|*** 
;|*** typedef struct  _FSQBUFFER {    /* fsqbuf Data structure for QFSAttach*/
;|***     USHORT      iType;          /* Item type */
;|***     USHORT      cbName;         /* Length of item name, sans NULL */
;|***     UCHAR       szName[1];      /* ASCIIZ item name */
;|***     USHORT      cbFSDName;      /* Length of FSD name, sans NULL */
;|***     UCHAR       szFSDName[1];   /* ASCIIZ FSD name */
;|***     USHORT      cbFSAData;      /* Length of FSD Attach data returned */
;|***     UCHAR       rgFSAData[1];   /* FSD Attach data from FSD */
;|*** } FSQBUFFER;
;|*** typedef FSQBUFFER FAR *PFSQBUFFER;
;|*** 
;|*** 
;|*** typedef struct _FSQBUFFER2 {    /* fsqbuf Data structure for QFSAttach*/
;|***     USHORT  iType;
;|***     USHORT  cbName;
;|***     USHORT  cbFSDName;
;|***     USHORT  cbFSAData;
;|***     UCHAR   szName[1];
;|***     UCHAR   szFSDName[1];
;|***     UCHAR   rgFSAData[1];
;|*** } FSQBUFFER2;
;|*** 
;|*** typedef FSQBUFFER2 FAR * PFSQBUFFER2;
;|*** 
;|*** typedef struct _SPOOLATTACH {   /* Data structure for spooler operations */
;|***     USHORT      hNmPipe;        /* Named pipe handle                     */
;|***     ULONG       ulKey;          /* Attached key                          */
;|*** } SPOOLATTACH;
;|*** typedef SPOOLATTACH FAR *PSPOOLATTACH;
;|*** 
;|*** /***********
;|*** File System Drive Information&gml DosQueryFSInfo DosSetFSInfo
;|*** ***********/
;|*** 
;|*** /* FS Drive Info Levels */
;|*** #define FSIL_ALLOC      1       /* Drive allocation info (Query only) */
;|*** #define FSIL_VOLSER     2       /* Drive Volum/Serial info */
;|*** 
;|*** /* DosQueryFHType() */
;|*** /* Handle classes (low 8 bits of Handle Type) */
;|*** #define FHT_DISKFILE    0x0000          /* Disk file handle */
;|*** #define FHT_CHRDEV      0x0001          /* Character device handle */
;|*** #define FHT_PIPE        0x0002          /* Pipe handle */
;|*** 
;|*** /* Handle bits (high 8 bits of Handle Type) */
;|*** #define FHB_DSKREMOTE           0x8000  /* Remote disk */
;|*** #define FHB_CHRDEVREMOTE        0x8000  /* Remote character device */
;|*** #define FHB_PIPEREMOTE          0x8000  /* Remote pipe */
;|*** 
;|*** #ifndef INCL_SAADEFS
;|*** 
;|*** /* File time and date types */
;|*** 
;|*** typedef struct _FTIME {         /* ftime */
;|***     USHORT twosecs : 5;
;|***     USHORT minutes : 6;
;|***     USHORT hours   : 5;
;|*** } FTIME;
;|*** typedef FTIME   *PFTIME;
;|*** 
;|*** typedef struct _FDATE {         /* fdate */
;|***     USHORT day     : 5;
;|***     USHORT month   : 4;
;|***     USHORT year    : 7;
;|*** } FDATE;
;|*** typedef FDATE   *PFDATE;
;|*** 
;|*** #endif /* INCL_SAADEFS */
;|*** 
;|*** typedef struct _VOLUMELABEL {    /* vol */
;|***     BYTE cch;
;|***     CHAR szVolLabel[12];
;|*** } VOLUMELABEL;
;|*** typedef VOLUMELABEL FAR *PVOLUMELABEL;
;|*** 
;|*** typedef struct _FSINFO {    /* fsinf */
;|***     ULONG ulVSN;
;|***     VOLUMELABEL vol;
;|*** } FSINFO;
;|*** typedef FSINFO FAR *PFSINFO;
;|*** 
;|*** /* HANDTYPE values */
;|*** 
;|*** #define HANDTYPE_FILE     0x0000
;|*** #define HANDTYPE_DEVICE   0x0001
;|*** #define HANDTYPE_PIPE     0x0002
;|*** #define HANDTYPE_PROTECTED 0x4000
;|*** #define HANDTYPE_NETWORK  0x8000
;|*** 
;|*** typedef struct _FILELOCK {    /* flock */
;|***     LONG lOffset;
;|***     LONG lRange;
;|*** } FILELOCK;
;|*** typedef FILELOCK FAR *PFILELOCK;
;|*** 
;|*** typedef SHANDLE HFILE;     /* hf */
;|*** typedef HFILE   *PHFILE;
;|*** 
;|*** typedef  ULONG    HEV;             /* hev */
;|*** typedef  HEV      *PHEV;
;|*** typedef  ULONG  FHLOCK;
;|*** typedef  PULONG  PFHLOCK;
;|*** 
;|*** APIRET  APIENTRY        DosSetFileLocks(HFILE hFile, PFILELOCK pflUnlock, PFILELOCK pflLock, ULONG timeout, ULONG flags);
;|*** APIRET  APIENTRY        DosProtectSetFileLocks(HFILE hFile,
;|***                                                PFILELOCK pflUnlock,
;|***                                                PFILELOCK pflLock,
;|***                                                ULONG timeout, ULONG flags,
;|***                                                FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosCancelLockRequest(HFILE hFile, PFILELOCK pflLock);
;|*** 
;|*** #ifndef INCL_SAADEFS
;|*** 
;|*** typedef struct _FILEFINDBUF {   /* findbuf */
;|***     FDATE  fdateCreation;
;|***     FTIME  ftimeCreation;
;|***     FDATE  fdateLastAccess;
;|***     FTIME  ftimeLastAccess;
;|***     FDATE  fdateLastWrite;
;|***     FTIME  ftimeLastWrite;
;|***     ULONG  cbFile;
;|***     ULONG  cbFileAlloc;
;|***     USHORT attrFile;
;|***     UCHAR  cchName;
;|***     CHAR   achName[CCHMAXPATHCOMP];
;|*** } FILEFINDBUF;
;|*** typedef FILEFINDBUF     *PFILEFINDBUF;
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack(2)
;|*** /* XLATON */
;|*** 
;|*** typedef struct _FILEFINDBUF2 {  /* findbuf2 */
;|***     FDATE  fdateCreation;
;|***     FTIME  ftimeCreation;
;|***     FDATE  fdateLastAccess;
;|***     FTIME  ftimeLastAccess;
;|***     FDATE  fdateLastWrite;
;|***     FTIME  ftimeLastWrite;
;|***     ULONG  cbFile;
;|***     ULONG  cbFileAlloc;
;|***     USHORT attrFile;
;|***     ULONG  cbList;
;|***     UCHAR  cchName;
;|***     CHAR   achName[CCHMAXPATHCOMP];
;|*** } FILEFINDBUF2;
;|*** typedef FILEFINDBUF2    *PFILEFINDBUF2;
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack()
;|*** /* XLATON */
;|*** 
;|*** typedef struct _FILEFINDBUF3 {   /* findbuf3 */
;|***     ULONG   oNextEntryOffset;                   /* new field */
;|***     FDATE   fdateCreation;
;|***     FTIME   ftimeCreation;
;|***     FDATE   fdateLastAccess;
;|***     FTIME   ftimeLastAccess;
;|***     FDATE   fdateLastWrite;
;|***     FTIME   ftimeLastWrite;
;|***     ULONG   cbFile;
;|***     ULONG   cbFileAlloc;
;|***     ULONG   attrFile;                           /* widened field */
;|***     UCHAR   cchName;
;|***     CHAR    achName[CCHMAXPATHCOMP];
;|*** } FILEFINDBUF3;
;|*** typedef FILEFINDBUF3    *PFILEFINDBUF3;
;|*** 
;|*** typedef struct _FILEFINDBUF4 {   /* findbuf4 */
;|***     ULONG   oNextEntryOffset;                   /* new field */
;|***     FDATE   fdateCreation;
;|***     FTIME   ftimeCreation;
;|***     FDATE   fdateLastAccess;
;|***     FTIME   ftimeLastAccess;
;|***     FDATE   fdateLastWrite;
;|***     FTIME   ftimeLastWrite;
;|***     ULONG   cbFile;
;|***     ULONG   cbFileAlloc;
;|***     ULONG   attrFile;                           /* widened field */
;|***     ULONG   cbList;
;|***     UCHAR   cchName;
;|***     CHAR    achName[CCHMAXPATHCOMP];
;|*** } FILEFINDBUF4;
;|*** typedef FILEFINDBUF4    *PFILEFINDBUF4;
;|*** 
;|*** /* extended attribute structures */
;|*** 
;|*** typedef struct _GEA {       /* gea */
;|***     BYTE cbName;            /* name length not including NULL */
;|***     CHAR szName[1];         /* attribute name */
;|*** } GEA;
;|*** typedef GEA     *PGEA;
;|*** 
;|*** typedef struct _GEALIST {   /* geal */
;|***     ULONG cbList;           /* total bytes of structure including full list */
;|***     GEA list[1];            /* variable length GEA structures */
;|*** } GEALIST;
;|*** typedef GEALIST* PGEALIST;
;|*** 
;|*** typedef struct _FEA {       /* fea */
;|***     BYTE fEA;               /* flags                              */
;|***     BYTE cbName;            /* name length not including NULL */
;|***     USHORT cbValue;         /* value length */
;|*** } FEA;
;|*** typedef FEA     *PFEA;
;|*** 
;|*** /* flags for _FEA.fEA */
;|*** 
;|*** #define FEA_NEEDEA 0x80     /* need EA bit */
;|*** 
;|*** typedef struct _FEALIST {   /* feal */
;|***     ULONG cbList;           /* total bytes of structure including full list */
;|***     FEA list[1];            /* variable length FEA structures */
;|*** } FEALIST;
;|*** typedef FEALIST* PFEALIST;
;|*** 
;|*** typedef struct _EAOP {      /* eaop */
;|***     PGEALIST fpGEAList;     /* general EA list */
;|***     PFEALIST fpFEAList;     /* full EA list */
;|***     ULONG oError;
;|*** } EAOP;
;|*** typedef EAOP* PEAOP;
;|*** 
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack(1)
;|*** /* XLATON */
;|*** 
;|*** typedef struct _FEA2 {      /* fea2 */
;|***     ULONG   oNextEntryOffset;                   /* new field */
;|***     BYTE    fEA;
;|***     BYTE    cbName;
;|***     USHORT  cbValue;
;|***     CHAR    szName[1];                          /* new field */
;|*** } FEA2;
;|*** 
;|*** typedef FEA2 *PFEA2;
;|*** 
;|*** /* flags for _FEA.fEA */
;|*** 
;|*** #define FEA_NEEDEA 0x80     /* need EA bit */
;|*** 
;|*** typedef struct _FEA2LIST {    /* fea2l */
;|***     ULONG   cbList;
;|***     FEA2    list[1];
;|*** } FEA2LIST;
;|*** 
;|*** typedef FEA2LIST *PFEA2LIST;
;|*** 
;|*** typedef struct _GEA2 {        /* gea2 */
;|***     ULONG   oNextEntryOffset;                   /* new field */
;|***     BYTE    cbName;
;|***     CHAR    szName[1];                          /* new field */
;|*** } GEA2;
;|*** 
;|*** typedef GEA2 *PGEA2;
;|*** 
;|*** typedef struct _GEA2LIST {    /* gea2l */
;|***     ULONG   cbList;
;|***     GEA2    list[1];
;|*** } GEA2LIST;
;|*** 
;|*** typedef GEA2LIST *PGEA2LIST;
;|*** 
;|*** typedef struct _EAOP2 {      /* eaop2 */
;|***     PGEA2LIST   fpGEA2List;                     /* GEA set */
;|***     PFEA2LIST   fpFEA2List;                     /* FEA set */
;|***     ULONG       oError;                         /* offset of FEA error */
;|*** } EAOP2;
;|*** 
;|*** typedef EAOP2 *PEAOP2;
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack()
;|*** /* XLATON */
;|*** 
;|*** /*
;|***  * Equates for the types of EAs that follow the convention that we have
;|***  * established.
;|***  *
;|***  * Values 0xFFFE thru 0x8000 are reserved.
;|***  * Values 0x0000 thru 0x7fff are user definable.
;|***  * Value  0xFFFC is not used
;|***  */
;|*** 
;|*** #define EAT_BINARY      0xFFFE          /* length preceeded binary */
;|*** #define EAT_ASCII       0xFFFD          /* length preceeded ASCII */
;|*** #define EAT_BITMAP      0xFFFB          /* length preceeded bitmap */
;|*** #define EAT_METAFILE    0xFFFA          /* length preceeded metafile */
;|*** #define EAT_ICON        0xFFF9          /* length preceeded icon */
;|*** #define EAT_EA          0xFFEE          /* length preceeded ASCII */
;|***                                         /* name of associated data (#include) */
;|*** #define EAT_MVMT        0xFFDF          /* multi-valued, multi-typed field */
;|*** #define EAT_MVST        0xFFDE          /* multi-valued, single-typed field */
;|*** #define EAT_ASN1        0xFFDD          /* ASN.1 field */
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack(1)
;|*** /* XLATON */
;|*** 
;|*** typedef struct _CNPATH {      /* CHANGENOTIFYPATH */
;|***     ULONG   oNextEntryOffset;
;|***     ULONG   wFlags;
;|***     USHORT  cbName;
;|***     CHAR    szName[1];
;|*** } CNPATH;
;|*** 
;|*** typedef CNPATH *PCNPATH;
;|*** 
;|*** typedef struct _CNINFO {      /* CHANGENOTIFYINFO */
;|***     ULONG   oNextEntryOffset;
;|***     CHAR    bAction;
;|***     USHORT  cbName;
;|***     CHAR    szName[1];
;|*** } CNINFO;
;|*** 
;|*** typedef CNINFO *PCNINFO;
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack()
;|*** /* XLATON */
;|*** 
;|*** /*
;|***  *  Equates for ChangeNotifyInfo baction field
;|***  *
;|***  */
;|*** 
;|*** #define             RCNF_FILE_ADDED        0x0001
;|*** #define             RCNF_FILE_DELETED      0x0002
;|*** #define             RCNF_DIR_ADDED         0x0003
;|*** #define             RCNF_DIR_DELETED       0x0004
;|*** #define             RCNF_MOVED_IN          0x0005
;|*** #define             RCNF_MOVED_OUT         0x0006
;|*** #define             RCNF_CHANGED           0x0007
;|*** #define             RCNF_OLDNAME           0x0008
;|*** #define             RCNF_NEWNAME           0x0009
;|*** #define             RCNF_DEVICE_ATTACHED   0x000A
;|*** #define             RCNF_DEVICE_DETACHED   0x000B
;|*** 
;|*** #endif  /* !INCL_SAADEFS */
;|*** 
;|*** APIRET  APIENTRY        DosOpen(PSZ pszFileName, PHFILE phf, PULONG pulAction, ULONG cbFile, ULONG ulAttribute, ULONG fsOpenFlags, ULONG fsOpenMode, PEAOP2 peaop2 );
;|*** APIRET  APIENTRY        DosProtectOpen(PSZ pszFileName, PHFILE phf,
;|***                                        PULONG pulAction, ULONG cbFile,
;|***                                        ULONG ulAttribute, ULONG fsOpenFlags,
;|***                                        ULONG fsOpenMode, PEAOP2 peaop2,
;|***                                        PFHLOCK pfhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosClose(HFILE hFile);
;|*** APIRET  APIENTRY        DosProtectClose(HFILE hFile, FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosRead(HFILE hFile, PVOID pBuffer, ULONG cbRead, PULONG pcbActual);
;|*** APIRET  APIENTRY        DosProtectRead(HFILE hFile, PVOID pBuffer,
;|***                                        ULONG cbRead, PULONG pcbActual,
;|***                                        FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosWrite(HFILE hFile, PVOID pBuffer, ULONG cbWrite, PULONG pcbActual);
;|*** APIRET  APIENTRY        DosProtectWrite(HFILE hFile, PVOID pBuffer,
;|***                                         ULONG cbWrite, PULONG pcbActual,
;|***                                         FHLOCK fhFileHandleLockID);
;|*** 
;|*** /* File time and date types */
;|*** 
;|*** typedef struct _FILESTATUS {    /* fsts */
;|***     FDATE  fdateCreation;
;|***     FTIME  ftimeCreation;
;|***     FDATE  fdateLastAccess;
;|***     FTIME  ftimeLastAccess;
;|***     FDATE  fdateLastWrite;
;|***     FTIME  ftimeLastWrite;
;|***     ULONG  cbFile;
;|***     ULONG  cbFileAlloc;
;|***     USHORT attrFile;
;|*** } FILESTATUS;
;|*** typedef FILESTATUS      *PFILESTATUS;
;|*** 
;|*** typedef struct _FILESTATUS2 {   /* fsts2 */
;|***     FDATE  fdateCreation;
;|***     FTIME  ftimeCreation;
;|***     FDATE  fdateLastAccess;
;|***     FTIME  ftimeLastAccess;
;|***     FDATE  fdateLastWrite;
;|***     FTIME  ftimeLastWrite;
;|***     ULONG  cbFile;
;|***     ULONG  cbFileAlloc;
;|***     USHORT attrFile;
;|***     ULONG  cbList;
;|*** } FILESTATUS2;
;|*** typedef FILESTATUS2     *PFILESTATUS2;
;|*** 
;|*** 
;|*** typedef struct _FILESTATUS3 {   /* fsts3 */
;|***     FDATE  fdateCreation;
;|***     FTIME  ftimeCreation;
;|***     FDATE  fdateLastAccess;
;|***     FTIME  ftimeLastAccess;
;|***     FDATE  fdateLastWrite;
;|***     FTIME  ftimeLastWrite;
;|***     ULONG  cbFile;
;|***     ULONG  cbFileAlloc;
;|***     ULONG  attrFile;
;|*** } FILESTATUS3;
;|*** typedef FILESTATUS3     *PFILESTATUS3;
;|*** 
;|*** typedef struct _FILESTATUS4 {    /* fsts4 */
;|***     FDATE  fdateCreation;
;|***     FTIME  ftimeCreation;
;|***     FDATE  fdateLastAccess;
;|***     FTIME  ftimeLastAccess;
;|***     FDATE  fdateLastWrite;
;|***     FTIME  ftimeLastWrite;
;|***     ULONG  cbFile;
;|***     ULONG  cbFileAlloc;
;|***     ULONG  attrFile;
;|***     ULONG  cbList;
;|*** } FILESTATUS4;
;|*** typedef FILESTATUS4     *PFILESTATUS4;
;|*** 
;|*** 
;|*** typedef struct _FSALLOCATE {    /* fsalloc */
;|***     ULONG  idFileSystem;
;|***     ULONG  cSectorUnit;
;|***     ULONG  cUnit;
;|***     ULONG  cUnitAvail;
;|***     USHORT cbSector;
;|*** } FSALLOCATE;
;|*** typedef FSALLOCATE      *PFSALLOCATE;
;|*** 
;|*** typedef SHANDLE HDIR;        /* hdir */
;|*** typedef HDIR    *PHDIR;
;|*** 
;|*** /* XLATOFF */
;|*** #define DosOpen2        DosOpen
;|*** #define DosFindFirst2   DosFindFirst
;|*** #define DosQFHandState  DosQueryFHState
;|*** #define DosProtectQFHandState  DosProtectQueryFHState
;|*** #define DosSetFHandState        DosSetFHState
;|*** #define DosProtectSetFHandState        DosProtectSetFHState
;|*** #define DosQHandType    DosQueryHType
;|*** #define DosQFSAttach    DosQueryFSAttach
;|*** #define DosNewSize      DosSetFileSize
;|*** #define DosProtectNewSize      DosProtectSetFileSize
;|*** #define DosBufReset     DosResetBuffer
;|*** #define DosChgFilePtr   DosSetFilePtr
;|*** #define DosProtectChgFilePtr   DosProtectSetFilePtr
;|*** #define DosMkDir        DosCreateDir
;|*** #define DosMkDir2       DosCreateDir
;|*** #define DosRmDir        DosDeleteDir
;|*** #define DosSelectDisk   DosSetDefaultDisk
;|*** #define DosQCurDisk     DosQueryCurrentDisk
;|*** #define DosChDir        DosSetCurrentDir
;|*** #define DosQCurDir      DosQueryCurrentDir
;|*** #define DosQFSInfo      DosQueryFSInfo
;|*** #define DosQVerify      DosQueryVerify
;|*** #define DosQFileInfo    DosQueryFileInfo
;|*** #define DosProtectQFileInfo    DosProtectQueryFileInfo
;|*** #define DosQPathInfo    DosQueryPathInfo
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY DosOpenChangeNotify(PCNPATH PathBuf, ULONG LogSize, PHDIR hdir,
;|***                                      ULONG ulReserved);
;|*** APIRET  APIENTRY DosResetChangeNotify(PCNINFO LogBuf, ULONG BufferSize,
;|***                                       PULONG LogCount, HDIR hdir);
;|*** APIRET  APIENTRY DosCloseChangeNotify(HDIR hdir);
;|*** 
;|*** APIRET  APIENTRY        DosDelete(PSZ pszFile);
;|*** 
;|*** APIRET  APIENTRY        DosForceDelete(PSZ pszFile);
;|*** 
;|*** APIRET  APIENTRY        DosDupHandle(HFILE hFile, PHFILE pHfile);
;|*** 
;|*** APIRET  APIENTRY        DosQueryFHState(HFILE hFile, PULONG pMode);
;|*** APIRET  APIENTRY        DosProtectQueryFHState(HFILE hFile, PULONG pMode,
;|***                                                FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosSetFHState(HFILE hFile, ULONG mode);
;|*** APIRET  APIENTRY        DosProtectSetFHState(HFILE hFile, ULONG mode,
;|***                                              FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosQueryHType(HFILE hFile, PULONG pType, PULONG pAttr);
;|*** 
;|*** APIRET  APIENTRY        DosFindFirst(PSZ pszFileSpec, PHDIR phdir, ULONG flAttribute, PVOID pfindbuf, ULONG cbBuf, PULONG pcFileNames, ULONG ulInfoLevel );
;|*** 
;|*** APIRET  APIENTRY        DosFindNext(HDIR hdir, PVOID pfindbuf, ULONG cbfindbuf, PULONG pcFilenames );
;|*** 
;|*** APIRET  APIENTRY        DosFindClose(HDIR hDir);
;|*** 
;|*** APIRET  APIENTRY        DosFSAttach(PSZ pszDevice, PSZ pszFilesystem, PVOID pData, ULONG cbData, ULONG flag);
;|*** 
;|*** APIRET  APIENTRY        DosQueryFSAttach(PSZ pszDeviceName, ULONG ulOrdinal, ULONG ulFSAInfoLevel, PFSQBUFFER2 pfsqb, PULONG pcbBuffLength );
;|*** 
;|*** APIRET  APIENTRY        DosFSCtl(PVOID pData, ULONG cbData, PULONG pcbData, PVOID pParms, ULONG cbParms, PULONG pcbParms, ULONG function, PSZ pszRoute, HFILE hFile, ULONG method);
;|*** 
;|*** APIRET  APIENTRY        DosSetFileSize(HFILE hFile, ULONG cbSize);
;|*** APIRET  APIENTRY        DosProtectSetFileSize(HFILE hFile, ULONG cbSize,
;|***                                               FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosResetBuffer(HFILE hFile);
;|*** 
;|*** APIRET  APIENTRY        DosSetFilePtr(HFILE hFile, LONG ib, ULONG method, PULONG ibActual);
;|*** APIRET  APIENTRY        DosProtectSetFilePtr(HFILE hFile, LONG ib,
;|***                                              ULONG method, PULONG ibActual,
;|***                                              FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosMove(PSZ pszOld, PSZ pszNew);
;|*** 
;|*** APIRET  APIENTRY        DosCopy(PSZ pszOld, PSZ pszNew, ULONG option);
;|*** 
;|*** APIRET  APIENTRY        DosEditName(ULONG metalevel, PSZ pszSource, PSZ pszEdit, PBYTE pszTarget, ULONG cbTarget);
;|*** 
;|*** APIRET  APIENTRY        DosCreateDir(PSZ pszDirName, PEAOP2 peaop2 );
;|*** 
;|*** APIRET  APIENTRY        DosDeleteDir(PSZ pszDir);
;|*** 
;|*** APIRET  APIENTRY        DosSetDefaultDisk(ULONG disknum);
;|*** 
;|*** APIRET  APIENTRY        DosQueryCurrentDisk(PULONG pdisknum, PULONG plogical);
;|*** 
;|*** APIRET  APIENTRY        DosSetCurrentDir(PSZ pszDir);
;|*** 
;|*** APIRET  APIENTRY        DosQueryCurrentDir(ULONG disknum, PBYTE pBuf, PULONG pcbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosQueryFSInfo(ULONG disknum, ULONG infolevel, PVOID pBuf, ULONG cbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosSetFSInfo(ULONG disknum, ULONG infolevel, PVOID pBuf, ULONG cbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosQueryVerify(PBOOL32 pBool);
;|*** 
;|*** APIRET  APIENTRY        DosSetVerify(BOOL32);
;|*** 
;|*** APIRET  APIENTRY        DosSetMaxFH(ULONG cFH);
;|*** 
;|*** APIRET  APIENTRY        DosSetRelMaxFH(PLONG pcbReqCount, PULONG pcbCurMaxFH);
;|*** 
;|*** APIRET  APIENTRY        DosQueryFileInfo(HFILE hf, ULONG ulInfoLevel, PVOID pInfo,  ULONG cbInfoBuf );
;|*** APIRET  APIENTRY        DosProtectQueryFileInfo(HFILE hf, ULONG ulInfoLevel,
;|***                                                 PVOID pInfo, ULONG cbInfoBuf,
;|***                                                 FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosSetFileInfo(HFILE hf, ULONG ulInfoLevel, PVOID pInfoBuf, ULONG cbInfoBuf );
;|*** APIRET  APIENTRY        DosProtectSetFileInfo(HFILE hf, ULONG ulInfoLevel,
;|***                                               PVOID pInfoBuf, ULONG cbInfoBuf,
;|***                                               FHLOCK fhFileHandleLockID);
;|*** 
;|*** APIRET  APIENTRY        DosQueryPathInfo(PSZ pszPathName, ULONG ulInfoLevel, PVOID pInfoBuf, ULONG cbInfoBuf );
;|*** 
;|*** APIRET  APIENTRY        DosSetPathInfo(PSZ pszPathName, ULONG ulInfoLevel, PVOID pInfoBuf, ULONG cbInfoBuf, ULONG flOptions );
;|*** 
;|*** /* defines for DosSetPathInfo -pathinfo flag */
;|*** #define DSPI_WRTTHRU    0x10    /* write through */
;|*** 
;|*** APIRET  APIENTRY        DosShutdown(ULONG ulReserved);
;|*** 
;|*** APIRET  APIENTRY        DosEnumAttribute(ULONG ulRefType, PVOID pvFile, ULONG ulEntry, PVOID pvBuf, ULONG cbBuf, PULONG pulCount, ULONG ulInfoLevel );
;|*** 
;|*** APIRET  APIENTRY        DosProtectEnumAttribute(ULONG ulRefType, PVOID pvFile, ULONG ulEntry, PVOID pvBuf, ULONG cbBuf, PULONG pulCount, ULONG ulInfoLevel, FHLOCK fhFileHandleLockID );
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack(1)
;|*** /* XLATON */
;|*** 
;|*** typedef struct _DENA1 { /* _dena1 level 1 info returned from DosEnumAttribute */
;|***     UCHAR       reserved;       /* 0 */
;|***     UCHAR       cbName;         /* length of name exculding NULL */
;|***     USHORT      cbValue;        /* length of value */
;|***     UCHAR       szName[1];      /* variable length asciiz name */
;|*** } DENA1;
;|*** typedef DENA1 FAR *PDENA1;
;|*** 
;|*** /* XLATOFF */
;|*** #pragma pack()
;|*** /* XLATON */
;|*** 
;|*** typedef FEA2 DENA2;
;|*** typedef PFEA2 PDENA2;
;|*** 
;|*** /* Infolevels for DosEnumAttribute  */
;|*** #define ENUMEA_LEVEL_NO_VALUE   1L      /* FEA without value */
;|*** /* Reference types for DosEnumAttribute */
;|*** #define ENUMEA_REFTYPE_FHANDLE  0       /* file handle */
;|*** #define ENUMEA_REFTYPE_PATH     1       /* path name */
;|*** #define ENUMEA_REFTYPE_MAX      ENUMEA_REFTYPE_PATH
;|*** 
;|*** #endif /* common INCL_DOSFILEMGR */
;|*** 
;|*** #if (defined(INCL_DOSMEMMGR) || !defined(INCL_NOCOMMON))
;|*** /*** Memory management */
;|*** 
;|*** APIRET  APIENTRY        DosAllocMem(PPVOID ppb, ULONG cb, ULONG flag);
;|*** 
;|*** APIRET  APIENTRY        DosFreeMem(PVOID pb);
;|*** 
;|*** APIRET  APIENTRY        DosSetMem(PVOID pb, ULONG cb, ULONG flag);
;|*** 
;|*** APIRET  APIENTRY        DosGiveSharedMem(PVOID pb, PID pid, ULONG flag);
;|*** 
;|*** APIRET  APIENTRY        DosGetSharedMem(PVOID pb, ULONG flag);
;|*** 
;|*** APIRET  APIENTRY        DosGetNamedSharedMem(PPVOID ppb, PSZ pszName, ULONG flag);
;|*** 
;|*** APIRET  APIENTRY        DosAllocSharedMem(PPVOID ppb, PSZ pszName, ULONG cb, ULONG flag);
;|*** 
;|*** APIRET  APIENTRY        DosQueryMem(PVOID pb, PULONG pcb, PULONG pFlag);
;|*** 
;|*** #define DosSubAlloc     DosSubAllocMem
;|*** #define DOSSUBALLOC     DosSubAllocMem
;|*** APIRET  APIENTRY        DosSubAllocMem(PVOID pbBase, PPVOID ppb, ULONG cb);
;|*** 
;|*** #define DosSubFree      DosSubFreeMem
;|*** #define DOSSUBFREE      DosSubFreeMem
;|*** APIRET  APIENTRY        DosSubFreeMem(PVOID pbBase, PVOID pb, ULONG cb);
;|*** 
;|*** #define DosSubSet       DosSubSetMem
;|*** #define DOSSUBSET       DosSubSetMem
;|*** APIRET  APIENTRY        DosSubSetMem(PVOID pbBase, ULONG flag, ULONG cb);
;|*** 
;|*** #define DosSubUnset     DosSubUnsetMem
;|*** #define DOSSUBUNSET     DosSubUnsetMem
;|*** APIRET  APIENTRY        DosSubUnsetMem(PVOID pbBase);
;|*** 
;|*** #include <bsememf.h>    /* get flags for API                            */
;|*** 
;|*** #endif /* INCL_DOSMEMMGR */
;|*** 
;|*** #if (defined(INCL_DOSSEMAPHORES) || !defined(INCL_NOCOMMON))
;|*** 
;|*** /*
;|***  *     32-bit Semaphore Support
;|***  */
;|*** 
;|*** /* Semaphore Attributes */
;|*** 
;|*** #define DC_SEM_SHARED   0x01      /* DosCreateMutex, DosCreateEvent, and     */
;|***                                   /*   DosCreateMuxWait use it to indicate   */
;|***                                   /*   whether the semaphore is shared or    */
;|***                                   /*   private when the PSZ is null          */
;|*** #define DCMW_WAIT_ANY   0x02      /* DosCreateMuxWait option for wait on any */
;|***                                   /*   event/mutex to occur                  */
;|*** #define DCMW_WAIT_ALL   0x04      /* DosCreateMuxWait option for wait on all */
;|***                                   /*   events/mutexs to occur                */
;|*** 
;|*** /* PMxxxxxx */
;|*** #define DC_SEM_PM       0x40      /* PM Shared Event Semaphore.              */
;|*** 
;|*** #define PM_EVENT_POSTED 3000      /* PM Shared Event Posted                  */
;|*** 
;|*** #define SEM_INDEFINITE_WAIT      0xFFFFFFFF
;|*** #define SEM_IMMEDIATE_RETURN     0L
;|*** 
;|*** typedef struct _PSEMRECORD {    /* psr */
;|***     HSEM        hsemCur;
;|***     ULONG       ulUser;
;|*** } SEMRECORD;
;|*** typedef SEMRECORD       *PSEMRECORD;
;|*** 
;|*** #endif /* common INCL_DOSSEMAPHORES */
;|*** 
;|*** #ifdef INCL_DOSSEMAPHORES
;|*** 
;|*** typedef  ULONG    HEV;             /* hev */
;|*** typedef  HEV      *PHEV;
;|*** typedef  ULONG    HMTX;            /* hmtx */
;|*** typedef  HMTX     *PHMTX;
;|*** typedef  ULONG    HMUX;            /* hmux */
;|*** typedef  HMUX     *PHMUX;
;|*** 
;|*** APIRET  APIENTRY        DosCreateEventSem (PSZ pszName, PHEV phev, ULONG flAttr, BOOL32 fState);
;|*** APIRET  APIENTRY        DosOpenEventSem (PSZ pszName, PHEV phev);
;|*** APIRET  APIENTRY        DosCloseEventSem (HEV hev);
;|*** APIRET  APIENTRY        DosResetEventSem (HEV hev, PULONG pulPostCt);
;|*** APIRET  APIENTRY        DosPostEventSem (HEV hev);
;|*** APIRET  APIENTRY        DosWaitEventSem (HEV hev, ULONG ulTimeout);
;|*** APIRET  APIENTRY        DosQueryEventSem (HEV hev, PULONG pulPostCt);
;|*** 
;|*** APIRET  APIENTRY        DosCreateMutexSem (PSZ pszName, PHMTX phmtx, ULONG flAttr, BOOL32 fState);
;|*** APIRET  APIENTRY        DosOpenMutexSem (PSZ pszName, PHMTX phmtx);
;|*** APIRET  APIENTRY        DosCloseMutexSem (HMTX hmtx);
;|*** APIRET  APIENTRY        DosRequestMutexSem (HMTX hmtx, ULONG ulTimeout);
;|*** APIRET  APIENTRY        DosReleaseMutexSem (HMTX hmtx);
;|*** APIRET  APIENTRY        DosQueryMutexSem (HMTX hmtx, PPID ppid, PTID ptid, PULONG pulCount);
;|*** 
;|*** APIRET  APIENTRY        DosCreateMuxWaitSem (PSZ pszName, PHMUX phmux, ULONG cSemRec, PSEMRECORD pSemRec, ULONG flAttr);
;|*** APIRET  APIENTRY        DosOpenMuxWaitSem (PSZ pszName, PHMUX phmux);
;|*** APIRET  APIENTRY        DosCloseMuxWaitSem (HMUX hmux);
;|*** APIRET  APIENTRY        DosWaitMuxWaitSem (HMUX hmux, ULONG ulTimeout, PULONG pulUser);
;|*** APIRET  APIENTRY        DosAddMuxWaitSem (HMUX hmux, PSEMRECORD pSemRec);
;|*** APIRET  APIENTRY        DosDeleteMuxWaitSem (HMUX hmux, HSEM hSem);
;|*** APIRET  APIENTRY        DosQueryMuxWaitSem (HMUX hmux, PULONG pcSemRec, PSEMRECORD pSemRec, PULONG pflAttr);
;|*** 
;|*** APIRET  APIENTRY        DosPMPostEventSem (HEV hev);
;|*** APIRET  APIENTRY        DosPMWaitEventSem (HEV pmhev, HEV hev, ULONG ulTimeout);
;|*** APIRET  APIENTRY        DosPMRequestMutexSem (HEV hev, HMTX hmtx, ULONG ulTimeout);
;|*** APIRET  APIENTRY        DosPMWaitMuxWaitSem (HEV hev, HMUX hmux, ULONG ulTimeout, PULONG pulUser);
;|*** 
;|*** #endif /* INCL_DOSSEMAPHORES */
;|*** 
;|*** #if (defined(INCL_DOSDATETIME) || !defined(INCL_NOCOMMON))
;|*** 
;|*** /*** Time support */
;|*** 
;|*** typedef struct _DATETIME {    /* date */
;|***     UCHAR   hours;
;|***     UCHAR   minutes;
;|***     UCHAR   seconds;
;|***     UCHAR   hundredths;
;|***     UCHAR   day;
;|***     UCHAR   month;
;|***     USHORT  year;
;|***     SHORT   timezone;
;|***     UCHAR   weekday;
;|*** } DATETIME;
;|*** typedef DATETIME        *PDATETIME;
;|*** 
;|*** APIRET  APIENTRY        DosGetDateTime(PDATETIME pdt);
;|*** 
;|*** APIRET  APIENTRY        DosSetDateTime(PDATETIME pdt);
;|*** 
;|*** #endif /* common INCL_DOSDATETIME */
;|*** 
;|*** #ifdef INCL_DOSDATETIME
;|*** 
;|*** /* XLATOFF */
;|*** #define DosTimerAsync   DosAsyncTimer
;|*** #define DosTimerStart   DosStartTimer
;|*** #define DosTimerStop    DosStopTimer
;|*** /* XLATON */
;|*** 
;|*** typedef SHANDLE HTIMER;
;|*** typedef HTIMER  *PHTIMER;
;|*** 
;|*** APIRET  APIENTRY        DosAsyncTimer(ULONG msec, HSEM hsem, PHTIMER phtimer);
;|*** 
;|*** APIRET  APIENTRY        DosStartTimer(ULONG msec, HSEM hsem, PHTIMER phtimer);
;|*** 
;|*** APIRET  APIENTRY        DosStopTimer(HTIMER htimer);
;|*** 
;|*** #endif /* INCL_DOSDATETIME */
;|*** 
;|*** 
;|*** /*** Module manager */
;|*** 
;|*** #ifdef INCL_DOSMODULEMGR
;|*** 
;|*** /* XLATOFF */
;|*** #define DosGetProcAddr          DosQueryProcAddr
;|*** #define DosGetModHandle         DosQueryModuleHandle
;|*** #define DosGetModName           DosQueryModuleName
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY  DosLoadModule(PSZ pszName, ULONG cbName, PSZ pszModname, PHMODULE phmod);
;|*** 
;|*** APIRET  APIENTRY  DosFreeModule(HMODULE hmod);
;|*** 
;|*** APIRET  APIENTRY  DosQueryProcAddr(HMODULE hmod, ULONG ordinal, PSZ pszName,PFN* ppfn);
;|*** 
;|*** APIRET  APIENTRY  DosQueryModuleHandle(PSZ pszModname, PHMODULE phmod);
;|*** 
;|*** APIRET  APIENTRY  DosQueryModuleName(HMODULE hmod, ULONG cbName, PCHAR pch);
;|*** 
;|*** #define PT_16BIT  0
;|*** #define PT_32BIT  1
;|*** 
;|*** APIRET  APIENTRY  DosQueryProcType(HMODULE hmod, ULONG ordinal, PSZ pszName, PULONG pulproctype);
;|*** 
;|*** APIRET  APIENTRY  DosQueryModFromEIP(HMODULE *phMod, ULONG *pObjNum, ULONG BuffLen, PCHAR pBuff, ULONG *pOffset, ULONG Address);
;|*** 
;|*** #define HW_CFG_MCA              0x00000001
;|*** #define HW_CFG_EISA             0x00000002
;|*** #define HW_CFG_ABIOS_SUPPORTED  0x00000004
;|*** #define HW_CFG_ABIOS_PRESENT    0x00000008
;|*** 
;|*** APIRET  APIENTRY DosQueryABIOSSupport(ULONG reserved);
;|*** 
;|*** #endif /* INCL_DOSMODULEMGR */
;|*** 
;|*** #if (defined(INCL_DOSRESOURCES) || !defined(INCL_NOCOMMON))
;|*** 
;|*** /*** Resource support */
;|*** 
;|*** /* Predefined resource types */
;|*** 
;|*** #define RT_POINTER      1   /* mouse pointer shape */
;|*** #define RT_BITMAP       2   /* bitmap */
;|*** #define RT_MENU         3   /* menu template */
;|*** #define RT_DIALOG       4   /* dialog template */
;|*** #define RT_STRING       5   /* string tables */
;|*** #define RT_FONTDIR      6   /* font directory */
;|*** #define RT_FONT         7   /* font */
;|*** #define RT_ACCELTABLE   8   /* accelerator tables */
;|*** #define RT_RCDATA       9   /* binary data */
;|*** #define RT_MESSAGE      10  /* error msg     tables */
;|*** #define RT_DLGINCLUDE   11  /* dialog include file name */
;|*** #define RT_VKEYTBL      12  /* key to vkey tables */
;|*** #define RT_KEYTBL       13  /* key to UGL tables */
;|*** #define RT_CHARTBL      14  /* glyph to character tables */
;|*** #define RT_DISPLAYINFO  15  /* screen display information */
;|*** 
;|*** #define RT_FKASHORT     16  /* function key area short form */
;|*** #define RT_FKALONG      17  /* function key area long form */
;|*** 
;|*** #define RT_HELPTABLE    18  /* Help table for Cary Help manager */
;|*** #define RT_HELPSUBTABLE 19  /* Help subtable for Cary Help manager */
;|*** 
;|*** #define RT_FDDIR        20  /* DBCS uniq/font driver directory */
;|*** #define RT_FD           21  /* DBCS uniq/font driver */
;|*** 
;|*** #define RT_MAX          22  /* 1st unused Resource Type */
;|*** 
;|*** 
;|*** #define RF_ORDINALID    0x80000000L     /* ordinal id flag in resource table */
;|*** 
;|*** #endif /* common INCL_DOSRESOURCES */
;|*** 
;|*** #ifdef INCL_DOSRESOURCES
;|*** 
;|*** /* XLATOFF */
;|*** #define DosGetResource2 DosGetResource
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY        DosGetResource(HMODULE hmod, ULONG idType, ULONG idName, PPVOID ppb);
;|*** 
;|*** APIRET  APIENTRY        DosFreeResource(PVOID pb);
;|*** 
;|*** APIRET  APIENTRY        DosQueryResourceSize(HMODULE hmod, ULONG idt, ULONG idn, PULONG pulsize);
;|*** 
;|*** #endif /* INCL_DOSRESOURCES */
;|*** 
;|*** 
;|*** /*** NLS Support */
;|*** 
;|*** #ifdef INCL_DOSNLS
;|*** 
;|*** typedef struct _COUNTRYCODE { /* ctryc */
;|***     ULONG       country;
;|***     ULONG       codepage;
;|*** } COUNTRYCODE;
;|*** typedef COUNTRYCODE     *PCOUNTRYCODE;
;|*** 
;|*** typedef struct _COUNTRYINFO { /* ctryi */
;|***     ULONG       country;
;|***     ULONG       codepage;
;|***     ULONG       fsDateFmt;
;|***     CHAR        szCurrency[5];
;|***     CHAR        szThousandsSeparator[2];
;|***     CHAR        szDecimal[2];
;|***     CHAR        szDateSeparator[2];
;|***     CHAR        szTimeSeparator[2];
;|***     UCHAR       fsCurrencyFmt;
;|***     UCHAR       cDecimalPlace;
;|***     UCHAR       fsTimeFmt;
;|***     USHORT      abReserved1[2];
;|***     CHAR        szDataSeparator[2];
;|***     USHORT      abReserved2[5];
;|*** } COUNTRYINFO;
;|*** typedef COUNTRYINFO     *PCOUNTRYINFO;
;|*** 
;|*** /* XLATOFF */
;|*** #define DosGetCtryInfo  DosQueryCtryInfo
;|*** #define DosGetDBCSEv    DosQueryDBCSEnv
;|*** #define DosCaseMap      DosMapCase
;|*** #define DosGetCollate   DosQueryCollate
;|*** #define DosGetCp        DosQueryCp
;|*** #define DosSetProcCp    DosSetProcessCp
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY        DosQueryCtryInfo(ULONG cb, PCOUNTRYCODE pcc, PCOUNTRYINFO pci, PULONG pcbActual);
;|*** 
;|*** APIRET  APIENTRY        DosQueryDBCSEnv(ULONG cb, PCOUNTRYCODE pcc, PCHAR pBuf);
;|*** 
;|*** APIRET  APIENTRY        DosMapCase(ULONG cb, PCOUNTRYCODE pcc, PCHAR pch);
;|*** 
;|*** APIRET  APIENTRY        DosQueryCollate(ULONG cb, PCOUNTRYCODE pcc, PCHAR pch, PULONG pcch);
;|*** 
;|*** APIRET  APIENTRY        DosQueryCp(ULONG cb, PULONG arCP, PULONG pcCP);
;|*** 
;|*** APIRET  APIENTRY        DosSetProcessCp(ULONG cp);
;|*** 
;|*** #endif /* INCL_DOSNLS */
;|*** 
;|*** 
;|*** /*** Signal support */
;|*** 
;|*** #ifdef INCL_DOSEXCEPTIONS
;|*** 
;|*** /* DosSetSigExceptionFocus codes */
;|*** 
;|*** #define SIG_UNSETFOCUS 0
;|*** #define SIG_SETFOCUS 1
;|*** 
;|*** #include <bsexcpt.h>
;|*** 
;|*** APIRET  APIENTRY        DosSetExceptionHandler(PEXCEPTIONREGISTRATIONRECORD pERegRec);
;|*** 
;|*** APIRET  APIENTRY        DosUnsetExceptionHandler(PEXCEPTIONREGISTRATIONRECORD pERegRec);
;|*** 
;|*** APIRET  APIENTRY        DosRaiseException(PEXCEPTIONREPORTRECORD pexcept);
;|*** 
;|*** APIRET  APIENTRY        DosSendSignalException(PID pid, ULONG exception);
;|*** 
;|*** APIRET  APIENTRY        DosUnwindException(PEXCEPTIONREGISTRATIONRECORD phandler, PVOID pTargetIP, PEXCEPTIONREPORTRECORD pERepRec);
;|*** 
;|*** APIRET  APIENTRY        DosSetSignalExceptionFocus(BOOL32 flag, PULONG pulTimes);
;|*** 
;|*** APIRET  APIENTRY        DosEnterMustComplete(PULONG pulNesting);
;|*** 
;|*** APIRET  APIENTRY        DosExitMustComplete(PULONG pulNesting);
;|*** 
;|*** APIRET  APIENTRY        DosAcknowledgeSignalException(ULONG ulSignalNum);
;|*** 
;|*** #endif /* INCL_DOSEXCEPTIONS */
;|*** 
;|*** 
;|*** /*** Pipe and queue support */
;|*** 
;|*** #ifdef INCL_DOSQUEUES
;|*** #if (defined(INCL_DOSFILEMGR) || !defined(INCL_NOCOMMON))
;|*** 
;|*** typedef SHANDLE HQUEUE;  /* hq */
;|*** typedef HQUEUE  *PHQUEUE;
;|*** typedef struct _REQUESTDATA {   /* reqqdata */
;|***     PID         pid;
;|***     ULONG       ulData;
;|*** } REQUESTDATA;
;|*** typedef REQUESTDATA     *PREQUESTDATA;
;|*** 
;|*** #define QUE_FIFO              0L
;|*** #define QUE_LIFO              1L
;|*** #define QUE_PRIORITY          2L
;|*** #define QUE_NOCONVERT_ADDRESS 0L
;|*** #define QUE_CONVERT_ADDRESS   4L
;|*** 
;|*** /* XLATOFF */
;|*** #define DosMakePipe     DosCreatePipe
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY        DosCreatePipe(PHFILE phfRead, PHFILE phfWrite, ULONG cb);
;|*** 
;|*** APIRET  APIENTRY        DosCloseQueue(HQUEUE hq);
;|*** 
;|*** APIRET  APIENTRY        DosCreateQueue(PHQUEUE phq, ULONG priority, PSZ pszName);
;|*** 
;|*** APIRET  APIENTRY        DosOpenQueue(PPID ppid, PHQUEUE phq, PSZ pszName);
;|*** 
;|*** APIRET  APIENTRY        DosPeekQueue(HQUEUE hq, PREQUESTDATA pRequest, PULONG pcbData, PPVOID ppbuf, PULONG element, BOOL32 nowait, PBYTE ppriority, HEV hsem);
;|*** 
;|*** APIRET  APIENTRY        DosPurgeQueue(HQUEUE hq);
;|*** 
;|*** APIRET  APIENTRY        DosQueryQueue(HQUEUE hq, PULONG pcbEntries);
;|*** 
;|*** APIRET  APIENTRY        DosReadQueue(HQUEUE hq, PREQUESTDATA pRequest, PULONG pcbData, PPVOID ppbuf, ULONG element, BOOL32 wait, PBYTE ppriority, HEV hsem);
;|*** 
;|*** APIRET  APIENTRY        DosWriteQueue(HQUEUE hq, ULONG request, ULONG cbData, PVOID pbData, ULONG priority);
;|*** 
;|*** #else /* INCL_DOSFILEMGR || !INCL_NOCOMMON */
;|*** #error PHFILE not defined - define INCL_DOSFILEMGR or undefine INCL_NOCOMMON
;|*** #endif /* INCL_DOSFILEMGR || !INCL_NOCOMMON */
;|*** #endif /* INCL_DOSQUEUES */
;|*** 
;|*** #ifdef INCL_DOSMISC
;|*** 
;|*** /* definitions for DosSearchPath control word */
;|*** #define DSP_IMPLIEDCUR          1 /* current dir will be searched first */
;|*** #define DSP_PATHREF             2 /* from env.variable */
;|*** #define DSP_IGNORENETERR        4 /* ignore net errs & continue search */
;|*** 
;|*** /* indices for DosQuerySysInfo */
;|*** #define QSV_MAX_PATH_LENGTH     1
;|*** #define Q_MAX_PATH_LENGTH       QSV_MAX_PATH_LENGTH
;|*** #define QSV_MAX_TEXT_SESSIONS   2
;|*** #define QSV_MAX_PM_SESSIONS     3
;|*** #define QSV_MAX_VDM_SESSIONS    4
;|*** #define QSV_BOOT_DRIVE          5       /* 1=A, 2=B, etc. */
;|*** #define QSV_DYN_PRI_VARIATION   6       /* 0=Absolute, 1=Dynamic */
;|*** #define QSV_MAX_WAIT            7       /* seconds */
;|*** #define QSV_MIN_SLICE           8       /* milli seconds */
;|*** #define QSV_MAX_SLICE           9       /* milli seconds */
;|*** #define QSV_PAGE_SIZE           10
;|*** #define QSV_VERSION_MAJOR       11
;|*** #define QSV_VERSION_MINOR       12
;|*** #define QSV_VERSION_REVISION    13      /* Revision letter */
;|*** #define QSV_MS_COUNT            14      /* Free running millisecond counter */
;|*** #define QSV_TIME_LOW            15      /* Low dword of time in seconds */
;|*** #define QSV_TIME_HIGH           16      /* High dword of time in seconds */
;|*** #define QSV_TOTPHYSMEM          17      /* Physical memory on system */
;|*** #define QSV_TOTRESMEM           18      /* Resident memory on system */
;|*** #define QSV_TOTAVAILMEM         19      /* Available memory for all processes */
;|*** #define QSV_MAXPRMEM            20      /* Avail private mem for calling proc */
;|*** #define QSV_MAXSHMEM            21      /* Avail shared mem for calling proc */
;|*** #define QSV_TIMER_INTERVAL      22      /* Timer interval in tenths of ms */
;|*** #define QSV_MAX_COMP_LENGTH     23      /* max len of one component in a name */
;|*** #define QSV_FGND_SG_ID          24      /* Foreground Screen Group ID 26215   */
;|*** #define QSV_FGND_PID            25      /* Foreground Process ID      26215   */
;|*** #define QSV_MAX                 QSV_MAX_COMP_LENGTH
;|*** 
;|*** /* definitions for DosError - combine with | */
;|*** #define FERR_DISABLEHARDERR     0x00000000L     /* disable hard error popups */
;|*** #define FERR_ENABLEHARDERR      0x00000001L     /* enable hard error popups */
;|*** #define FERR_ENABLEEXCEPTION    0x00000000L     /* enable exception popups */
;|*** #define FERR_DISABLEEXCEPTION   0x00000002L     /* disable exception popups */
;|*** 
;|*** /* definitions for DosDumpProcess */
;|*** #define DDP_DISABLEPROCDUMP     0x00000000L     /* disable process dumps */
;|*** #define DDP_ENABLEPROCDUMP      0x00000001L     /* enable process dumps */
;|*** #define DDP_PERFORMPROCDUMP     0x00000002L     /* perform process dump */
;|*** 
;|*** /* definitions for DosSuppressPopUps */
;|*** #define SPU_DISABLESUPPRESSION  0x00000000L     /* disable popup suppression */
;|*** #define SPU_ENABLESUPPRESSION   0x00000001L     /* enable popup suppression */
;|*** 
;|*** /* definitions for DosQueryRASInfo Index */
;|*** #define SIS_MMIOADDR            0
;|*** #define SIS_MEC_TABLE           1
;|*** #define SIS_SYS_LOG             2
;|*** 
;|*** /* definitions for DosQueryExtLIBPATH and DosSetExtLIBPATH flags parameter */
;|*** #define BEGIN_LIBPATH   1
;|*** #define END_LIBPATH     2
;|*** 
;|*** /* XLATOFF */
;|*** #define DosInsMessage   DosInsertMessage
;|*** #define DosQSysInfo     DosQuerySysInfo
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY        DosError(ULONG error);
;|*** 
;|*** APIRET  APIENTRY        DosGetMessage(PCHAR* pTable, ULONG cTable, PCHAR pBuf, ULONG cbBuf, ULONG msgnumber, PSZ pszFile, PULONG pcbMsg);
;|*** 
;|*** APIRET  APIENTRY        DosErrClass(ULONG code, PULONG pClass, PULONG pAction, PULONG pLocus);
;|*** 
;|*** APIRET  APIENTRY        DosInsertMessage(PCHAR* pTable, ULONG cTable, PSZ pszMsg, ULONG cbMsg, PCHAR pBuf, ULONG cbBuf, PULONG pcbMsg);
;|*** 
;|*** APIRET  APIENTRY        DosPutMessage(HFILE hfile, ULONG cbMsg, PCHAR pBuf);
;|*** 
;|*** APIRET  APIENTRY        DosQuerySysInfo(ULONG iStart, ULONG iLast, PVOID pBuf, ULONG cbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosScanEnv(PSZ pszName, PSZ *ppszValue);
;|*** 
;|*** APIRET  APIENTRY        DosSearchPath(ULONG flag, PSZ pszPathOrName, PSZ pszFilename, PBYTE pBuf, ULONG cbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosQueryMessageCP(PCHAR pb, ULONG cb, PSZ pszFilename, PULONG cbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosQueryRASInfo(ULONG Index, PPVOID Addr);
;|*** 
;|*** APIRET  APIENTRY        DosForceSystemDump(ULONG reserved);
;|*** 
;|*** APIRET  APIENTRY        DosDumpProcess(ULONG Flag, ULONG Drive, PID Pid);
;|*** 
;|*** APIRET  APIENTRY        DosSuppressPopUps(ULONG Flag, ULONG Drive);
;|*** 
;|*** APIRET  APIENTRY        DosSetExtLIBPATH( PSZ pszExtLIBPATH, ULONG flags);
;|*** 
;|*** APIRET  APIENTRY        DosQueryExtLIBPATH( PSZ pszExtLIBPATH, ULONG flags);
;|*** 
;|*** APIRET  APIENTRY        DosVerifyPidTid(PID Pid, TID Tid);   /* 88344 */
;|*** 
;|*** #endif /* INCL_DOSMISC */
;|*** 
;|*** 
;|*** /*** Session manager support */
;|*** 
;|*** #ifdef INCL_DOSSESMGR
;|*** 
;|*** typedef struct _STARTDATA {   /* stdata */
;|***     USHORT  Length;
;|***     USHORT  Related;
;|***     USHORT  FgBg;
;|***     USHORT  TraceOpt;
;|***     PSZ     PgmTitle;
;|***     PSZ     PgmName;
;|***     PBYTE   PgmInputs;
;|***     PBYTE   TermQ;
;|***     PBYTE   Environment;
;|***     USHORT  InheritOpt;
;|***     USHORT  SessionType;
;|***     PSZ     IconFile;
;|***     ULONG   PgmHandle;
;|***     USHORT  PgmControl;
;|***     USHORT  InitXPos;
;|***     USHORT  InitYPos;
;|***     USHORT  InitXSize;
;|***     USHORT  InitYSize;
;|***     USHORT  Reserved;
;|***     PSZ     ObjectBuffer;
;|***     ULONG   ObjectBuffLen;
;|*** } STARTDATA;
;|*** typedef STARTDATA       *PSTARTDATA;
;|*** 
;|*** #define SSF_RELATED_INDEPENDENT 0
;|*** #define SSF_RELATED_CHILD       1
;|*** 
;|*** #define SSF_FGBG_FORE           0
;|*** #define SSF_FGBG_BACK           1
;|*** 
;|*** #define SSF_TRACEOPT_NONE       0
;|*** #define SSF_TRACEOPT_TRACE      1
;|*** #define SSF_TRACEOPT_TRACEALL   2
;|*** 
;|*** #define SSF_INHERTOPT_SHELL     0
;|*** #define SSF_INHERTOPT_PARENT    1
;|*** 
;|*** /* note that these types are identical to those in pmshl.h for PROG_* */
;|*** #define SSF_TYPE_DEFAULT        0
;|*** #define SSF_TYPE_FULLSCREEN     1
;|*** #define SSF_TYPE_WINDOWABLEVIO  2
;|*** #define SSF_TYPE_PM             3
;|*** #define SSF_TYPE_VDM            4
;|*** #define SSF_TYPE_GROUP          5
;|*** #define SSF_TYPE_DLL            6
;|*** #define SSF_TYPE_WINDOWEDVDM    7
;|*** #define SSF_TYPE_PDD            8
;|*** #define SSF_TYPE_VDD            9
;|*** 
;|*** /* note that these flags are identical to those in pmshl.h for SHE_* */
;|*** #define SSF_CONTROL_VISIBLE     0x0000
;|*** #define SSF_CONTROL_INVISIBLE   0x0001
;|*** #define SSF_CONTROL_MAXIMIZE    0x0002
;|*** #define SSF_CONTROL_MINIMIZE    0x0004
;|*** #define SSF_CONTROL_NOAUTOCLOSE 0x0008
;|*** #define SSF_CONTROL_SETPOS      0x8000
;|*** 
;|*** typedef struct _STATUSDATA { /* stsdata */
;|***     USHORT Length;
;|***     USHORT SelectInd;
;|***     USHORT BondInd;
;|*** } STATUSDATA;
;|*** typedef STATUSDATA      *PSTATUSDATA;
;|*** 
;|*** /* SelectInd and BondInd paramater values for DosSetSession */
;|*** #define SET_SESSION_UNCHANGED      0
;|*** #define SET_SESSION_SELECTABLE     1
;|*** #define SET_SESSION_NON_SELECTABLE 2
;|*** #define SET_SESSION_BOND           1
;|*** #define SET_SESSION_NO_BOND        2
;|*** 
;|*** /* TargetOption (scope) parameter values for DosStopSession */
;|*** #define STOP_SESSION_SPECIFIED     0
;|*** #define STOP_SESSION_ALL           1
;|*** 
;|*** /* XLATOFF */
;|*** #define DosQAppType     DosQueryAppType
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY        DosStartSession(PSTARTDATA psd, PULONG pidSession, PPID ppid);
;|*** 
;|*** APIRET  APIENTRY        DosSetSession(ULONG idSession, PSTATUSDATA psd);
;|*** 
;|*** APIRET  APIENTRY        DosSelectSession(ULONG idSession);
;|*** 
;|*** APIRET  APIENTRY        DosStopSession(ULONG scope, ULONG idSession);
;|*** 
;|*** APIRET  APIENTRY        DosQueryAppType(PSZ pszName, PULONG pFlags);
;|*** 
;|*** #endif /* INCL_DOSSESMGR */
;|*** 
;|*** #if (defined(INCL_DOSSESMGR) || defined(INCL_DOSFILEMGR))
;|*** 
;|*** /* AppType returned in by DosQueryAppType in pFlags as follows          */
;|*** #define FAPPTYP_NOTSPEC         0x00000000
;|*** #define FAPPTYP_NOTWINDOWCOMPAT 0x00000001
;|*** #define FAPPTYP_WINDOWCOMPAT    0x00000002
;|*** #define FAPPTYP_WINDOWAPI       0x00000003
;|*** #define FAPPTYP_BOUND           0x00000008
;|*** #define FAPPTYP_DLL             0x00000010
;|*** #define FAPPTYP_DOS             0x00000020
;|*** #define FAPPTYP_PHYSDRV         0x00000040 /* physical device driver       */
;|*** #define FAPPTYP_VIRTDRV         0x00000080 /* virtual device driver        */
;|*** #define FAPPTYP_PROTDLL         0x00000100 /* 'protected memory' dll       */
;|*** #define FAPPTYP_WINDOWSREAL     0x00000200 /*         real mode app        */
;|*** #define FAPPTYP_WINDOWSPROT     0x00000400 /*         protect mode app     */
;|*** #define FAPPTYP_WINDOWSPROT31   0x00001000 /*         3.1 protect mode app */
;|*** #define FAPPTYP_32BIT           0x00004000
;|*** #define FAPPTYP_EXETYPE         FAPPTYP_WINDOWAPI
;|*** 
;|*** #define FAPPTYP_RESERVED        ~(FAPPTYP_WINDOWAPI | FAPPTYP_BOUND | FAPPTYP_DLL | FAPPTYP_DOS | FAPPTYP_PHYSDRV | FAPPTYP_VIRTDRV | FAPPTYP_PROTDLL | FAPPTYP_32BIT)
;|*** 
;|*** #ifdef INCL_DOSFILEMGR
;|*** 
;|*** #define EAT_APPTYP_PMAPI        0x00            /* Uses PM API */
;|*** #define EAT_APPTYP_DOS          0x01            /* DOS APP */
;|*** #define EAT_APPTYP_PMW          0x02            /* Window compatible */
;|*** #define EAT_APPTYP_NOPMW        0x03            /* Not Window compatible */
;|*** #define EAT_APPTYP_EXETYPE      0x03            /* EXE type mask */
;|*** #define EAT_APPTYP_RESERVED     ~(EAT_APPTYP_EXETYPE)
;|*** 
;|*** #endif /* INCL_DOSFILEMGR */
;|*** 
;|*** #endif /* INCL_DOSSESMGR || INCL_DOSFILEMGR */
;|*** 
;|*** 
;|*** /*** Device support */
;|*** 
;|*** #ifdef INCL_DOSDEVICES
;|*** 
;|*** /* XLATOFF */
;|*** #define DosDevIOCtl2    DosDevIOCtl
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY        DosDevConfig(PVOID pdevinfo, ULONG item);
;|*** #define DEVINFO_PRINTER         0       /* Number of printers attached */
;|*** #define DEVINFO_RS232           1       /* Number of RS232 ports */
;|*** #define DEVINFO_FLOPPY          2       /* Number of diskette drives */
;|*** #define DEVINFO_COPROCESSOR     3       /* Presence of math coprocessor */
;|*** #define DEVINFO_SUBMODEL        4       /* PC Submodel Type */
;|*** #define DEVINFO_MODEL           5       /* PC Model Type */
;|*** #define DEVINFO_ADAPTER         6       /* Primary display adapter type */
;|*** 
;|*** APIRET  APIENTRY        DosDevIOCtl(HFILE hDevice, ULONG category, ULONG function, PVOID pParams, ULONG cbParmLenMax, PULONG pcbParmLen, PVOID pData, ULONG cbDataLenMax, PULONG pcbDataLen);
;|*** 
;|*** 
;|*** APIRET  APIENTRY        DosPhysicalDisk(ULONG function, PVOID pBuf, ULONG cbBuf, PVOID pParams, ULONG cbParams);
;|*** #define INFO_COUNT_PARTITIONABLE_DISKS  1       /* # of partitionable disks */
;|*** #define INFO_GETIOCTLHANDLE             2       /* Obtain handle            */
;|*** #define INFO_FREEIOCTLHANDLE            3       /* Release handle           */
;|*** 
;|*** #endif /* INCL_DOSDEVICES */
;|*** 
;|*** 
;|*** /*** DosNamedPipes API Support */
;|*** 
;|*** #ifdef INCL_DOSNMPIPES
;|*** 
;|*** /*** Data structures used with named pipes ***/
;|*** 
;|*** typedef SHANDLE HPIPE;     /* hp */
;|*** typedef HPIPE   *PHPIPE;
;|*** 
;|*** typedef struct _AVAILDATA {             /* AVAILDATA */
;|***     USHORT      cbpipe;                 /* bytes left in the pipe */
;|***     USHORT      cbmessage;              /* bytes left in the current message */
;|*** } AVAILDATA;
;|*** typedef AVAILDATA FAR *PAVAILDATA;
;|*** 
;|*** typedef struct _PIPEINFO {              /* nmpinf */
;|***     USHORT cbOut;                       /* length of outgoing I/O buffer */
;|***     USHORT cbIn;                        /* length of incoming I/O buffer */
;|***     BYTE   cbMaxInst;                   /* maximum number of instances   */
;|***     BYTE   cbCurInst;                   /* current number of instances   */
;|***     BYTE   cbName;                      /* length of pipe name           */
;|***     CHAR   szName[1];                   /* start of name                 */
;|*** } PIPEINFO;
;|*** typedef PIPEINFO FAR *PPIPEINFO;
;|*** 
;|*** typedef struct _PIPESEMSTATE {  /* nmpsmst */
;|***     BYTE   fStatus;             /* type of record, 0 = EOI, 1 = read ok, */
;|***                                 /* 2 = write ok, 3 = pipe closed         */
;|***     BYTE   fFlag;               /* additional info, 01 = waiting thread  */
;|***     USHORT usKey;               /* user's key value                      */
;|***     USHORT usAvail;             /* available data/space if status = 1/2  */
;|*** } PIPESEMSTATE;
;|*** typedef PIPESEMSTATE FAR *PPIPESEMSTATE;
;|*** 
;|*** #define NP_INDEFINITE_WAIT      -1
;|*** #define NP_DEFAULT_WAIT         0L
;|*** 
;|*** /* DosPeekNmPipe() pipe states */
;|*** 
;|*** #define NP_STATE_DISCONNECTED   0x0001
;|*** #define NP_STATE_LISTENING      0x0002
;|*** #define NP_STATE_CONNECTED      0x0003
;|*** #define NP_STATE_CLOSING        0x0004
;|*** 
;|*** /* DosCreateNPipe open modes */
;|*** 
;|*** #define NP_ACCESS_INBOUND       0x0000
;|*** #define NP_ACCESS_OUTBOUND      0x0001
;|*** #define NP_ACCESS_DUPLEX        0x0002
;|*** #define NP_INHERIT              0x0000
;|*** #define NP_NOINHERIT            0x0080
;|*** #define NP_WRITEBEHIND          0x0000
;|*** #define NP_NOWRITEBEHIND        0x4000
;|*** 
;|*** /* DosCreateNPipe and DosQueryNPHState state */
;|*** 
;|*** #define NP_READMODE_BYTE        0x0000
;|*** #define NP_READMODE_MESSAGE     0x0100
;|*** #define NP_TYPE_BYTE            0x0000
;|*** #define NP_TYPE_MESSAGE         0x0400
;|*** #define NP_END_CLIENT           0x0000
;|*** #define NP_END_SERVER           0x4000
;|*** #define NP_WAIT                 0x0000
;|*** #define NP_NOWAIT               0x8000
;|*** #define NP_UNLIMITED_INSTANCES  0x00FF
;|*** 
;|*** /* XLATOFF */
;|*** #define DosCallNmPipe   DosCallNPipe
;|*** #define DosConnectNmPipe        DosConnectNPipe
;|*** #define DosDisConnectNmPipe     DosDisConnectNPipe
;|*** #define DosMakeNmPipe   DosCreateNPipe
;|*** #define DosPeekNmPipe   DosPeekNPipe
;|*** #define DosQNmPHandState        DosQueryNPHState
;|*** #define DosQNmPipeInfo  DosQueryNPipeInfo
;|*** #define DosQNmPipeSemState      DosQueryNPipeSemState
;|*** #define DosRawReadNmPipe        DosRawReadNPipe
;|*** #define DosRawWriteNmPipe       DosRawWriteNPipe
;|*** #define DosSetNmPHandState      DosSetNPHState
;|*** #define DosSetNmPipeSem DosSetNPipeSem
;|*** #define DosTransactNmPipe       DosTransactNPipe
;|*** #define DosWaitNmPipe   DosWaitNPipe
;|*** /* XLATON */
;|*** 
;|*** APIRET  APIENTRY        DosCallNPipe(PSZ pszName, PVOID pInbuf, ULONG cbIn, PVOID pOutbuf, ULONG cbOut, PULONG pcbActual, ULONG msec);
;|*** 
;|*** APIRET  APIENTRY        DosConnectNPipe(HPIPE hpipe);
;|*** 
;|*** APIRET  APIENTRY        DosDisConnectNPipe(HPIPE hpipe);
;|*** 
;|*** APIRET  APIENTRY        DosCreateNPipe(PSZ pszName, PHPIPE pHpipe, ULONG openmode, ULONG pipemode, ULONG cbInbuf, ULONG cbOutbuf, ULONG msec);
;|*** 
;|*** APIRET  APIENTRY        DosPeekNPipe(HPIPE hpipe, PVOID pBuf, ULONG cbBuf, PULONG pcbActual, PAVAILDATA pAvail, PULONG pState);
;|*** 
;|*** APIRET  APIENTRY        DosQueryNPHState(HPIPE hpipe, PULONG pState);
;|*** 
;|*** APIRET  APIENTRY        DosQueryNPipeInfo(HPIPE hpipe, ULONG infolevel, PVOID pBuf, ULONG cbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosQueryNPipeSemState(HSEM hsem, PPIPESEMSTATE pnpss, ULONG cbBuf);
;|*** 
;|*** APIRET  APIENTRY        DosSetNPHState(HPIPE hpipe, ULONG state);
;|*** 
;|*** APIRET  APIENTRY        DosSetNPipeSem(HPIPE hpipe, HSEM hsem, ULONG key);
;|*** 
;|*** APIRET  APIENTRY        DosTransactNPipe(HPIPE hpipe, PVOID pOutbuf, ULONG cbOut, PVOID pInbuf, ULONG cbIn, PULONG pcbRead);
;|*** 
;|*** APIRET  APIENTRY        DosWaitNPipe(PSZ pszName, ULONG msec);
;|*** 
;|*** /* values in fStatus */
;|*** #define NPSS_EOI                   0     /* End Of Information    */
;|*** #define NPSS_RDATA                 1     /* read data available   */
;|*** #define NPSS_WSPACE                2     /* write space available */
;|*** #define NPSS_CLOSE                 3     /* pipe in CLOSING state */
;|*** 
;|*** /* values in npss_flag */
;|*** #define NPSS_WAIT                  0x01  /* waiting thread on end of pipe */
;|*** 
;|*** /* defined bits in pipe mode */
;|*** #define NP_NBLK                    0x8000 /* non-blocking read/write */
;|*** #define NP_SERVER                  0x4000 /* set if server end       */
;|*** #define NP_WMESG                   0x0400 /* write messages          */
;|*** #define NP_RMESG                   0x0100 /* read as messages        */
;|*** #define NP_ICOUNT                  0x00FF /* instance count field    */
;|*** 
;|*** 
;|*** /*      Named pipes may be in one of several states depending on the actions
;|***  *      that have been taken on it by the server end and client end.  The
;|***  *      following state/action table summarizes the valid state transitions:
;|***  *
;|***  *      Current state           Action                  Next state
;|***  *
;|***  *       <none>             server DosMakeNmPipe        DISCONNECTED
;|***  *       DISCONNECTED       server connect              LISTENING
;|***  *       LISTENING          client open                 CONNECTED
;|***  *       CONNECTED          server disconn              DISCONNECTED
;|***  *       CONNECTED          client close                CLOSING
;|***  *       CLOSING            server disconn              DISCONNECTED
;|***  *       CONNECTED          server close                CLOSING
;|***  *       <any other>        server close                <pipe deallocated>
;|***  *
;|***  *      If a server disconnects his end of the pipe, the client end will enter a
;|***  *      special state in which any future operations (except close) on the file
;|***  *      descriptor associated with the pipe will return an error.
;|***  */
;|*** 
;|*** /*
;|***  *      Values for named pipe state
;|***  */
;|*** 
;|*** #define NP_DISCONNECTED            1    /* after pipe creation or Disconnect */
;|*** #define NP_LISTENING               2    /* after DosNmPipeConnect            */
;|*** #define NP_CONNECTED               3    /* after Client open                 */
;|*** #define NP_CLOSING                 4    /* after Client or Server close      */
;|*** 
;|*** 
;|*** #endif /* INCL_DOSNMPIPES */
;|*** 
;|*** 
;|*** /*** DosProfile API support */
;|*** 
;|*** #ifdef INCL_DOSPROFILE
;|*** 
;|*** /*** Perfview API support */
;|*** 
;|*** APIRET  APIENTRY        DosTmrQueryFreq(PULONG pulTmrFreq);
;|*** APIRET  APIENTRY        DosTmrQueryTime(PQWORD pqwTmrTime);
;|*** APIRET  APIENTRY        DosRegisterPerfCtrs(PBYTE pbDataBlk, PBYTE pbTextBlk, ULONG flFlags);
;|*** 
;|*** /* DosProfile ordinal number */
;|*** 
;|*** #define PROF_ORDINAL     133
;|*** 
;|*** /* DosProfile usType */
;|*** 
;|*** #define PROF_SYSTEM      0
;|*** #define PROF_USER        1
;|*** #define PROF_USEDD       2
;|*** #define PROF_KERNEL      4
;|*** #define PROF_VERBOSE     8
;|*** #define PROF_ENABLE     16
;|*** 
;|*** /* DosProfile usFunc */
;|*** 
;|*** #define PROF_ALLOC       0
;|*** #define PROF_CLEAR       1
;|*** #define PROF_ON          2
;|*** #define PROF_OFF         3
;|*** #define PROF_DUMP        4
;|*** #define PROF_FREE        5
;|*** 
;|*** /* DosProfile tic count granularity (DWORD) */
;|*** 
;|*** #define PROF_SHIFT       2
;|*** 
;|*** /* DosProfile module name string length */
;|*** 
;|*** #define PROF_MOD_NAME_SIZE   10
;|*** 
;|*** /* DosProfile error code for end of data */
;|*** 
;|*** #define PROF_END_OF_DATA     13
;|*** 
;|*** #endif /* INCL_DOSPROFILE */
;|*** 
;|*** 
;|*** /*** Virtual DOS Machine API support */
;|*** 
;|*** #ifdef INCL_DOSMVDM
;|*** 
;|*** typedef LHANDLE   HVDD;     /* hvdd */
;|*** typedef HVDD FAR *PHVDD;    /* phvdd */
;|*** 
;|*** APIRET  APIENTRY DosOpenVDD(PSZ pszVDD, PHVDD phvdd);
;|*** 
;|*** APIRET  APIENTRY DosRequestVDD(HVDD hvdd, SGID sgid, ULONG cmd,
;|***                                ULONG cbInput, PVOID pInput,
;|***                                ULONG cbOutput, PVOID pOutput);
;|*** 
;|*** APIRET  APIENTRY DosCloseVDD(HVDD hvdd);
;|*** 
;|*** APIRET  APIENTRY DosQueryDOSProperty(SGID sgid, PSZ pszName,
;|***                                      ULONG cb, PSZ pch);
;|*** 
;|*** APIRET  APIENTRY DosSetDOSProperty(SGID sgid, PSZ pszName,
;|***                                    ULONG cb, PSZ pch);
;|*** #endif /* INCL_DOSMVDM */
;|*** 
;|*** 
;|*** /* The following #else/#endif corresponds to a #if near the top of this */
;|*** /* file.  The next three lines include the 16-bit version of this file, */
;|*** /* hence these lines MUST be the last lines in this include file.       */
;|*** #else /* not INCL_32 */
;|*** 
;|*** #ifdef INCL_16
;|*** #include <bsedos16.h>
; Line 1841
;|*** 
;|*** #ifdef INCL_DOSDEVIOCTL
;|*** #include <bsedev.h>       /* Structures and constants for DosDevIOCtl */
;|*** #endif /* INCL_DOSDEVIOCTL */
;|*** 
;|*** #ifndef INCL_32
;|*** #include <bsesub.h>       /* VIO/KBD/MOU definitions */
; Line 69
;|*** #endif /* INCL_32 */
;|*** #include <bseerr.h>       /* Base error code definitions */
; Line 71
;|*** #endif /* INCL_NOBASEAPI */
;|*** 
;|*** /* OS/2 Presentation Manager Include File */
;|*** 
;|*** #ifndef INCL_NOPMAPI
;|*** #include <pm.h>
; Line 53
;|*** /*DDK*************************************************************************/
;|*** /*                                                                           */
;|*** /* COPYRIGHT    Copyright (C) 1995 IBM Corporation                           */
;|*** /*                                                                           */
;|*** /*    The following IBM OS/2 WARP source code is provided to you solely for  */
;|*** /*    the purpose of assisting you in your development of OS/2 WARP device   */
;|*** /*    drivers. You may use this code in accordance with the IBM License      */
;|*** /*    Agreement provided in the IBM Device Driver Source Kit for OS/2. This  */
;|*** /*    Copyright statement may not be removed.                                */
;|*** /*                                                                           */
;|*** /*****************************************************************************/
;|*** /****************************** Module Header ******************************\
;|*** *
;|*** * Module Name: PM.H
;|*** *
;|*** * OS/2 Presentation Manager top level include file.
;|*** *
;|*** *
;|*** * ===========================================================================
;|*** *
;|*** * The following symbols are used in this file for conditional sections.
;|*** *
;|*** *   #define:                To include:
;|*** *
;|*** *   INCL_PM                  ALL of OS/2 Presentation Manager
;|*** *   INCL_AVIO                OS/2 Advanced VIO (16-Bit only)
;|*** *   INCL_BITMAPFILEFORMAT    OS/2 Bitmap File Format
;|*** *   INCL_DEV                 OS/2 Device Support
;|*** *   INCL_ERRORS              OS/2 Errors
;|*** *   INCL_FONTFILEFORMAT      OS/2 Font File Format
;|*** *   INCL_GPI                 OS/2 GPI
;|*** *   INCL_ORDERS              OS/2 Graphical Order Formats
;|*** *   INCL_PIC                 OS/2 Picture utilities
;|*** *   INCL_SPL                 OS/2 Spooler
;|*** *   INCL_WINSTDDLGS          CUA controls and dialogs
;|*** *   INCL_WIN                 OS/2 Window Manager
;|*** *   INCL_WINWORKPLACE        OS/2 Workplace Shell
;|*** *
;|*** * ===========================================================================
;|*** *
;|*** * Comments at the end of each typedef line give the name tags used in
;|*** * the assembler include version of this file.
;|*** *
;|*** * The assembler include version of this file excludes lines between NOINC
;|*** * and INC comments.
;|*** *
;|*** #ifndef __IBMC__
;|***    * The public version of this file (as shipped with the OS/2 Toolkit
;|***    * product) excludes all non 32-bit material marked in this file
;|***    * as well as any areas specifically marked with __IBMC__ conditional
;|***    * sections - including this paragraph. The H2IBMH rexx command file
;|***    * removes these sections.
;|*** #endif
;|*** \***************************************************************************/
;|*** 
;|*** /* NOINC */
;|*** #ifdef __IBMC__
;|***    #pragma checkout( suspend )
;|***       #ifndef __CHKHDR__
;|***          #pragma checkout( suspend )
;|***       #endif
;|***    #pragma checkout( resume )
;|*** #endif
;|*** /* INC */
;|*** 
;|*** #define PM_INCLUDED
;|*** 
;|*** #ifndef INCL_32         /* If neither INCL_32 or INCL_16 set already */
;|***    #ifndef INCL_16      /* find out from compiler if 32-bit or not.  */
;|***      #ifdef M_I386
;|***         #define INCL_32 /* Compiling for 32-bit */
;|***      #else
;|***         #define INCL_16 /* Compiling for 16-bit */
;|***      #endif
;|***   #endif
;|*** #endif
;|*** 
;|*** /*** if INCL_PM defined then define all the symbols ************************/
;|*** #ifdef INCL_PM
;|***    #define INCL_AVIO
;|***    #define INCL_BITMAPFILEFORMAT
;|***    #define INCL_DEV
;|***    #define INCL_ERRORS
;|***    #define INCL_FONTFILEFORMAT
;|***    #define INCL_GPI
;|***    #define INCL_ORDERS
;|***    #define INCL_PIC
;|***    #define INCL_SPL
;|***    #define INCL_WIN
;|***    #define INCL_WINSTDDLGS
;|***    #define INCL_WINWORKPLACE
;|*** #endif /* INCL_PM */
;|*** 
;|*** 
;|*** #include <pmwin.h>        /* OS/2 Window Manager definitions    */
; Line 95
;|*** /*DDK*************************************************************************/
;|*** /*                                                                           */
;|*** /* COPYRIGHT    Copyright (C) 1995 IBM Corporation                           */
;|*** /*                                                                           */
;|*** /*    The following IBM OS/2 WARP source code is provided to you solely for  */
;|*** /*    the purpose of assisting you in your development of OS/2 WARP device   */
;|*** /*    drivers. You may use this code in accordance with the IBM License      */
;|*** /*    Agreement provided in the IBM Device Driver Source Kit for OS/2. This  */
;|*** /*    Copyright statement may not be removed.                                */
;|*** /*                                                                           */
;|*** /*****************************************************************************/
;|*** /****************************** Module Header ******************************\
;|*** *
;|*** * Module Name: PMWIN.H
;|*** *
;|*** * OS/2 Presentation Manager Window Manager include file.
;|*** *
;|*** *
;|*** * ===========================================================================
;|*** *
;|*** * The folowing symbols are used in this file for conditional sections.
;|*** *
;|*** * If INCL_WIN is defined, all subcomponents are included.
;|*** *
;|*** * Subcomponents marked with "+" are partially included by default:
;|*** *
;|*** *   #define:                To include:
;|*** *
;|*** * + INCL_WINWINDOWMGR       General window management
;|*** * + INCL_WINMESSAGEMGR      Message management
;|*** * + INCL_WININPUT           Mouse and keyboard input
;|*** * + INCL_WINDIALOGS         Dialog boxes
;|*** * + INCL_WINSTATICS         Static controls
;|*** * + INCL_WINBUTTONS         Button controls
;|*** * + INCL_WINENTRYFIELDS     Entry Fields
;|*** *   INCL_WINMLE             Multiple Line Entry Fields
;|*** * + INCL_WINLISTBOXES       List box controls
;|*** * + INCL_WINMENUS           Menu controls
;|*** * + INCL_WINSCROLLBARS      Scroll bar controls
;|*** * + INCL_WINFRAMEMGR        Frame manager
;|*** *   INCL_WINFRAMECTLS       Frame controls (title bars & size border)
;|*** *   INCL_WINRECTANGLES      Rectangle routines
;|*** *   INCL_WINSYS             System values (and colors)
;|*** *   INCL_WINTIMER           Timer routines
;|*** * + INCL_WINACCELERATORS    Keyboard accelerators
;|*** *   INCL_WINTRACKRECT       WinTrackRect() function
;|*** *   INCL_WINCLIPBOARD       Clipboard manager
;|*** * + INCL_WINCURSORS         Text cursors
;|*** * + INCL_WINPOINTERS        Mouse pointers
;|*** *   INCL_WINHOOKS           Hook manager
;|*** * + INCL_WINSWITCHLIST      Shell Switch List API
;|*** *   INCL_WINPROGRAMLIST     Shell Program List API
;|*** *   INCL_WINSHELLDATA       Shell Data (?)
;|*** *   INCL_WINCOUNTRY         Country support
;|*** *   INCL_WINHEAP            Heap Manager
;|*** *   INCL_WINATOM            Atom Manager
;|*** #ifndef INCL_32
;|***    *INCL_WINCATCHTHROW      WinCatch/WinThrow support
;|*** #endif
;|*** *   INCL_WINERRORS          Error code definitions
;|*** *   INCL_NLS                DBCS window manager definition
;|*** * + INCL_WINHELP            Help Manager definitions
;|*** *   INCL_WINSEI             Set Error Info API
;|*** *   INCL_WINLOAD            Load/Delete Library/Procedure
;|*** *   INCL_WINTYPES           Definitions for Datatypes
;|*** *   INCL_WINTHUNKAPI        Thunk Procedure API
;|*** *   INCL_WINDESKTOP         Desktop API
;|*** *
;|*** * ===========================================================================
;|*** *
;|*** * Comments at the end of each typedef line give the name tags used in
;|*** * the assembler include version of this file.
;|*** *
;|*** * The assembler include version of this file excludes lines between NOINC
;|*** * and INC comments.
;|*** *
;|*** #ifndef __IBMC__
;|***    * The public version of this file (as shipped with the OS/2 Toolkit
;|***    * product) excludes all non 32-bit material marked in this file
;|***    * as well as any areas specifically marked with __IBMC__ conditional
;|***    * sections - including this paragraph. The H2IBMH rexx command file
;|***    * removes these sections.
;|*** #endif
;|*** \***************************************************************************/
;|*** 
;|*** /* NOINC */
;|*** #ifdef __IBMC__
;|***    #pragma checkout( suspend )
;|***       #ifndef __CHKHDR__
;|***          #pragma checkout( suspend )
;|***       #endif
;|***    #pragma checkout( resume )
;|*** #endif
;|*** /* INC */
;|*** 
;|*** #define WIN_INCLUDED
;|*** 
;|*** 
;|*** #ifndef INCL_32         /* If neither INCL_32 or INCL_16 set already */
;|***    #ifndef INCL_16      /* find out from compiler if 32-bit or not.  */
;|***      #ifdef M_I386
;|***         #define INCL_32 /* Compiling for 32-bit */
;|***      #else
;|***         #define INCL_16 /* Compiling for 16-bit */
;|***      #endif
;|***   #endif
;|*** #endif
;|*** 
;|*** #ifdef INCL_16
;|***    /* NOINC */
;|***    #include <pmwin16.h>
; Line 111
;|***    /* INC */
;|*** #endif /* INCL_16 */
;|*** 
;|*** /*** include everything if requested ***************************************/
;|*** #ifdef INCL_WIN
;|***    #define INCL_WINWINDOWMGR
;|***    #define INCL_WINMESSAGEMGR
;|***    #define INCL_WININPUT
;|***    #define INCL_WINDIALOGS
;|***    #define INCL_WINSTATICS
;|***    #define INCL_WINBUTTONS
;|***    #define INCL_WINENTRYFIELDS
;|***    #define INCL_WINMLE
;|***    #define INCL_WINLISTBOXES
;|***    #define INCL_WINMENUS
;|***    #define INCL_WINSCROLLBARS
;|***    #define INCL_WINFRAMEMGR
;|***    #define INCL_WINFRAMECTLS
;|***    #define INCL_WINRECTANGLES
;|***    #define INCL_WINSYS
;|***    #define INCL_WINTIMER
;|***    #define INCL_WINACCELERATORS
;|***    #define INCL_WINTRACKRECT
;|***    #define INCL_WINCLIPBOARD
;|***    #define INCL_WINCURSORS
;|***    #define INCL_WINPOINTERS
;|***    #define INCL_WINHOOKS
;|***    #define INCL_WINSWITCHLIST
;|***    #define INCL_WINPROGRAMLIST
;|***    #define INCL_WINSHELLDATA
;|***    #define INCL_WINCOUNTRY
;|***    #define INCL_WINHEAP
;|***    #define INCL_WINATOM
;|***    #ifndef INCL_32
;|***      #define INCL_WINCATCHTHROW
;|***    #endif
;|***    #define INCL_WINERRORS
;|***    #define INCL_WINDDE
;|***    #define INCL_WINHELP
;|***    #define INCL_WINSEI
;|***    #define INCL_WINLOAD
;|***    #define INCL_WINTYPES
;|***    #define INCL_WINDESKTOP
;|***    #define INCL_WINPALETTE
;|***    #define INCL_WINTHUNKAPI
;|***    #define INCL_WINSTDDLGS
;|*** #else /* INCL_WIN */
;|***    /*** include resource compiler required sections ************************/
;|***    #ifdef RC_INVOKED
;|***       #define INCL_WININPUT
;|***       #define INCL_WINDIALOGS
;|***       #define INCL_WINSTATICS
;|***       #define INCL_WINBUTTONS
;|***       #define INCL_WINENTRYFIELDS
;|***       #define INCL_WINLISTBOXES
;|***       #define INCL_WINMENUS
;|***       #define INCL_WINSCROLLBARS
;|***       #define INCL_WINFRAMEMGR
;|***       #define INCL_WINFRAMECTLS
;|***       #define INCL_WINACCELERATORS
;|***       #define INCL_WINPOINTERS
;|***       #define INCL_WINMESSAGEMGR
;|***       #define INCL_WINMLE
;|***       #define INCL_WINHELP
;|***       #define INCL_WINSTDDLGS
;|***       #define INCL_WINSYS
;|***    #endif /* RC_INVOKED */
;|*** #endif /* INCL_WIN */
;|*** 
;|*** /*** ensure standard entry field defintions if MLE is defined **************/
;|*** #ifdef INCL_WINMLE
;|***    #ifndef INCL_WINENTRYFIELDS
;|***       #define INCL_WINENTRYFIELDS
;|***    #endif /* INCL_WINENTRYFIELDS */
;|*** #endif /* INCL_WINMLE */
;|*** 
;|*** /*** INCL_WINCOMMON compatability ******************************************/
;|*** #ifdef INCL_WINCOMMON
;|***    #define INCL_WINWINDOWMGR
;|*** #endif /* INCL_WINCOMMON */
;|*** 
;|*** /*** include PMWIN errors if all errors requested **************************/
;|*** #ifdef INCL_ERRORS
;|***    #define INCL_WINERRORS
;|*** #endif  /* INCL_ERRORS */
;|*** 
;|*** /***************************************************************************/
;|*** /***        General Window Management types, constants and macros        ***/
;|*** /***************************************************************************/
;|*** 
;|*** typedef VOID FAR    *MPARAM;    /* mp    */
;|*** typedef MPARAM FAR  *PMPARAM;   /* pmp   */
;|*** typedef VOID FAR    *MRESULT;   /* mres  */
;|*** typedef MRESULT FAR *PMRESULT;  /* pmres */
;|*** 
;|*** /*** Macros to make an MPARAM from standard types. *************************/
;|*** 
;|*** #define MPVOID                     ((MPARAM)0L)
;|*** #ifdef INCL_32
;|***    #define MPFROMP(p)                 ((MPARAM)((ULONG)(p)))
;|*** #else
;|***    #define MPFROMP(p)                 ((MPARAM)(VOID FAR *)(p))
;|*** #endif
;|*** #define MPFROMHWND(hwnd)           ((MPARAM)(HWND)(hwnd))
;|*** #define MPFROMCHAR(ch)             ((MPARAM)(USHORT)(ch))
;|*** #define MPFROMSHORT(s)             ((MPARAM)(USHORT)(s))
;|*** #define MPFROM2SHORT(s1, s2)       ((MPARAM)MAKELONG(s1, s2))
;|*** #define MPFROMSH2CH(s, uch1, uch2) ((MPARAM)MAKELONG(s, MAKESHORT(uch1, uch2)))
;|*** #define MPFROMLONG(l)              ((MPARAM)(ULONG)(l))
;|*** 
;|*** /*** Macros to extract standard types from an MPARAM ***********************/
;|*** 
;|*** #define PVOIDFROMMP(mp)            ((VOID FAR *)(mp))
;|*** #define HWNDFROMMP(mp)             ((HWND)(mp))
;|*** #define CHAR1FROMMP(mp)            ((UCHAR)((ULONG)mp))
;|*** #define CHAR2FROMMP(mp)            ((UCHAR)((ULONG)mp >> 8))
;|*** #define CHAR3FROMMP(mp)            ((UCHAR)((ULONG)mp >> 16))
;|*** #define CHAR4FROMMP(mp)            ((UCHAR)((ULONG)mp >> 24))
;|*** #define SHORT1FROMMP(mp)           ((USHORT)(ULONG)(mp))
;|*** #define SHORT2FROMMP(mp)           ((USHORT)((ULONG)mp >> 16))
;|*** #define LONGFROMMP(mp)             ((ULONG)(mp))
;|*** 
;|*** /*** Macros to make an MRESULT from standard types. ************************/
;|*** 
;|*** #define MRFROMP(p)                 ((MRESULT)(VOID FAR *)(p))
;|*** #define MRFROMSHORT(s)             ((MRESULT)(USHORT)(s))
;|*** #define MRFROM2SHORT(s1, s2)       ((MRESULT)MAKELONG(s1, s2))
;|*** #define MRFROMLONG(l)              ((MRESULT)(ULONG)(l))
;|*** 
;|*** /*** Macros to extract standard types from an MRESULT **********************/
;|*** 
;|*** #define PVOIDFROMMR(mr)            ((VOID FAR *)(mr))
;|*** #define SHORT1FROMMR(mr)           ((USHORT)((ULONG)mr))
;|*** #define SHORT2FROMMR(mr)           ((USHORT)((ULONG)mr >> 16))
;|*** #define LONGFROMMR(mr)             ((ULONG)(mr))
;|*** 
;|*** 
;|*** /****************************************************************************
;|*** * This is the standard function definition for window procedures.
;|*** * Typically they are names like "XxxxxxxxWndProc", where the prefix
;|*** * "Xxxxxxxxx" is replaced by some name descriptive of the window procedure
;|*** * being declared.  Window procedures must be EXPORTED in the definitions
;|*** * file used by the linker.
;|*** *
;|*** * MRESULT EXPENTRY MyclassWndProc(HWND hwnd,   * window handle        *
;|*** *                                 ULONG msg,   * message number       *
;|*** *                                 MPARAM mp1,  * 1st (packed) parms   *
;|*** *                                 MPARAM mp2); * 2nd (packed) parms   *
;|*** *
;|*** ****************************************************************************/
;|*** 
;|*** /*** Pointer to a window procedure function ********************************/
;|*** #ifdef INCL_32
;|***    typedef MRESULT (EXPENTRY FNWP)(HWND, ULONG, MPARAM, MPARAM);
;|***    typedef FNWP FAR *PFNWP;
;|*** #else
;|***    typedef MRESULT (PASCAL FAR *PFNWP)(HWND, USHORT, MPARAM, MPARAM);
;|*** #endif
;|*** 
;|*** /*** Predefined window handles *********************************************/
;|*** #ifndef INCL_SAADEFS
;|***    #define HWND_DESKTOP               (HWND)1
;|***    #define HWND_OBJECT                (HWND)2
;|*** #endif /* !INCL_SAADEFS */
;|*** 
;|*** #define HWND_TOP                      (HWND)3
;|*** #define HWND_BOTTOM                   (HWND)4
;|*** 
;|*** #ifndef INCL_SAADEFS
;|***    #define HWND_THREADCAPTURE         (HWND)5
;|*** #endif /* !INCL_SAADEFS */
;|*** 
;|*** 
;|*** /*** Standard Window Classes ***********************************************/
;|*** 
;|*** #define WC_FRAME             ((PSZ)0xffff0001L)
;|*** #define WC_COMBOBOX          ((PSZ)0xffff0002L)
;|*** #define WC_BUTTON            ((PSZ)0xffff0003L)
;|*** #define WC_MENU              ((PSZ)0xffff0004L)
;|*** #define WC_STATIC            ((PSZ)0xffff0005L)
;|*** #define WC_ENTRYFIELD        ((PSZ)0xffff0006L)
;|*** #define WC_LISTBOX           ((PSZ)0xffff0007L)
;|*** #define WC_SCROLLBAR         ((PSZ)0xffff0008L)
;|*** #define WC_TITLEBAR          ((PSZ)0xffff0009L)
;|*** #define WC_MLE               ((PSZ)0xffff000AL)
;|*** /* 000B to 000F reserved */
;|*** #define WC_APPSTAT           ((PSZ)0xffff0010L)
;|*** #define WC_KBDSTAT           ((PSZ)0xffff0011L)
;|*** #define WC_PECIC             ((PSZ)0xffff0012L)
;|*** #define WC_DBE_KKPOPUP       ((PSZ)0xffff0013L)
;|*** /* 0014 to 001F reserved */
;|*** #define WC_SPINBUTTON        ((PSZ)0xffff0020L)
;|*** /* 0021 to 0024 reserved */
;|*** #define WC_CONTAINER         ((PSZ)0xffff0025L)
;|*** #define WC_SLIDER            ((PSZ)0xffff0026L)
;|*** #define WC_VALUESET          ((PSZ)0xffff0027L)
;|*** #define WC_NOTEBOOK          ((PSZ)0xffff0028L)
;|*** /* 0029 to 002C used by PEN */
;|*** #define WC_PENFIRST          ((PSZ)0xffff0029L)
;|*** #define WC_PENLAST           ((PSZ)0xffff002CL)
;|*** /* 002D to 0030 reserved */
;|*** /* 0030 to 003F reserved */
;|*** #define WC_MMPMFIRST         ((PSZ)0xffff0040L)
;|*** #define WC_CIRCULARSLIDER    ((PSZ)0xffff0041L)
;|*** #define WC_MMPMLAST          ((PSZ)0xffff004fL)
;|*** 
;|*** /*** Standard Window Styles ************************************************/
;|*** 
;|*** #define WS_VISIBLE                 0x80000000L
;|*** #define WS_DISABLED                0x40000000L
;|*** #define WS_CLIPCHILDREN            0x20000000L
;|*** #define WS_CLIPSIBLINGS            0x10000000L
;|*** #define WS_PARENTCLIP              0x08000000L
;|*** #define WS_SAVEBITS                0x04000000L
;|*** #define WS_SYNCPAINT               0x02000000L
;|*** #define WS_MINIMIZED               0x01000000L
;|*** #define WS_MAXIMIZED               0x00800000L
;|*** #define WS_ANIMATE                 0x00400000L
;|*** 
;|*** /*** Dialog manager styles *************************************************/
;|*** 
;|*** #define WS_GROUP                   0x00010000L
;|*** #define WS_TABSTOP                 0x00020000L
;|*** #define WS_MULTISELECT             0x00040000L
;|*** 
;|*** /*** Class styles *********************************************************/
;|*** 
;|*** #define CS_MOVENOTIFY              0x00000001L
;|*** #define CS_SIZEREDRAW              0x00000004L
;|*** #define CS_HITTEST                 0x00000008L
;|*** #define CS_PUBLIC                  0x00000010L
;|*** #define CS_FRAME                   0x00000020L
;|*** #define CS_CLIPCHILDREN            0x20000000L
;|*** #define CS_CLIPSIBLINGS            0x10000000L
;|*** #define CS_PARENTCLIP              0x08000000L
;|*** #define CS_SAVEBITS                0x04000000L
;|*** #define CS_SYNCPAINT               0x02000000L
;|*** 
;|*** /***************************************************************************/
;|*** /*** Window Manager Subsection part 1 **************************************/
;|*** /***************************************************************************/
;|*** 
;|*** #if (defined(INCL_WINWINDOWMGR) || !defined(INCL_NOCOMMON))
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL    APIENTRY WinRegisterClass(HAB hab,
;|***                                         PSZ pszClassName,
;|***                                         PFNWP pfnWndProc,
;|***                                         ULONG flStyle,
;|***                                         ULONG cbWindowData);
;|***    #else
;|***       BOOL    APIENTRY WinRegisterClass(HAB hab,
;|***                                         PSZ pszClassName,
;|***                                         PFNWP pfnWndProc,
;|***                                         ULONG flStyle,
;|***                                         USHORT cbWindowData);
;|***    #endif  /* INCL_32 */
;|*** 
;|***    #ifdef INCL_32
;|***       MRESULT APIENTRY WinDefWindowProc(HWND hwnd,
;|***                                         ULONG msg,
;|***                                         MPARAM mp1,
;|***                                         MPARAM mp2);
;|***    #else
;|***       MRESULT APIENTRY WinDefWindowProc(HWND hwnd,
;|***                                         USHORT msg,
;|***                                         MPARAM mp1,
;|***                                         MPARAM mp2);
;|***    #endif  /* INCL_32 */
;|*** 
;|***    BOOL    APIENTRY WinDestroyWindow(HWND hwnd);
;|*** 
;|***    BOOL    APIENTRY WinShowWindow(HWND hwnd,
;|***                                   BOOL fShow);
;|*** 
;|***    BOOL    APIENTRY WinQueryWindowRect(HWND hwnd,
;|***                                        PRECTL prclDest);
;|*** 
;|***    HPS     APIENTRY WinGetPS(HWND hwnd);
;|*** 
;|***    BOOL    APIENTRY WinReleasePS(HPS hps);
;|*** 
;|***    BOOL    APIENTRY WinEndPaint(HPS hps);
;|*** 
;|***    #ifndef INCL_SAADEFS
;|*** 
;|***       #ifdef INCL_32
;|***          HPS   APIENTRY WinGetClipPS(HWND hwnd,
;|***                                      HWND hwndClip,
;|***                                      ULONG fl);
;|***       #else
;|***          HPS   APIENTRY WinGetClipPS(HWND hwnd,
;|***                                      HWND hwndClip,
;|***                                      USHORT fs);
;|***       #endif  /* INCL_32 */
;|*** 
;|***       BOOL  APIENTRY WinIsWindowShowing(HWND hwnd);
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    HPS   APIENTRY WinBeginPaint(HWND hwnd,
;|***                                 HPS hps,
;|***                                 PRECTL prclPaint);
;|***    HDC   APIENTRY WinOpenWindowDC(HWND hwnd);
;|*** 
;|***    #ifdef INCL_32
;|***       LONG APIENTRY WinScrollWindow(HWND hwnd,
;|***                                     LONG dx,
;|***                                     LONG dy,
;|***                                     PRECTL prclScroll,
;|***                                     PRECTL prclClip,
;|***                                     HRGN hrgnUpdate,
;|***                                     PRECTL prclUpdate,
;|***                                     ULONG rgfsw);
;|***    #else
;|***       SHORT APIENTRY WinScrollWindow(HWND hwnd,
;|***                                      SHORT dx,
;|***                                      SHORT dy,
;|***                                      PRECTL prclScroll,
;|***                                      PRECTL prclClip,
;|***                                      HRGN hrgnUpdate,
;|***                                      PRECTL prclUpdate,
;|***                                      USHORT rgfsw);
;|***    #endif  /* INCL_32 */
;|*** 
;|***    /*** WinGetClipPS() flags ***********************************************/
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define PSF_LOCKWINDOWUPDATE       0x0001
;|***       #define PSF_CLIPUPWARDS            0x0002
;|***       #define PSF_CLIPDOWNWARDS          0x0004
;|***       #define PSF_CLIPSIBLINGS           0x0008
;|***       #define PSF_CLIPCHILDREN           0x0010
;|***       #define PSF_PARENTCLIP             0x0020
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    /*** WinScrollWindow() flags ********************************************/
;|*** 
;|***    #define SW_SCROLLCHILDREN          0x0001
;|***    #define SW_INVALIDATERGN           0x0002
;|*** 
;|***    BOOL  APIENTRY WinFillRect(HPS hps,
;|***                               PRECTL prcl,
;|***                               LONG lColor);
;|*** 
;|***    /*** WinInitialize/WinTerminate Interface declarations ******************/
;|*** 
;|***    typedef struct _QVERSDATA {  /* qver */
;|***       USHORT   environment;
;|***       USHORT   version;
;|***    } QVERSDATA;
;|***    typedef QVERSDATA FAR *PQVERSDATA;
;|*** 
;|***    #define QV_OS2                     0x0000
;|***    #define QV_CMS                     0x0001
;|***    #define QV_TSO                     0x0002
;|***    #define QV_TSOBATCH                0x0003
;|***    #define QV_OS400                   0x0004
;|*** 
;|*** 
;|***    ULONG  APIENTRY WinQueryVersion(HAB hab);
;|*** 
;|***    #ifdef INCL_32
;|***       HAB    APIENTRY WinInitialize(ULONG flOptions);
;|***    #else
;|***       HAB    APIENTRY WinInitialize(USHORT fsOptions);
;|***    #endif  /* INCL_32 */
;|*** 
;|***    BOOL   APIENTRY WinTerminate(HAB hab);
;|*** 
;|***    HAB    APIENTRY WinQueryAnchorBlock(HWND hwnd);
;|*** 
;|*** #endif /* INCL_WINWINDOWMGR | !INCL_NOCOMMON */
;|*** 
;|*** /***************************************************************************/
;|*** /***  End of Window Manager COMMON section *********************************/
;|*** /***************************************************************************/
;|*** 
;|*** 
;|*** #ifdef INCL_32
;|***    HWND    APIENTRY WinCreateWindow(HWND hwndParent,
;|***                                     PSZ pszClass,
;|***                                     PSZ pszName,
;|***                                     ULONG flStyle,
;|***                                     LONG x,
;|***                                     LONG y,
;|***                                     LONG cx,
;|***                                     LONG cy,
;|***                                     HWND hwndOwner,
;|***                                     HWND hwndInsertBehind,
;|***                                     ULONG id,
;|***                                     PVOID pCtlData,
;|***                                     PVOID pPresParams);
;|*** #else
;|***    HWND    APIENTRY WinCreateWindow(HWND hwndParent,
;|***                                     PSZ pszClass,
;|***                                     PSZ pszName,
;|***                                     ULONG flStyle,
;|***                                     SHORT x,
;|***                                     SHORT y,
;|***                                     SHORT cx,
;|***                                     SHORT cy,
;|***                                     HWND hwndOwner,
;|***                                     HWND hwndInsertBehind,
;|***                                     USHORT id,
;|***                                     PVOID pCtlData,
;|***                                     PVOID pPresParams);
;|*** #endif  /* INCL_32 */
;|*** 
;|*** BOOL    APIENTRY WinEnableWindow(HWND hwnd,
;|***                                  BOOL fEnable);
;|*** 
;|*** BOOL    APIENTRY WinIsWindowEnabled(HWND hwnd);
;|*** 
;|*** BOOL    APIENTRY WinEnableWindowUpdate(HWND hwnd,
;|***                                        BOOL fEnable);
;|*** 
;|*** BOOL    APIENTRY WinIsWindowVisible(HWND hwnd);
;|*** 
;|*** #ifdef INCL_32
;|***    LONG    APIENTRY WinQueryWindowText(HWND hwnd,
;|***                                        LONG cchBufferMax,
;|***                                        PCH pchBuffer);
;|*** #else
;|***    SHORT   APIENTRY WinQueryWindowText(HWND hwnd,
;|***                                        SHORT cchBufferMax,
;|***                                        PCH pchBuffer);
;|*** #endif  /* INCL_32 */
;|*** 
;|*** BOOL    APIENTRY WinSetWindowText(HWND hwnd,
;|***                                   PSZ pszText);
;|*** 
;|*** #ifdef INCL_32
;|***    LONG    APIENTRY WinQueryWindowTextLength(HWND hwnd);
;|*** #else
;|***    SHORT   APIENTRY WinQueryWindowTextLength(HWND hwnd);
;|*** #endif  /* INCL_32 */
;|*** 
;|*** #ifdef INCL_32
;|***    HWND    APIENTRY WinWindowFromID(HWND hwndParent,
;|***                                     ULONG id);
;|*** #else
;|***    HWND    APIENTRY WinWindowFromID(HWND hwndParent,
;|***                                     USHORT id);
;|*** #endif  /* INCL_32 */
;|*** 
;|*** BOOL    APIENTRY WinIsWindow(HAB hab,
;|***                              HWND hwnd);
;|*** 
;|*** #ifdef INCL_32
;|***    HWND    APIENTRY WinQueryWindow(HWND hwnd,
;|***                                    LONG cmd);
;|*** #else
;|***    HWND    APIENTRY WinQueryWindow(HWND hwnd,
;|***                                    SHORT cmd,
;|***                                    BOOL fLock);
;|*** #endif  /* INCL_32 */
;|*** 
;|*** #ifdef INCL_32
;|***    LONG    APIENTRY WinMultWindowFromIDs(HWND hwndParent,
;|***                                          PHWND prghwnd,
;|***                                          ULONG idFirst,
;|***                                          ULONG idLast);
;|*** #else
;|***    SHORT   APIENTRY WinMultWindowFromIDs(HWND hwndParent,
;|***                                          PHWND prghwnd,
;|***                                          USHORT idFirst,
;|***                                          USHORT idLast);
;|*** #endif  /* INCL_32 */
;|*** 
;|*** /*** WinQueryWindow() codes ************************************************/
;|*** 
;|*** #define QW_NEXT         0
;|*** #define QW_PREV         1
;|*** #define QW_TOP          2
;|*** #define QW_BOTTOM       3
;|*** #define QW_OWNER        4
;|*** #define QW_PARENT       5
;|*** #define QW_NEXTTOP      6
;|*** #define QW_PREVTOP      7
;|*** #define QW_FRAMEOWNER   8
;|*** 
;|*** BOOL   APIENTRY WinSetParent(HWND hwnd,
;|***                              HWND hwndNewParent,
;|***                              BOOL fRedraw);
;|*** 
;|*** BOOL   APIENTRY WinIsChild(HWND hwnd,
;|***                            HWND hwndParent);
;|*** BOOL   APIENTRY WinSetOwner(HWND hwnd,
;|***                             HWND hwndNewOwner);
;|*** #ifndef INCL_SAADEFS
;|***    BOOL   APIENTRY WinQueryWindowProcess(HWND hwnd,
;|***                                          PPID ppid,
;|***                                          PTID ptid);
;|*** #endif /* !INCL_SAADEFS */
;|*** 
;|*** HWND   APIENTRY WinQueryObjectWindow(HWND hwndDesktop);
;|*** HWND   APIENTRY WinQueryDesktopWindow(HAB hab,
;|***                                       HDC hdc);
;|*** 
;|*** /*** Window positioning functions */
;|*** 
;|*** /* WinSetMultWindowPos() structure */
;|*** 
;|*** #ifdef INCL_32
;|***    typedef struct _SWP {  /* swp */
;|***       ULONG   fl;
;|***       LONG    cy;
;|***       LONG    cx;
;|***       LONG    y;
;|***       LONG    x;
;|***       HWND    hwndInsertBehind;
;|***       HWND    hwnd;
;|***       ULONG   ulReserved1;
;|***       ULONG   ulReserved2;
;|***    } SWP;
;|*** #else
;|***    typedef struct _SWP {  /* swp */
;|***       USHORT  fs;
;|***       SHORT   cy;
;|***       SHORT   cx;
;|***       SHORT   y;
;|***       SHORT   x;
;|***       HWND    hwndInsertBehind;
;|***       HWND    hwnd;
;|***    } SWP;
;|*** #endif
;|*** typedef SWP FAR *PSWP;
;|*** 
;|*** #ifdef INCL_32
;|***    BOOL   APIENTRY WinSetWindowPos(HWND hwnd,
;|***                                    HWND hwndInsertBehind,
;|***                                    LONG x,
;|***                                    LONG y,
;|***                                    LONG cx,
;|***                                    LONG cy,
;|***                                    ULONG fl);
;|***    BOOL   APIENTRY WinSetMultWindowPos(HAB hab,
;|***                                        PSWP pswp,
;|***                                        ULONG cswp);
;|*** #else
;|***    BOOL   APIENTRY WinSetWindowPos(HWND hwnd,
;|***                                    HWND hwndInsertBehind,
;|***                                    SHORT x,
;|***                                    SHORT y,
;|***                                    SHORT cx,
;|***                                    SHORT cy,
;|***                                    USHORT fs);
;|***    BOOL   APIENTRY WinSetMultWindowPos(HAB hab,
;|***                                        PSWP pswp,
;|***                                        USHORT cswp);
;|*** #endif
;|*** BOOL   APIENTRY WinQueryWindowPos(HWND hwnd,
;|***                                   PSWP pswp);
;|*** 
;|*** /* Values returned from WM_ADJUSTWINDOWPOS and passed to WM_WINDOWPOSCHANGED */
;|*** 
;|*** #define AWP_MINIMIZED              0x00010000L
;|*** #define AWP_MAXIMIZED              0x00020000L
;|*** #define AWP_RESTORED               0x00040000L
;|*** #define AWP_ACTIVATE               0x00080000L
;|*** #define AWP_DEACTIVATE             0x00100000L
;|*** 
;|*** /* WinSetWindowPos() flags */
;|*** 
;|*** #define SWP_SIZE                   0x0001
;|*** #define SWP_MOVE                   0x0002
;|*** #define SWP_ZORDER                 0x0004
;|*** #define SWP_SHOW                   0x0008
;|*** #define SWP_HIDE                   0x0010
;|*** #define SWP_NOREDRAW               0x0020
;|*** #define SWP_NOADJUST               0x0040
;|*** #define SWP_ACTIVATE               0x0080
;|*** #define SWP_DEACTIVATE             0x0100
;|*** #define SWP_EXTSTATECHANGE         0x0200
;|*** #define SWP_MINIMIZE               0x0400
;|*** #define SWP_MAXIMIZE               0x0800
;|*** #define SWP_RESTORE                0x1000
;|*** #define SWP_FOCUSACTIVATE          0x2000
;|*** #define SWP_FOCUSDEACTIVATE        0x4000
;|*** #define SWP_NOAUTOCLOSE            0x8000    /* Valid in PROGDETAILS struct only */
;|*** 
;|*** /* Window painting */
;|*** 
;|*** BOOL  APIENTRY WinUpdateWindow(HWND hwnd);
;|*** 
;|*** BOOL  APIENTRY WinInvalidateRect(HWND hwnd,
;|***                                  PRECTL pwrc,
;|***                                  BOOL fIncludeChildren);
;|*** 
;|*** BOOL  APIENTRY WinInvalidateRegion(HWND hwnd,
;|***                                    HRGN hrgn,
;|***                                    BOOL fIncludeChildren);
;|*** 
;|*** 
;|*** /* Drawing helpers */
;|*** 
;|*** BOOL  APIENTRY WinInvertRect(HPS hps,
;|***                              PRECTL prcl);
;|*** #ifdef INCL_32
;|***    BOOL  APIENTRY WinDrawBitmap(HPS hpsDst,
;|***                                 HBITMAP hbm,
;|***                                 PRECTL pwrcSrc,
;|***                                 PPOINTL pptlDst,
;|***                                 LONG clrFore,
;|***                                 LONG clrBack,
;|***                                 ULONG fl);
;|*** #else
;|***    BOOL  APIENTRY WinDrawBitmap(HPS hpsDst,
;|***                                 HBITMAP hbm,
;|***                                 PRECTL pwrcSrc,
;|***                                 PPOINTL pptlDst,
;|***                                 LONG clrFore,
;|***                                 LONG clrBack,
;|***                                 USHORT fs);
;|*** #endif
;|*** 
;|*** /* WinDrawBitmap() flags */
;|*** 
;|*** #define DBM_NORMAL                 0x0000
;|*** #define DBM_INVERT                 0x0001
;|*** #define DBM_HALFTONE               0x0002
;|*** #define DBM_STRETCH                0x0004
;|*** #define DBM_IMAGEATTRS             0x0008
;|*** 
;|*** 
;|*** #ifdef INCL_32
;|*** 
;|***    LONG    APIENTRY WinDrawText(HPS hps,
;|***                                 LONG cchText,
;|***                                 PCH lpchText,
;|***                                 PRECTL prcl,
;|***                                 LONG clrFore,
;|***                                 LONG clrBack,
;|***                                 ULONG flCmd);
;|*** 
;|*** #else /* not INCL_32 */
;|*** 
;|***    SHORT APIENTRY WinDrawText(HPS hps,
;|***                               SHORT cchText,
;|***                               PCH lpchText,
;|***                               PRECTL prcl,
;|***                               LONG clrFore,
;|***                               LONG clrBack,
;|***                               USHORT fsCmd);
;|*** 
;|*** #endif /* INCL_32 */
;|*** 
;|*** /*
;|*** * WinDrawText() codes:
;|*** * From DT_LEFT to DT_EXTERNALLEADING, the codes are designed to be OR'ed with
;|*** * SS_TEXT to create variations of the basic text static item.
;|*** */
;|*** #define DT_LEFT                    0x0000
;|*** #define DT_QUERYEXTENT             0x0002
;|*** #define DT_UNDERSCORE              0x0010
;|*** #define DT_STRIKEOUT               0x0020
;|*** #define DT_TEXTATTRS               0x0040
;|*** #define DT_EXTERNALLEADING         0x0080
;|*** #define DT_CENTER                  0x0100
;|*** #define DT_RIGHT                   0x0200
;|*** #define DT_TOP                     0x0000
;|*** #define DT_VCENTER                 0x0400
;|*** #define DT_BOTTOM                  0x0800
;|*** #define DT_HALFTONE                0x1000
;|*** #define DT_MNEMONIC                0x2000
;|*** #define DT_WORDBREAK               0x4000
;|*** #define DT_ERASERECT               0x8000
;|*** 
;|*** 
;|*** #ifdef INCL_32
;|*** 
;|***    BOOL APIENTRY WinDrawBorder(HPS hps,
;|***                                PRECTL prcl,
;|***                                LONG cx,
;|***                                LONG cy,
;|***                                LONG clrFore,
;|***                                LONG clrBack,
;|***                                ULONG flCmd);
;|*** 
;|*** #else /* not INCL_32 */
;|*** 
;|***    BOOL APIENTRY WinDrawBorder(HPS hps,
;|***                                PRECTL prcl,
;|***                                SHORT cx,
;|***                                SHORT cy,
;|***                                LONG clrFore,
;|***                                LONG clrBack,
;|***                                USHORT fsCmd);
;|*** 
;|*** #endif /* INCL_32 */
;|*** 
;|*** /* WinDrawBorder() flags */
;|*** 
;|*** #define DB_PATCOPY                 0x0000
;|*** #define DB_PATINVERT               0x0001
;|*** #define DB_DESTINVERT              0x0002
;|*** #define DB_AREAMIXMODE             0x0003
;|*** 
;|*** #define DB_ROP                     0x0007
;|*** #define DB_INTERIOR                0x0008
;|*** #define DB_AREAATTRS               0x0010
;|*** #define DB_STANDARD                0x0100
;|*** #define DB_DLGBORDER               0x0200
;|*** 
;|*** 
;|*** 
;|*** /** Resource loading functions */
;|*** 
;|*** #ifdef INCL_32
;|***    LONG    APIENTRY WinLoadString(HAB hab,
;|***                                   HMODULE hmod,
;|***                                   ULONG id,
;|***                                   LONG cchMax,
;|***                                   PSZ pchBuffer);
;|*** #else
;|***    SHORT   APIENTRY WinLoadString(HAB hab,
;|***                                   HMODULE hmod,
;|***                                   USHORT id,
;|***                                   SHORT cchMax,
;|***                                   PSZ pchBuffer);
;|*** #endif
;|*** #ifndef INCL_SAADEFS
;|***    #ifdef INCL_32
;|***       LONG    APIENTRY WinLoadMessage(HAB hab,
;|***                                       HMODULE hmod,
;|***                                       ULONG id,
;|***                                       LONG cchMax,
;|***                                       PSZ pchBuffer);
;|***    #else
;|***       SHORT   APIENTRY WinLoadMessage(HAB hab,
;|***                                       HMODULE hmod,
;|***                                       USHORT id,
;|***                                       SHORT cchMax,
;|***                                       PSZ pchBuffer);
;|***    #endif
;|*** 
;|*** 
;|*** #endif /* !INCL_SAADEFS */
;|*** 
;|*** /***************************************************************************/
;|*** /****                 Window Manager Subsection part 2                  ****/
;|*** #if (defined(INCL_WINWINDOWMGR) || !defined(INCL_NOCOMMON))
;|*** 
;|***    BOOL APIENTRY WinSetActiveWindow(HWND hwndDesktop,
;|***                                     HWND hwnd);
;|*** 
;|*** #endif /* Window Manager COMMON subsection */
;|*** 
;|*** #ifdef INCL_WINWINDOWMGR
;|***    /* WM_CREATE structure */
;|*** 
;|***    #ifdef INCL_32
;|***       typedef struct _CREATESTRUCT {  /* crst */
;|***          PVOID   pPresParams;
;|***          PVOID   pCtlData;
;|***          ULONG   id;
;|***          HWND    hwndInsertBehind;
;|***          HWND    hwndOwner;
;|***          LONG    cy;
;|***          LONG    cx;
;|***          LONG    y;
;|***          LONG    x;
;|***          ULONG   flStyle;
;|***          PSZ     pszText;
;|***          PSZ     pszClass;
;|***          HWND    hwndParent;
;|***       } CREATESTRUCT;
;|***    #else
;|***       typedef struct _CREATESTRUCT {  /* crst */
;|***          PVOID   pPresParams;
;|***          PVOID   pCtlData;
;|***          USHORT  id;
;|***          HWND    hwndInsertBehind;
;|***          HWND    hwndOwner;
;|***          SHORT   cy;
;|***          SHORT   cx;
;|***          SHORT   y;
;|***          SHORT   x;
;|***          ULONG   flStyle;
;|***          PSZ     pszText;
;|***          PSZ     pszClass;
;|***          HWND    hwndParent;
;|***       } CREATESTRUCT;
;|***    #endif
;|***    typedef CREATESTRUCT FAR *PCREATESTRUCT;
;|*** 
;|***    /* WinQueryClassInfo() structure */
;|*** 
;|***    #ifdef INCL_32
;|***       typedef struct _CLASSINFO {  /* clsi */
;|***          ULONG   flClassStyle;
;|***          PFNWP   pfnWindowProc;
;|***          ULONG   cbWindowData;
;|***       } CLASSINFO;
;|***    #else
;|***       typedef struct _CLASSINFO {  /* clsi */
;|***          ULONG   flClassStyle;
;|***          PFNWP   pfnWindowProc;
;|***          USHORT  cbWindowData;
;|***       } CLASSINFO;
;|***    #endif
;|***    typedef CLASSINFO FAR *PCLASSINFO;
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       PFNWP  APIENTRY WinSubclassWindow(HWND hwnd,
;|***                                         PFNWP pfnwp);
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       LONG    APIENTRY WinQueryClassName(HWND hwnd,
;|***                                          LONG cchMax,
;|***                                          PCH pch);
;|***    #else
;|***       SHORT  APIENTRY WinQueryClassName(HWND hwnd,
;|***                                         SHORT cchMax,
;|***                                         PCH pch);
;|***    #endif
;|***    BOOL   APIENTRY WinQueryClassInfo(HAB hab,
;|***                                      PSZ pszClassName,
;|***                                      PCLASSINFO pClassInfo);
;|*** 
;|***    #ifdef INCL_32
;|***       HWND   APIENTRY WinQueryActiveWindow(HWND hwndDesktop);
;|***    #else
;|***       HWND   APIENTRY WinQueryActiveWindow(HWND hwndDesktop,
;|***                                            BOOL fLock);
;|***    #endif  /* INCL_32 */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       BOOL   APIENTRY WinIsThreadActive(HAB hab);
;|***    #endif /* !INCL_SAADEFS */
;|***    #ifdef INCL_32
;|***       HWND   APIENTRY WinQuerySysModalWindow(HWND hwndDesktop);
;|***    #else
;|***       HWND   APIENTRY WinQuerySysModalWindow(HWND hwndDesktop,
;|***                                              BOOL fLock);
;|***    #endif /* INCL_32 */
;|*** 
;|***    #ifndef INCL_32
;|***       HWND   APIENTRY WinLockWindow(HWND hwnd,
;|***                                     BOOL fLock);
;|***       #ifndef INCL_SAADEFS
;|***          BOOL   APIENTRY WinRegisterWindowDestroy(HWND hwnd,
;|***                                                   BOOL fRegister);
;|***       #endif /* !INCL_SAADEFS */
;|*** 
;|***       SHORT   APIENTRY WinQueryWindowLockCount(HWND hwnd);
;|***    #endif /* !INCL_32 */
;|*** 
;|***    BOOL   APIENTRY WinSetSysModalWindow(HWND hwndDesktop,
;|***                                         HWND hwnd);
;|*** 
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #ifdef INCL_32
;|***          USHORT APIENTRY WinQueryWindowUShort(HWND hwnd,
;|***                                               LONG index);
;|***          BOOL   APIENTRY WinSetWindowUShort(HWND hwnd,
;|***                                             LONG index,
;|***                                             USHORT us);
;|***          ULONG  APIENTRY WinQueryWindowULong(HWND hwnd,
;|***                                              LONG index);
;|***          BOOL   APIENTRY WinSetWindowULong(HWND hwnd,
;|***                                            LONG index,
;|***                                            ULONG ul);
;|***          PVOID  APIENTRY WinQueryWindowPtr(HWND hwnd,
;|***                                            LONG index);
;|***          BOOL   APIENTRY WinSetWindowPtr(HWND hwnd,
;|***                                          LONG index,
;|***                                          PVOID p);
;|***          BOOL   APIENTRY WinSetWindowBits(HWND hwnd,
;|***                                           LONG index,
;|***                                           ULONG flData,
;|***                                           ULONG flMask);
;|***       #else
;|***          USHORT APIENTRY WinQueryWindowUShort(HWND hwnd,
;|***                                               SHORT index);
;|***          BOOL   APIENTRY WinSetWindowUShort(HWND hwnd,
;|***                                             SHORT index,
;|***                                             USHORT us);
;|***          ULONG  APIENTRY WinQueryWindowULong(HWND hwnd,
;|***                                              SHORT index);
;|***          BOOL   APIENTRY WinSetWindowULong(HWND hwnd,
;|***                                            SHORT index,
;|***                                            ULONG ul);
;|***          PVOID  APIENTRY WinQueryWindowPtr(HWND hwnd,
;|***                                            SHORT index);
;|***          BOOL   APIENTRY WinSetWindowPtr(HWND hwnd,
;|***                                          SHORT index,
;|***                                          PVOID p);
;|***          BOOL   APIENTRY WinSetWindowBits(HWND hwnd,
;|***                                           SHORT index,
;|***                                           ULONG flData,
;|***                                           ULONG flMask);
;|***       #endif
;|*** 
;|***       /*** Standard WinQueryWindowUShort/ULong() indices *******************/
;|***       #define QWS_USER                   0
;|***       #define QWS_ID                     (-1)
;|***       #define QWS_MIN                    (-1)
;|*** 
;|***       #define QWL_USER                   0
;|***       #define QWL_STYLE                  (-2)
;|***       #define QWP_PFNWP                  (-3)
;|***       #define QWL_HMQ                    (-4)
;|***       #define QWL_RESERVED               (-5)
;|*** 
;|***       #define QWL_PENDATA                (-7)
;|***       #define QWL_MIN                    (-8)
;|*** 
;|***       /*** WC_FRAME WinQueryWindowUShort/ULong() indices *******************/
;|***       #define QWL_HHEAP                  0x0004
;|***       #define QWL_HWNDFOCUSSAVE          0x0018
;|***       #define QWL_DEFBUTTON              0x0040
;|***       #define QWL_PSSCBLK                0x0048
;|***       #define QWL_PFEPBLK                0x004c
;|***       #define QWL_PSTATBLK               0x0050
;|*** 
;|***       #define QWS_FLAGS                  0x0008
;|***       #define QWS_RESULT                 0x000a
;|***       #define QWS_XRESTORE               0x000c
;|***       #define QWS_YRESTORE               0x000e
;|***       #define QWS_CXRESTORE              0x0010
;|***       #define QWS_CYRESTORE              0x0012
;|***       #define QWS_XMINIMIZE              0x0014
;|***       #define QWS_YMINIMIZE              0x0016
;|*** 
;|*** 
;|***       /*** Window enumeration **********************************************/
;|***       typedef LHANDLE HENUM;  /* henum */
;|*** 
;|***       HENUM APIENTRY WinBeginEnumWindows(HWND hwnd);
;|***       HWND  APIENTRY WinGetNextWindow(HENUM henum);
;|***       BOOL  APIENTRY WinEndEnumWindows(HENUM henum);
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       HWND  APIENTRY WinWindowFromPoint(HWND hwnd,
;|***                                         PPOINTL pptl,
;|***                                         BOOL fChildren);
;|*** 
;|***       BOOL  APIENTRY WinMapWindowPoints(HWND hwndFrom,
;|***                                         HWND hwndTo,
;|***                                         PPOINTL prgptl,
;|***                                         LONG cwpt);
;|***    #else
;|***       HWND  APIENTRY WinWindowFromPoint(HWND hwnd,
;|***                                         PPOINTL pptl,
;|***                                         BOOL fChildren,
;|***                                         BOOL fLock);
;|*** 
;|***       BOOL  APIENTRY WinMapWindowPoints(HWND hwndFrom,
;|***                                         HWND hwndTo,
;|***                                         PPOINTL prgptl,
;|***                                         SHORT cwpt);
;|***    #endif /* INCL_32 */
;|*** 
;|*** 
;|***    /* More window painting functions */
;|*** 
;|***    BOOL  APIENTRY WinValidateRect(HWND hwnd,
;|***                                   PRECTL prcl,
;|***                                   BOOL fIncludeChildren);
;|*** 
;|***    BOOL  APIENTRY WinValidateRegion(HWND hwnd,
;|***                                     HRGN hrgn,
;|***                                     BOOL fIncludeChildren);
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       HWND  APIENTRY WinWindowFromDC(HDC hdc);
;|*** 
;|***       HDC   APIENTRY WinQueryWindowDC(HWND hwnd);
;|*** 
;|***       HPS   APIENTRY WinGetScreenPS(HWND hwndDesktop);
;|*** 
;|***       BOOL  APIENTRY WinLockWindowUpdate(HWND hwndDesktop,
;|***                                          HWND hwndLockUpdate);
;|*** 
;|***       BOOL  APIENTRY WinLockVisRegions(HWND hwndDesktop,
;|***                                        BOOL fLock);
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    BOOL  APIENTRY WinQueryUpdateRect(HWND hwnd,
;|***                                      PRECTL prcl);
;|*** 
;|***    #ifdef INCL_32
;|***       LONG APIENTRY WinQueryUpdateRegion(HWND hwnd,
;|***                                          HRGN hrgn);
;|*** 
;|***       LONG APIENTRY WinExcludeUpdateRegion(HPS hps,
;|***                                            HWND hwnd);
;|***    #else
;|***       SHORT APIENTRY WinQueryUpdateRegion(HWND hwnd,
;|***                                           HRGN hrgn);
;|*** 
;|***       SHORT APIENTRY WinExcludeUpdateRegion(HPS hps,
;|***                                             HWND hwnd);
;|***    #endif
;|*** 
;|*** #endif /* INCL_WINWINDOWMGR */
;|*** 
;|*** #if (defined(INCL_WINMESSAGEMGR) || !defined(INCL_NOCOMMON))
;|*** 
;|***    /* QMSG structure */
;|***    #ifdef INCL_32
;|***       typedef struct _QMSG {  /* qmsg */
;|***          HWND    hwnd;
;|***          ULONG   msg;
;|***          MPARAM  mp1;
;|***          MPARAM  mp2;
;|***          ULONG   time;
;|***          POINTL  ptl;
;|***          ULONG   reserved;
;|***       } QMSG;
;|***    #else
;|***       typedef struct _QMSG {  /* qmsg */
;|***          HWND    hwnd;
;|***          USHORT  msg;
;|***          MPARAM  mp1;
;|***          MPARAM  mp2;
;|***          ULONG   time;
;|***          POINTL  ptl;
;|***       } QMSG;
;|***    #endif
;|***    typedef QMSG FAR *PQMSG;
;|*** 
;|***    /*** Standard Window Messages *******************************************/
;|***    #define WM_NULL                    0x0000
;|***    #define WM_CREATE                  0x0001
;|***    #define WM_DESTROY                 0x0002
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #ifndef INCL_32
;|***          #define WM_OTHERWINDOWDESTROYED    0x0003
;|***       #endif
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define WM_ENABLE                  0x0004
;|***    #define WM_SHOW                    0x0005
;|***    #define WM_MOVE                    0x0006
;|***    #define WM_SIZE                    0x0007
;|***    #define WM_ADJUSTWINDOWPOS         0x0008
;|*** 
;|***    #define WM_CALCVALIDRECTS          0x0009
;|*** 
;|***    #define WM_SETWINDOWPARAMS         0x000a
;|***    #define WM_QUERYWINDOWPARAMS       0x000b
;|***    #define WM_HITTEST                 0x000c
;|***    #define WM_ACTIVATE                0x000d
;|***    #define WM_SETFOCUS                0x000f
;|***    #define WM_SETSELECTION            0x0010
;|*** 
;|***    /* language support Winproc */
;|***    #define WM_PPAINT                  0x0011
;|***    #define WM_PSETFOCUS               0x0012
;|***    #define WM_PSYSCOLORCHANGE         0x0013
;|***    #define WM_PSIZE                   0x0014
;|***    #define WM_PACTIVATE               0x0015
;|***    #define WM_PCONTROL                0x0016
;|*** 
;|***    #define WM_COMMAND                 0x0020
;|***    #define WM_SYSCOMMAND              0x0021
;|***    #define WM_HELP                    0x0022
;|***    #define WM_PAINT                   0x0023
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define WM_TIMER                0x0024
;|***       #define WM_SEM1                 0x0025
;|***       #define WM_SEM2                 0x0026
;|***       #define WM_SEM3                 0x0027
;|***       #define WM_SEM4                 0x0028
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define WM_CLOSE                   0x0029
;|***    #define WM_QUIT                    0x002a
;|***    #define WM_SYSCOLORCHANGE          0x002b
;|***    #define WM_SYSVALUECHANGED         0x002d
;|***    #define WM_APPTERMINATENOTIFY      0x002e
;|***    #define WM_PRESPARAMCHANGED        0x002f
;|*** 
;|***    /* Control notification messages */
;|***    #define WM_CONTROL                 0x0030
;|***    #define WM_VSCROLL                 0x0031
;|***    #define WM_HSCROLL                 0x0032
;|***    #define WM_INITMENU                0x0033
;|***    #define WM_MENUSELECT              0x0034
;|***    #define WM_MENUEND                 0x0035
;|***    #define WM_DRAWITEM                0x0036
;|***    #define WM_MEASUREITEM             0x0037
;|***    #define WM_CONTROLPOINTER          0x0038
;|***    #define WM_QUERYDLGCODE            0x003a
;|***    #define WM_INITDLG                 0x003b
;|***    #define WM_SUBSTITUTESTRING        0x003c
;|***    #define WM_MATCHMNEMONIC           0x003d
;|***    #define WM_SAVEAPPLICATION         0x003e
;|*** 
;|***    #ifdef INCL_16
;|***       #define WM_CONTROLHEAP          0x0039
;|***    #endif /* INCL_16 */
;|*** 
;|***    /*************************************************************************
;|***    * Reserve a range of messages for help manager.  This range includes
;|***    * public messages, defined below, and private ones, which need to be
;|***    * reserved here to prevent clashing with application messages
;|***    *************************************************************************/
;|*** 
;|***    #define WM_HELPBASE                0x0F00 /* Start of msgs for help manager   */
;|***    #define WM_HELPTOP                 0x0FFF /* End of msgs for help manager     */
;|*** 
;|***    #define WM_USER                    0x1000
;|*** 
;|***    /*** WM_COMMAND msg source codes ****************************************/
;|***    #define CMDSRC_PUSHBUTTON      1
;|***    #define CMDSRC_MENU            2
;|***    #define CMDSRC_ACCELERATOR     3
;|***    #define CMDSRC_FONTDLG         4
;|***    #define CMDSRC_FILEDLG         5
;|***    #define CMDSRC_PRINTDLG        6
;|***    #define CMDSRC_COLORDLG        7
;|***    #define CMDSRC_OTHER           0
;|*** 
;|***    #pragma pack(1) /* force structure alignment packing */
;|*** 
;|***    /*
;|***    * The following structure and macro are used to access the
;|***    * WM_COMMAND, WM_HELP, and WM_SYSCOMMAND message parameters:
;|***    */
;|***    #ifdef INCL_32
;|***       typedef struct _COMMANDMSG {  /* commandmsg */
;|***          USHORT  cmd;              /* mp1 */
;|***          USHORT  unused;
;|***          USHORT  source;           /* mp2 */
;|***          USHORT  fMouse;
;|***       } CMDMSG;
;|***       typedef CMDMSG FAR *PCMDMSG;
;|*** 
;|***       #define COMMANDMSG(pmsg) \
;|***       ((PCMDMSG)((PBYTE)pmsg + sizeof(MPARAM) ))
;|***    #else
;|***       typedef struct _COMMANDMSG {  /* commandmsg */
;|***          USHORT  source;           /* mp2 */
;|***          USHORT  fMouse;
;|***          USHORT  cmd;              /* mp1 */
;|***          USHORT  unused;
;|***       } CMDMSG;
;|***       typedef CMDMSG FAR *PCMDMSG;
;|*** 
;|***       #define COMMANDMSG(pmsg) \
;|***       ((PCMDMSG)((PBYTE)pmsg - sizeof(MPARAM) * 2))
;|***    #endif
;|*** 
;|***    #pragma pack()  /* restore packing to default */
;|*** 
;|***    /*** The following structure is used by the WinQueryQueueInfo() routine */
;|***    #ifdef INCL_32
;|***       typedef struct _MQINFO {  /* mqi */
;|***          ULONG   cb;
;|***          PID     pid;
;|***          TID     tid;
;|***          ULONG   cmsgs;
;|***          PVOID   pReserved;
;|***       } MQINFO;
;|***    #else
;|***       typedef struct _MQINFO {     /* mqi */
;|***          USHORT  cb;
;|***          USHORT  pid;
;|***          USHORT  tid;
;|***          USHORT  cmsgs;
;|***          PVOID   pReserved;
;|***       } MQINFO;
;|***    #endif
;|***    typedef MQINFO FAR *PMQINFO;
;|*** 
;|***    #ifdef INCL_32
;|***       MRESULT APIENTRY WinSendMsg(HWND hwnd,
;|***                                   ULONG msg,
;|***                                   MPARAM mp1,
;|***                                   MPARAM mp2);
;|*** 
;|***       HMQ     APIENTRY WinCreateMsgQueue(HAB hab,
;|***                                          LONG cmsg);
;|*** 
;|***       BOOL    APIENTRY WinDestroyMsgQueue(HMQ hmq);
;|*** 
;|***       BOOL    APIENTRY WinQueryQueueInfo(HMQ hmq,
;|***                                          PMQINFO pmqi,
;|***                                          ULONG cbCopy);
;|***    #else
;|***       MRESULT APIENTRY WinSendMsg(HWND hwnd,
;|***                                   USHORT msg,
;|***                                   MPARAM mp1,
;|***                                   MPARAM mp2);
;|*** 
;|***       HMQ     APIENTRY WinCreateMsgQueue(HAB hab,
;|***                                          SHORT cmsg);
;|*** 
;|***       BOOL    APIENTRY WinDestroyMsgQueue(HMQ hmq);
;|*** 
;|***       BOOL    APIENTRY WinQueryQueueInfo(HMQ hmq,
;|***                                          PMQINFO pmqi,
;|***                                          USHORT cbCopy);
;|***    #endif
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       BOOL    APIENTRY WinCancelShutdown(HMQ hmq,
;|***                                          BOOL fCancelAlways);
;|***    #endif /* INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL    APIENTRY WinGetMsg(HAB hab,
;|***                                  PQMSG pqmsg,
;|***                                  HWND hwndFilter,
;|***                                  ULONG msgFilterFirst,
;|***                                  ULONG msgFilterLast);
;|*** 
;|***       BOOL    APIENTRY WinPeekMsg(HAB hab,
;|***                                   PQMSG pqmsg,
;|***                                   HWND hwndFilter,
;|***                                   ULONG msgFilterFirst,
;|***                                   ULONG msgFilterLast,
;|***                                   ULONG fl);
;|*** 
;|***       MRESULT APIENTRY WinDispatchMsg(HAB hab,
;|***                                       PQMSG pqmsg);
;|*** 
;|***       BOOL    APIENTRY WinPostMsg(HWND hwnd,
;|***                                   ULONG msg,
;|***                                   MPARAM mp1,
;|***                                   MPARAM mp2);
;|*** 
;|***       BOOL    APIENTRY WinRegisterUserMsg(HAB hab,
;|***                                           ULONG msgid,
;|***                                           LONG datatype1,
;|***                                           LONG dir1,
;|***                                           LONG datatype2,
;|***                                           LONG dir2,
;|***                                           LONG datatyper);
;|*** 
;|***       BOOL    APIENTRY WinRegisterUserDatatype(HAB hab,
;|***                                                LONG datatype,
;|***                                                LONG count,
;|***                                                PLONG types);
;|***       BOOL    APIENTRY WinSetMsgMode(HAB hab,
;|***                                      PSZ classname,
;|***                                      LONG control);
;|*** 
;|***       BOOL    APIENTRY WinSetSynchroMode(HAB hab,
;|***                                          LONG mode);
;|***    #else
;|***       BOOL    APIENTRY WinGetMsg(HAB hab,
;|***                                  PQMSG pqmsg,
;|***                                  HWND hwndFilter,
;|***                                  USHORT msgFilterFirst,
;|***                                  USHORT msgFilterLast);
;|*** 
;|***       BOOL    APIENTRY WinPeekMsg(HAB hab,
;|***                                   PQMSG pqmsg,
;|***                                   HWND hwndFilter,
;|***                                   USHORT msgFilterFirst,
;|***                                   USHORT msgFilterLast,
;|***                                   USHORT fs);
;|*** 
;|***       MRESULT APIENTRY WinDispatchMsg(HAB hab,
;|***                                       PQMSG pqmsg);
;|*** 
;|***       BOOL    APIENTRY WinPostMsg(HWND hwnd,
;|***                                   USHORT msg,
;|***                                   MPARAM mp1,
;|***                                   MPARAM mp2);
;|*** 
;|***       BOOL    APIENTRY WinRegisterUserMsg(HAB hab,
;|***                                           USHORT msgid,
;|***                                           SHORT datatype1,
;|***                                           SHORT dir1,
;|***                                           SHORT datatype2,
;|***                                           SHORT dir2,
;|***                                           SHORT datatyper);
;|*** 
;|***       BOOL    APIENTRY WinRegisterUserDatatype(HAB hab,
;|***                                                SHORT datatype,
;|***                                                SHORT count,
;|***                                                PSHORT types);
;|*** 
;|***       BOOL    APIENTRY WinSetMsgMode(HAB hab,
;|***                                      PSZ classname,
;|***                                      SHORT control);
;|*** 
;|***       BOOL    APIENTRY WinSetSynchroMode(HAB hab,
;|***                                          SHORT mode);
;|***    #endif
;|*** 
;|***    /*** WinPeekMsg() constants *********************************************/
;|***    #define PM_REMOVE                  0x0001
;|***    #define PM_NOREMOVE                0x0000
;|*** 
;|***    /*** WinRegisterUserDatatype datatypes defined in separate file *********/
;|***    #ifdef INCL_WINTYPES
;|***       #include <pmtypes.h>
;|***    #endif /*INCL_WINTYPES*/
;|*** 
;|***    /*** WinRegisterUserMsg direction codes *********************************/
;|***    #define RUM_IN                     1
;|***    #define RUM_OUT                    2
;|***    #define RUM_INOUT                  3
;|*** 
;|***    /*** WinSetMsgMode constants *******************************************/
;|***    #define SMD_DELAYED                0x0001
;|***    #define SMD_IMMEDIATE              0x0002
;|*** 
;|***    /*** WinSetSynchroMode constants ***************************************/
;|***    #define SSM_SYNCHRONOUS            0x0001
;|***    #define SSM_ASYNCHRONOUS           0x0002
;|***    #define SSM_MIXED                  0x0003
;|*** 
;|*** #endif /* WINMESSAGEMGR || !INCL_NOCOMMON       */
;|*** 
;|*** #ifdef INCL_WINMESSAGEMGR
;|*** 
;|***    /*** WM_CALCVALIDRECTS return flags *************************************/
;|***    #define CVR_ALIGNLEFT               0x0001
;|***    #define CVR_ALIGNBOTTOM             0x0002
;|***    #define CVR_ALIGNRIGHT              0x0004
;|***    #define CVR_ALIGNTOP                0x0008
;|***    #define CVR_REDRAW                  0x0010
;|*** 
;|***    /*** WM_HITTEST return codes ********************************************/
;|***    #define HT_NORMAL                   0
;|***    #define HT_TRANSPARENT              (-1)
;|***    #define HT_DISCARD                  (-2)
;|***    #define HT_ERROR                    (-3)
;|*** 
;|***    /*** WM_SET/QUERYWINDOWPARAMS structures and flags **********************/
;|***    #ifdef INCL_32
;|***       typedef struct _WNDPARAMS {  /* wprm */
;|***          ULONG   fsStatus;
;|***          ULONG   cchText;
;|***          PSZ     pszText;
;|***          ULONG   cbPresParams;
;|***          PVOID   pPresParams;
;|***          ULONG   cbCtlData;
;|***          PVOID   pCtlData;
;|***       } WNDPARAMS;
;|***    #else
;|***       typedef struct _WNDPARAMS {  /* wprm */
;|***          USHORT  fsStatus;
;|***          USHORT  cchText;
;|***          PSZ     pszText;
;|***          USHORT  cbPresParams;
;|***          PVOID   pPresParams;
;|***          USHORT  cbCtlData;
;|***          PVOID   pCtlData;
;|***       } WNDPARAMS;
;|***    #endif
;|***    typedef WNDPARAMS FAR *PWNDPARAMS;
;|*** 
;|***    #define WPM_TEXT                   0x0001
;|***    #define WPM_CTLDATA                0x0002
;|***    #define WPM_PRESPARAMS             0x0004
;|***    #define WPM_CCHTEXT                0x0008
;|***    #define WPM_CBCTLDATA              0x0010
;|***    #define WPM_CBPRESPARAMS           0x0020
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       BOOL    APIENTRY WinInSendMsg(HAB hab);
;|***    #endif /* INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL    APIENTRY WinBroadcastMsg(HWND hwnd,
;|***                                        ULONG msg,
;|***                                        MPARAM mp1,
;|***                                        MPARAM mp2,
;|***                                        ULONG rgf);
;|***    #else
;|***       BOOL    APIENTRY WinBroadcastMsg(HWND hwnd,
;|***                                        USHORT msg,
;|***                                        MPARAM mp1,
;|***                                        MPARAM mp2,
;|***                                        USHORT rgf);
;|***    #endif
;|*** 
;|***    /*** WinBroadcastMsg codes **********************************************/
;|***    #define BMSG_POST                  0x0000
;|***    #define BMSG_SEND                  0x0001
;|***    #define BMSG_POSTQUEUE             0x0002
;|***    #define BMSG_DESCENDANTS           0x0004
;|***    #define BMSG_FRAMEONLY             0x0008
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL  APIENTRY WinWaitMsg(HAB hab,
;|***                                 ULONG msgFirst,
;|***                                 ULONG msgLast);
;|***    #else
;|***       BOOL  APIENTRY WinWaitMsg(HAB hab,
;|***                                 USHORT msgFirst,
;|***                                 USHORT msgLast);
;|***    #endif
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       ULONG APIENTRY WinQueryQueueStatus(HWND hwndDesktop);
;|*** 
;|***       /*** WinQueryQueueStatus() constants *********************************/
;|***       #define QS_KEY                     0x0001
;|***       #define QS_MOUSEBUTTON             0x0002
;|***       #define QS_MOUSEMOVE               0x0004
;|***       #define QS_MOUSE                   0x0006   /* QS_MOUSEMOVE|QS_MOUSEBUTTON */
;|***       #define QS_TIMER                   0x0008
;|***       #define QS_PAINT                   0x0010
;|***       #define QS_POSTMSG                 0x0020
;|***       #define QS_SEM1                    0x0040
;|***       #define QS_SEM2                    0x0080
;|***       #define QS_SEM3                    0x0100
;|***       #define QS_SEM4                    0x0200
;|***       #define QS_SENDMSG                 0x0400
;|***       #define QS_MSGINPUT                0x0800
;|*** 
;|***       BOOL  APIENTRY WinQueryMsgPos(HAB hab,
;|***                                     PPOINTL pptl);
;|*** 
;|***       ULONG APIENTRY WinQueryMsgTime(HAB hab);
;|*** 
;|***       #ifdef INCL_32
;|***          #ifndef INCL_DOSSEMAPHORES
;|***             #ifndef __HEV__
;|***                #define __HEV__
;|***                typedef ULONG HEV;    /* hev */
;|***             #endif
;|***             typedef ULONG HMTX;   /* hmtx */
;|***             typedef ULONG HMUX;   /* hmux */
;|***          #endif
;|*** 
;|***          APIRET APIENTRY WinWaitEventSem(HEV hev,
;|***                                          ULONG ulTimeout);
;|*** 
;|***          APIRET APIENTRY WinRequestMutexSem(HMTX hmtx,
;|***                                             ULONG ulTimeout);
;|*** 
;|***          APIRET APIENTRY WinWaitMuxWaitSem(HMUX hmux,
;|***                                            ULONG ulTimeout,
;|***                                            PULONG pulUser);
;|*** 
;|***       #else
;|***          USHORT APIENTRY WinMsgSemWait(HSEM hsem,
;|***                                        LONG dtTimeout);
;|*** 
;|***          USHORT APIENTRY WinMsgMuxSemWait(PUSHORT pisemCleared,
;|***                                           PVOID pmxsl,
;|***                                           LONG dtTimeout);
;|***       #endif
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL  APIENTRY WinPostQueueMsg(HMQ hmq,
;|***                                      ULONG msg,
;|***                                      MPARAM mp1,
;|***                                      MPARAM mp2);
;|***    #else
;|***       BOOL  APIENTRY WinPostQueueMsg(HMQ hmq,
;|***                                      USHORT msg,
;|***                                      MPARAM mp1,
;|***                                      MPARAM mp2);
;|***    #endif
;|*** 
;|***    /*** WinSetMsgInterest()/WinSetClassMsgInterest() constants *************/
;|***    #define SMIM_ALL                   0x0EFF
;|***    #define SMI_NOINTEREST             0x0001
;|***    #define SMI_INTEREST               0x0002
;|***    #define SMI_RESET                  0x0004
;|***    #define SMI_AUTODISPATCH           0x0008
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL  APIENTRY WinSetMsgInterest(HWND hwnd,
;|***                                        ULONG msg_class,
;|***                                        LONG control);
;|*** 
;|***       BOOL  APIENTRY WinSetClassMsgInterest(HAB hab,
;|***                                             PSZ pszClassName,
;|***                                             ULONG msg_class,
;|***                                             LONG control);
;|***    #else
;|***       BOOL  APIENTRY WinSetMsgInterest(HWND hwnd,
;|***                                        USHORT msg_class,
;|***                                        SHORT control);
;|*** 
;|***       BOOL  APIENTRY WinSetClassMsgInterest(HAB hab,
;|***                                             PSZ pszClassName,
;|***                                             USHORT msg_class,
;|***                                             SHORT control);
;|***    #endif
;|*** 
;|*** #endif /* INCL_WINMESSAGEMGR */
;|*** 
;|*** /*** Keyboard and mouse ****************************************************/
;|*** 
;|*** #if (defined(INCL_WININPUT) || !defined(INCL_NOCOMMON))
;|*** 
;|***    /*** Keyboard and mouse input COMMON subsection *************************/
;|***    BOOL  APIENTRY WinSetFocus(HWND hwndDesktop,
;|***                               HWND hwndSetFocus);
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL  APIENTRY WinFocusChange(HWND hwndDesktop,
;|***                                     HWND hwndSetFocus,
;|***                                     ULONG flFocusChange);
;|*** 
;|***       BOOL  EXPENTRY WinLockupSystem(HAB hab);
;|*** 
;|***       BOOL  EXPENTRY WinUnlockSystem(HAB hab, PSZ pszPassword);
;|***    #else
;|***       BOOL  APIENTRY WinFocusChange(HWND hwndDesktop,
;|***                                     HWND hwndSetFocus,
;|***                                     USHORT fsFocusChange);
;|***    #endif
;|*** 
;|***    #define FC_NOSETFOCUS              0x0001
;|***    #define FC_NOBRINGTOTOP            FC_NOSETFOCUS
;|***    #define FC_NOLOSEFOCUS             0x0002
;|***    #define FC_NOBRINGTOPFIRSTWINDOW   FC_NOLOSEFOCUS
;|***    #define FC_NOSETACTIVE             0x0004
;|***    #define FC_NOLOSEACTIVE            0x0008
;|***    #define FC_NOSETSELECTION          0x0010
;|***    #define FC_NOLOSESELECTION         0x0020
;|*** 
;|***    #define QFC_NEXTINCHAIN            0x0001
;|***    #define QFC_ACTIVE                 0x0002
;|***    #define QFC_FRAME                  0x0003
;|***    #define QFC_SELECTACTIVE           0x0004
;|***    #define QFC_PARTOFCHAIN            0x0005
;|*** 
;|*** #endif  /* Keyboard and mouse input COMMON subsection */
;|*** 
;|*** /*
;|*** ** @86823; added WM_VRNDISABLED, WM_VRNENABLED,
;|*** **               WinSetVisibleRegionNotify, WinQueryVisibleRegion
;|*** */
;|***    #define WM_VRNDISABLED             0x007e
;|***    #define WM_VRNENABLED              0x007f
;|*** 
;|***    BOOL APIENTRY WinSetVisibleRegionNotify( HWND hwnd, BOOL fEnable);
;|*** 
;|***    ULONG APIENTRY WinQueryVisibleRegion( HWND hwnd, HRGN hrgn);
;|*** 
;|*** 
;|*** #ifdef INCL_WININPUT
;|***    #ifndef INCL_SAADEFS
;|***       BOOL  APIENTRY WinSetCapture(HWND hwndDesktop,
;|***                                    HWND hwnd);
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       HWND  APIENTRY WinQueryCapture(HWND hwndDesktop);
;|***    #else
;|***       HWND  APIENTRY WinQueryCapture(HWND hwndDesktop,
;|***                                      BOOL fLock);
;|***    #endif  /* INCL_32 */
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL  APIENTRY WinCheckInput(HAB hab);
;|***    #endif
;|*** 
;|***    /*** Mouse input messages ***********************************************/
;|***    #ifndef INCL_SAADEFS
;|***       #define WM_MOUSEFIRST           0x0070
;|***       #define WM_MOUSELAST            0x0079
;|***       #define WM_BUTTONCLICKFIRST     0x0071
;|***       #define WM_BUTTONCLICKLAST      0x0079
;|***    #endif /* !INCL_SAADEFS */
;|***    #define WM_MOUSEMOVE               0x0070
;|*** 
;|***    #define WM_BUTTON1DOWN             0x0071
;|*** 
;|***    #define WM_BUTTON1UP               0x0072
;|***    #define WM_BUTTON1DBLCLK           0x0073
;|***    #define WM_BUTTON2DOWN             0x0074
;|***    #define WM_BUTTON2UP               0x0075
;|***    #define WM_BUTTON2DBLCLK           0x0076
;|***    #ifndef INCL_SAADEFS
;|***       #define WM_BUTTON3DOWN          0x0077
;|***       #define WM_BUTTON3UP            0x0078
;|***       #define WM_BUTTON3DBLCLK        0x0079
;|*** 
;|***       #define WM_MOUSEMAP             0x007D
;|*** 
;|***       #define WM_EXTMOUSEFIRST        0x0410
;|***       #define WM_EXTMOUSELAST         0x0419
;|*** 
;|***       #define WM_CHORD                0x0410
;|***       #define WM_BUTTON1MOTIONSTART   0x0411
;|***       #define WM_BUTTON1MOTIONEND     0x0412
;|***       #define WM_BUTTON1CLICK         0x0413
;|***       #define WM_BUTTON2MOTIONSTART   0x0414
;|***       #define WM_BUTTON2MOTIONEND     0x0415
;|***       #define WM_BUTTON2CLICK         0x0416
;|***       #define WM_BUTTON3MOTIONSTART   0x0417
;|***       #define WM_BUTTON3MOTIONEND     0x0418
;|***       #define WM_BUTTON3CLICK         0x0419
;|*** 
;|***       /* Messages 0x041A - 0x041F are reserved */
;|*** 
;|***       #define WM_MOUSETRANSLATEFIRST  0x0420
;|***       #define WM_MOUSETRANSLATELAST   0x0428
;|*** 
;|***       #define WM_BEGINDRAG            0x0420
;|***       #define WM_ENDDRAG              0x0421
;|***       #define WM_SINGLESELECT         0x0422
;|***       #define WM_OPEN                 0x0423
;|***       #define WM_CONTEXTMENU          0x0424
;|***       #define WM_CONTEXTHELP          0x0425
;|***       #define WM_TEXTEDIT             0x0426
;|***       #define WM_BEGINSELECT          0x0427
;|***       #define WM_ENDSELECT            0x0428
;|***       #define WM_PICKUP               0x0429
;|*** 
;|***       #define WM_PENFIRST             0x04C0
;|***       #define WM_PENLAST              0x04FF
;|***       #define WM_MMPMFIRST            0x0500
;|***       #define WM_MMPMLAST             0x05FF
;|*** 
;|***       /* Messages 0x0BD0 - 0x0BFF are reserved */
;|***       /* for bidirectional language support.   */
;|*** 
;|***       #define  WM_BIDI_FIRST           0x0BD0
;|***       #define  WM_BIDI_LAST            0x0BFF
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       HWND  APIENTRY WinQueryFocus(HWND hwndDesktop);
;|***    #else
;|***       HWND  APIENTRY WinQueryFocus(HWND hwndDesktop,
;|***                                    BOOL fLock);
;|***    #endif
;|*** 
;|*** 
;|***    /*** Key/Character input messages ***************************************/
;|***    #define WM_CHAR                    0x007a
;|***    #define WM_VIOCHAR                 0x007b
;|*** 
;|***    /* WM_CHAR fs field bits */
;|***    #define KC_NONE                    0x0000     /* Reserved */
;|***    #define KC_CHAR                    0x0001
;|***    #define KC_VIRTUALKEY              0x0002
;|***    #define KC_SCANCODE                0x0004
;|*** 
;|***    #define KC_SHIFT                   0x0008
;|***    #define KC_CTRL                    0x0010
;|***    #define KC_ALT                     0x0020
;|***    #define KC_KEYUP                   0x0040
;|***    #define KC_PREVDOWN                0x0080
;|***    #define KC_LONEKEY                 0x0100
;|***    #define KC_DEADKEY                 0x0200
;|***    #define KC_COMPOSITE               0x0400
;|***    #define KC_INVALIDCOMP             0x0800
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define KC_TOGGLE               0x1000
;|***       #define KC_INVALIDCHAR          0x2000
;|***       #define KC_DBCSRSRVD1           0x4000
;|***       #define KC_DBCSRSRVD2           0x8000
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #pragma pack(1) /* force structure alignment packing */
;|*** 
;|***    /*
;|***    * The following structure and macro are used to access the
;|***    * WM_MOUSEMOVE, and WM_BUTTON message parameters
;|***    */
;|***    #ifdef INCL_32
;|***       typedef struct _MOUSEMSG {  /* mousemsg */
;|***          SHORT   x;             /* mp1      */
;|***          SHORT   y;
;|***          USHORT  codeHitTest;   /* mp2      */
;|***          USHORT  fsInp;         /* input flags */
;|***       } MSEMSG;
;|***       typedef MSEMSG FAR *PMSEMSG;
;|*** 
;|***       #define MOUSEMSG(pmsg) \
;|***       ((PMSEMSG)((PBYTE)pmsg + sizeof(MPARAM) ))
;|*** 
;|***       typedef struct _CHARMSG {  /* charmsg */
;|***          USHORT  fs;           /* mp1     */
;|***          UCHAR   cRepeat;
;|***          UCHAR   scancode;
;|***          USHORT  chr;          /* mp2     */
;|***          USHORT  vkey;
;|***       } CHRMSG;
;|***       typedef CHRMSG FAR *PCHRMSG;
;|*** 
;|***       #define CHARMSG(pmsg) \
;|***       ((PCHRMSG)((PBYTE)pmsg + sizeof(MPARAM) ))
;|***    #else
;|***       typedef struct _MOUSEMSG {  /* mousemsg */
;|***          USHORT  codeHitTest;   /* mp2      */
;|***          USHORT  fsInp;         /* input flags */
;|***          SHORT   x;             /* mp1      */
;|***          SHORT   y;
;|***       } MSEMSG;
;|***       typedef MSEMSG FAR *PMSEMSG;
;|*** 
;|***       #define MOUSEMSG(pmsg) \
;|***       ((PMSEMSG)((PBYTE)pmsg - sizeof(MPARAM) * 2))
;|*** 
;|***       typedef struct _CHARMSG {  /* charmsg */
;|***          USHORT  chr;          /* mp2     */
;|***          USHORT  vkey;
;|***          USHORT  fs;           /* mp1     */
;|***          UCHAR   cRepeat;
;|***          UCHAR   scancode;
;|***       } CHRMSG;
;|***       typedef CHRMSG FAR *PCHRMSG;
;|*** 
;|***       #define CHARMSG(pmsg) \
;|***       ((PCHRMSG)((PBYTE)pmsg - sizeof(MPARAM) * 2))
;|***    #endif
;|*** 
;|***    #pragma pack()  /* restore packing to default */
;|*** 
;|***    #define INP_NONE                   0x0000
;|***    #define INP_KBD                    0x0001
;|***    #define INP_MULT                   0x0002
;|***    #define INP_RES2                   0x0004
;|***    #define INP_SHIFT                  0x0008
;|***    #define INP_CTRL                   0x0010
;|***    #define INP_ALT                    0x0020
;|***    #define INP_RES3                   0x0040
;|***    #define INP_RES4                   0x0080
;|***    #define INP_IGNORE                 0xFFFF
;|*** 
;|***    /*** Virtual key values *************************************************/
;|***    #define VK_BUTTON1                 0x01
;|***    #define VK_BUTTON2                 0x02
;|***    #define VK_BUTTON3                 0x03
;|***    #define VK_BREAK                   0x04
;|***    #define VK_BACKSPACE               0x05
;|***    #define VK_TAB                     0x06
;|***    #define VK_BACKTAB                 0x07
;|***    #define VK_NEWLINE                 0x08
;|***    #define VK_SHIFT                   0x09
;|***    #define VK_CTRL                    0x0A
;|***    #define VK_ALT                     0x0B
;|***    #define VK_ALTGRAF                 0x0C
;|***    #define VK_PAUSE                   0x0D
;|***    #define VK_CAPSLOCK                0x0E
;|***    #define VK_ESC                     0x0F
;|***    #define VK_SPACE                   0x10
;|***    #define VK_PAGEUP                  0x11
;|***    #define VK_PAGEDOWN                0x12
;|***    #define VK_END                     0x13
;|***    #define VK_HOME                    0x14
;|***    #define VK_LEFT                    0x15
;|***    #define VK_UP                      0x16
;|***    #define VK_RIGHT                   0x17
;|***    #define VK_DOWN                    0x18
;|***    #define VK_PRINTSCRN               0x19
;|***    #define VK_INSERT                  0x1A
;|***    #define VK_DELETE                  0x1B
;|***    #define VK_SCRLLOCK                0x1C
;|***    #define VK_NUMLOCK                 0x1D
;|***    #define VK_ENTER                   0x1E
;|***    #define VK_SYSRQ                   0x1F
;|***    #define VK_F1                      0x20
;|***    #define VK_F2                      0x21
;|***    #define VK_F3                      0x22
;|***    #define VK_F4                      0x23
;|***    #define VK_F5                      0x24
;|***    #define VK_F6                      0x25
;|***    #define VK_F7                      0x26
;|***    #define VK_F8                      0x27
;|***    #define VK_F9                      0x28
;|***    #define VK_F10                     0x29
;|***    #define VK_F11                     0x2A
;|***    #define VK_F12                     0x2B
;|***    #define VK_F13                     0x2C
;|***    #define VK_F14                     0x2D
;|***    #define VK_F15                     0x2E
;|***    #define VK_F16                     0x2F
;|***    #define VK_F17                     0x30
;|***    #define VK_F18                     0x31
;|***    #define VK_F19                     0x32
;|***    #define VK_F20                     0x33
;|***    #define VK_F21                     0x34
;|***    #define VK_F22                     0x35
;|***    #define VK_F23                     0x36
;|***    #define VK_F24                     0x37
;|***    #define VK_ENDDRAG                 0x38
;|***    #define VK_CLEAR                   0x39
;|***    #define VK_EREOF                   0x3A
;|***    #define VK_PA1                     0x3B
;|***    #define VK_ATTN                    0x3C
;|***    #define VK_CRSEL                   0x3D
;|***    #define VK_EXSEL                   0x3E
;|***    #define VK_COPY                    0x3F
;|***    #define VK_BLK1                    0x40
;|***    #define VK_BLK2                    0x41
;|*** 
;|*** 
;|***    #define VK_MENU                    VK_F10
;|***    #ifdef INCL_NLS
;|***       #define VK_DBCSFIRST            0x0080
;|***       #define VK_DBCSLAST             0x00ff
;|*** 
;|***       /* VK_ vluaes 0xE0 - 0xFF are reserved   */
;|***       /* for bidirectional language support.   */
;|*** 
;|***       #define VK_BIDI_FIRST           0xE0
;|***       #define VK_BIDI_LAST            0xFF
;|*** 
;|***    #endif /* INCL_NLS */
;|*** 
;|***    #define VK_USERFIRST               0x0100
;|***    #define VK_USERLAST                0x01ff
;|*** 
;|***    #ifndef INCL_SAADEFS
;|*** 
;|***       #ifdef INCL_32
;|***          LONG APIENTRY WinGetKeyState(HWND hwndDesktop,
;|***                                       LONG vkey);
;|***          LONG APIENTRY WinGetPhysKeyState(HWND hwndDesktop,
;|***                                           LONG sc);
;|***       #else
;|***          SHORT APIENTRY WinGetKeyState(HWND hwndDesktop,
;|***                                        SHORT vkey);
;|***          SHORT APIENTRY WinGetPhysKeyState(HWND hwndDesktop,
;|***                                            SHORT sc);
;|***       #endif
;|***       BOOL  APIENTRY WinEnablePhysInput(HWND hwndDesktop,
;|***                                         BOOL fEnable);
;|***       BOOL  APIENTRY WinIsPhysInputEnabled(HWND hwndDesktop);
;|***       BOOL  APIENTRY WinSetKeyboardStateTable(HWND hwndDesktop,
;|***                                               PBYTE pKeyStateTable,
;|***                                               BOOL fSet);
;|*** 
;|*** 
;|***       /* Journal Notification messages  */
;|***       #define WM_JOURNALNOTIFY           0x007c
;|*** 
;|***       /*** Define the valid commands (lParm1) for journal notify message */
;|***       #define JRN_QUEUESTATUS            0x00000001L
;|***       #define JRN_PHYSKEYSTATE           0x00000002L
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** #endif /* INCL_WININPUT */
;|*** 
;|***    typedef LHANDLE HPOINTER;   /* hptr */
;|*** 
;|*** 
;|*** /**** Dialog Manager */
;|*** 
;|*** #if (defined(INCL_WINDIALOGS) || !defined(INCL_NOCOMMON))
;|***    /**** Dialog Manager COMMON subsection */
;|*** 
;|***    BOOL    APIENTRY WinGetDlgMsg(HWND hwndDlg,
;|***                                  PQMSG pqmsg);
;|*** 
;|***    #ifdef INCL_32
;|***       HWND    APIENTRY WinLoadDlg(HWND hwndParent,
;|***                                   HWND hwndOwner,
;|***                                   PFNWP pfnDlgProc,
;|***                                   HMODULE hmod,
;|***                                   ULONG idDlg,
;|***                                   PVOID pCreateParams);
;|***       ULONG  APIENTRY WinDlgBox(HWND hwndParent,
;|***                                 HWND hwndOwner,
;|***                                 PFNWP pfnDlgProc,
;|***                                 HMODULE hmod,
;|***                                 ULONG idDlg,
;|***                                 PVOID pCreateParams);
;|*** 
;|***       BOOL    APIENTRY WinDismissDlg(HWND hwndDlg,
;|***                                      ULONG usResult);
;|*** 
;|***       BOOL    APIENTRY WinQueryDlgItemShort(HWND hwndDlg,
;|***                                             ULONG idItem,
;|***                                             PSHORT pResult,
;|***                                             BOOL fSigned);
;|***       BOOL    APIENTRY WinSetDlgItemShort(HWND hwndDlg,
;|***                                           ULONG idItem,
;|***                                           USHORT usValue,
;|***                                           BOOL fSigned);
;|***       BOOL    APIENTRY WinSetDlgItemText(HWND hwndDlg,
;|***                                          ULONG idItem,
;|***                                          PSZ pszText);
;|***       ULONG  APIENTRY WinQueryDlgItemText(HWND hwndDlg,
;|***                                           ULONG idItem,
;|***                                           LONG cchBufferMax,
;|***                                           PSZ pchBuffer);
;|***       LONG   APIENTRY WinQueryDlgItemTextLength(HWND hwndDlg,
;|***                                                 ULONG idItem);
;|*** 
;|***       MRESULT APIENTRY WinDefDlgProc(HWND hwndDlg,
;|***                                      ULONG msg,
;|***                                      MPARAM mp1,
;|***                                      MPARAM mp2);
;|***    #else
;|***       HWND    APIENTRY WinLoadDlg(HWND hwndParent,
;|***                                   HWND hwndOwner,
;|***                                   PFNWP pfnDlgProc,
;|***                                   HMODULE hmod,
;|***                                   USHORT idDlg,
;|***                                   PVOID pCreateParams);
;|***       USHORT  APIENTRY WinDlgBox(HWND hwndParent,
;|***                                  HWND hwndOwner,
;|***                                  PFNWP pfnDlgProc,
;|***                                  HMODULE hmod,
;|***                                  USHORT idDlg,
;|***                                  PVOID pCreateParams);
;|*** 
;|***       BOOL    APIENTRY WinDismissDlg(HWND hwndDlg,
;|***                                      USHORT usResult);
;|*** 
;|***       BOOL    APIENTRY WinQueryDlgItemShort(HWND hwndDlg,
;|***                                             USHORT idItem,
;|***                                             PSHORT pResult,
;|***                                             BOOL fSigned);
;|***       BOOL    APIENTRY WinSetDlgItemShort(HWND hwndDlg,
;|***                                           USHORT idItem,
;|***                                           USHORT usValue,
;|***                                           BOOL fSigned);
;|***       BOOL    APIENTRY WinSetDlgItemText(HWND hwndDlg,
;|***                                          USHORT idItem,
;|***                                          PSZ pszText);
;|***       USHORT  APIENTRY WinQueryDlgItemText(HWND hwndDlg,
;|***                                            USHORT idItem,
;|***                                            SHORT cchBufferMax,
;|***                                            PSZ pchBuffer);
;|***       SHORT   APIENTRY WinQueryDlgItemTextLength(HWND hwndDlg,
;|***                                                  USHORT idItem);
;|*** 
;|***       MRESULT APIENTRY WinDefDlgProc(HWND hwndDlg,
;|***                                      USHORT msg,
;|***                                      MPARAM mp1,
;|***                                      MPARAM mp2);
;|***    #endif
;|*** 
;|***    /* Special item IDs */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define DID_OK      1
;|***       #define DID_CANCEL  2
;|***       #define DID_ERROR   0xffff
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL APIENTRY WinAlarm(HWND hwndDesktop,
;|***                              ULONG rgfType);
;|***    #else
;|***       BOOL APIENTRY WinAlarm(HWND hwndDesktop,
;|***                              USHORT rgfType);
;|***    #endif
;|*** 
;|***    /* WinAlarm Codes */
;|*** 
;|***    #define WA_WARNING                 0
;|***    #define WA_NOTE                    1
;|***    #define WA_ERROR                   2
;|***    #define WA_CWINALARMS             13     /* count of valid alarms     53304*/
;|*** 
;|***    #ifdef INCL_32
;|*** 
;|***       ULONG APIENTRY WinMessageBox(HWND hwndParent,
;|***                                    HWND hwndOwner,
;|***                                    PSZ pszText,
;|***                                    PSZ pszCaption,
;|***                                    ULONG idWindow,
;|***                                    ULONG flStyle);
;|*** 
;|***    #else /* not INCL_32 */
;|*** 
;|***       USHORT APIENTRY WinMessageBox(HWND hwndParent,
;|***                                     HWND hwndOwner,
;|***                                     PSZ pszText,
;|***                                     PSZ pszCaption,
;|***                                     USHORT idWindow,
;|***                                     USHORT fsStyle);
;|*** 
;|***    #endif /* INCL_32 */
;|*** 
;|*** 
;|*** 
;|***    #define MAX_MBDTEXT               70
;|*** 
;|*** /* NOINC */
;|***    #pragma pack(4)
;|*** 
;|***    typedef struct _MB2D
;|***    {
;|***        CHAR   achText[MAX_MBDTEXT + 1]; /* Text of the button. eg. "~Cancel"    */
;|***        ULONG  idButton;                  /* Button ID returned when user chooses */
;|***        /*  button                              */
;|***        LONG   flStyle;                   /* Button style or'ed with internal     */
;|***        /*  styles                              */
;|***    } MB2D;
;|*** 
;|***    typedef MB2D * PMB2D;
;|*** 
;|***    typedef struct _MB2INFO
;|***    {
;|***       ULONG    cb;                  /* Size of fixed part of structure          */
;|***       HPOINTER hIcon;               /* Icon handle                              */
;|***       ULONG    cButtons;            /* Number of buttons                        */
;|***       ULONG    flStyle;             /* Icon style flags (MB_ICONQUESTION, etc...)*/
;|***       HWND     hwndNotify;          /* Reserved                                 */
;|***       MB2D     mb2d[1];             /* Array of button definitions              */
;|***    } MB2INFO;
;|*** 
;|***    typedef MB2INFO * PMB2INFO;
;|*** 
;|***    #pragma pack()
;|*** 
;|***    /************************************************************************/
;|***    /* WinMessageBox2                                                       */
;|***    /*                                                                      */
;|***    /* Parameters: HWND   hwndParent   - handle of the parent window.       */
;|***    /*             HWND   hwndOwner    - handle of the owner window.        */
;|***    /*             PSZ    pszText      - message text.                      */
;|***    /*             PSZ    pszCaption   - title of the message box.          */
;|***    /*             ULONG  idWindow     - Message box id                     */
;|***    /*             PMB2INFO pmb2info   - pointer to button/icon info        */
;|***    /************************************************************************/
;|***    ULONG  EXPENTRY  WinMessageBox2(HWND     hwndParent,
;|***                                    HWND     hwndOwner,
;|***                                    PSZ      pszText,
;|***                                    PSZ      pszCaption,
;|***                                    ULONG    idWindow,
;|***                                    PMB2INFO pmb2info);
;|*** 
;|*** /* INC */
;|*** 
;|***    /* Message box types */
;|*** 
;|***    #define MB_OK                      0x0000
;|***    #define MB_OKCANCEL                0x0001
;|***    #define MB_RETRYCANCEL             0x0002
;|***    #define MB_ABORTRETRYIGNORE        0x0003
;|***    #define MB_YESNO                   0x0004
;|***    #define MB_YESNOCANCEL             0x0005
;|***    #define MB_CANCEL                  0x0006
;|***    #define MB_ENTER                   0x0007
;|***    #define MB_ENTERCANCEL             0x0008
;|*** 
;|***    #define MB_NOICON                  0x0000
;|***    #define MB_CUANOTIFICATION         0x0000
;|***    #define MB_ICONQUESTION            0x0010
;|***    #define MB_ICONEXCLAMATION         0x0020
;|***    #define MB_CUAWARNING              0x0020
;|***    #define MB_ICONASTERISK            0x0030
;|***    #define MB_ICONHAND                0x0040
;|***    #define MB_CUACRITICAL             0x0040
;|***    #define MB_QUERY                   MB_ICONQUESTION
;|***    #define MB_WARNING                 MB_CUAWARNING
;|***    #define MB_INFORMATION             MB_ICONASTERISK
;|***    #define MB_CRITICAL                MB_CUACRITICAL
;|***    #define MB_ERROR                   MB_CRITICAL
;|***    #define MB_CUSTOMICON              0x0080
;|*** 
;|***    #define MB_DEFBUTTON1              0x0000
;|***    #define MB_DEFBUTTON2              0x0100
;|***    #define MB_DEFBUTTON3              0x0200
;|*** 
;|***    #define MB_APPLMODAL               0x0000
;|***    #define MB_SYSTEMMODAL             0x1000
;|***    #define MB_HELP                    0x2000
;|***    #define MB_MOVEABLE                0x4000
;|***    #define MB_NONMODAL                0x8000
;|*** 
;|*** 
;|***    /* Message box return codes */
;|*** 
;|***    #define MBID_OK                    1
;|***    #define MBID_CANCEL                2
;|***    #define MBID_ABORT                 3
;|***    #define MBID_RETRY                 4
;|***    #define MBID_IGNORE                5
;|***    #define MBID_YES                   6
;|***    #define MBID_NO                    7
;|***    #define MBID_HELP                  8
;|***    #define MBID_ENTER                 9
;|***    #define MBID_ERROR                 0xffff
;|*** 
;|*** 
;|***    /* Useful macros */
;|*** 
;|***    /***************************************************************************
;|***    * ULONG/USHORT WinCheckButton(HWND hwndDlg, USHORT id, USHORT checkState)
;|***    *    sets the check state of button #id.
;|***    *    returns the previous check state.
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinCheckButton(hwndDlg, id, usCheckState) \
;|***       ((ULONG)WinSendDlgItemMsg(hwndDlg, id, BM_SETCHECK, \
;|***       MPFROMSHORT(usCheckState), (MPARAM)NULL))
;|***    #else
;|***       #define WinCheckButton(hwndDlg, id, usCheckState) \
;|***       ((USHORT)WinSendDlgItemMsg(hwndDlg, id, BM_SETCHECK, \
;|***       MPFROMSHORT(usCheckState), (MPARAM)NULL))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * ULONG/USHORT WinQueryButtonCheckstate(HWND hwndDlg, USHORT id)
;|***    *    returns the check state of buttin #id.
;|***    *
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinQueryButtonCheckstate(hwndDlg, id) \
;|***       ((ULONG)WinSendDlgItemMsg(hwndDlg, id, BM_QUERYCHECK, \
;|***       (MPARAM)NULL, (MPARAM)NULL))
;|***    #else
;|***       #define WinQueryButtonCheckstate(hwndDlg, id) \
;|***       ((USHORT)WinSendDlgItemMsg(hwndDlg, id, BM_QUERYCHECK, \
;|***       (MPARAM)NULL, (MPARAM)NULL))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinEnableControl(HWND hwndDlg, USHORT id, BOOL fEnable)
;|***    *    sets the enable state of button #id.
;|***    *    returns fSuccess.
;|***    ***************************************************************************/
;|***    #define WinEnableControl(hwndDlg, id, fEnable) \
;|***    WinEnableWindow(WinWindowFromID(hwndDlg, id), fEnable)
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinIsControlEnabled(HWND hwndDlg, ULONG id)
;|***    *    returns the enable state of control #id.
;|***    *
;|***    ***************************************************************************/
;|***    #define WinIsControlEnabled(hwndDlg, id) \
;|***    ((BOOL)WinIsWindowEnabled(WinWindowFromID(hwndDlg, id)))
;|*** 
;|*** #endif /* Dialog Manager COMMON subsection */
;|*** 
;|*** 
;|*** #ifdef INCL_WINDIALOGS
;|*** 
;|***    /* Dialog codes: returned by WM_QUERYDLGCODE msg     */
;|*** 
;|***    #define DLGC_ENTRYFIELD    0x0001  /* Entry field item understands EM_SETSEL) */
;|***    #define DLGC_BUTTON        0x0002  /* Button item                             */
;|***    #define DLGC_RADIOBUTTON   0x0004  /* Radio button                            */
;|***    #define DLGC_STATIC        0x0008  /* Static item                             */
;|***    #define DLGC_DEFAULT       0x0010  /* Default push button                     */
;|***    #define DLGC_PUSHBUTTON    0x0020  /* Normal (Non-default) push button        */
;|***    #define DLGC_CHECKBOX      0x0040  /* Check box button control                */
;|***    #define DLGC_SCROLLBAR     0x0080  /* Scroll bar                              */
;|***    #define DLGC_MENU          0x0100  /* Menu                                    */
;|***    #define DLGC_TABONCLICK    0x0200
;|***    #define DLGC_MLE           0x0400  /* Multiple Line Entry                     */
;|*** 
;|*** 
;|***    #ifdef INCL_32
;|***       ULONG  APIENTRY WinProcessDlg(HWND hwndDlg);
;|***       MRESULT APIENTRY WinSendDlgItemMsg(HWND hwndDlg,
;|***                                          ULONG idItem,
;|***                                          ULONG msg,
;|***                                          MPARAM mp1,
;|***                                          MPARAM mp2);
;|***       BOOL    APIENTRY WinMapDlgPoints(HWND hwndDlg,
;|***                                        PPOINTL prgwptl,
;|***                                        ULONG cwpt,
;|***                                        BOOL fCalcWindowCoords);
;|***       HWND    APIENTRY WinEnumDlgItem(HWND hwndDlg,
;|***                                       HWND hwnd,
;|***                                       ULONG code);
;|***       LONG   APIENTRY WinSubstituteStrings(HWND hwnd,
;|***                                            PSZ pszSrc,
;|***                                            LONG cchDstMax,
;|***                                            PSZ pszDst);
;|***    #else
;|***       USHORT  APIENTRY WinProcessDlg(HWND hwndDlg);
;|***       MRESULT APIENTRY WinSendDlgItemMsg(HWND hwndDlg,
;|***                                          USHORT idItem,
;|***                                          USHORT msg,
;|***                                          MPARAM mp1,
;|***                                          MPARAM mp2);
;|***       BOOL    APIENTRY WinMapDlgPoints(HWND hwndDlg,
;|***                                        PPOINTL prgwptl,
;|***                                        USHORT cwpt,
;|***                                        BOOL fCalcWindowCoords);
;|***       HWND    APIENTRY WinEnumDlgItem(HWND hwndDlg,
;|***                                       HWND hwnd,
;|***                                       USHORT code,
;|***                                       BOOL fLock);
;|***       SHORT   APIENTRY WinSubstituteStrings(HWND hwnd,
;|***                                             PSZ pszSrc,
;|***                                             SHORT cchDstMax,
;|***                                             PSZ pszDst);
;|***    #endif  /* INCL_32 */
;|*** 
;|*** 
;|***    /* WinEnumDlgItem() constants */
;|*** 
;|***    #define EDI_FIRSTTABITEM           0
;|***    #define EDI_LASTTABITEM            1
;|***    #define EDI_NEXTTABITEM            2
;|***    #define EDI_PREVTABITEM            3
;|***    #define EDI_FIRSTGROUPITEM         4
;|***    #define EDI_LASTGROUPITEM          5
;|***    #define EDI_NEXTGROUPITEM          6
;|***    #define EDI_PREVGROUPITEM          7
;|*** 
;|***    /*** Dialog template definitions */
;|*** 
;|***    /*** Variable-sized dialog template items: ******************************/
;|*** 
;|***    #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***    /*************************************************************************
;|***    *
;|***    *  We pack the structures _DLGTITEM and _DLGTEMPLATE so that the
;|***    *  structures are identical in the 32-bit and 16-bit worlds. We have
;|***    *  to do this because is has been documented that one can pass a
;|***    *  pointer to 'the binary resource format' when calling WinCreateDlg.
;|***    *
;|***    *************************************************************************/
;|*** 
;|***    /* Binary resources may be bound into application executables or */
;|***    /* passed as a parameter when creating a window or dialog        */
;|***    /* Currently they must be the same for both 16-bit and 32-bit    */
;|***    /* so we pack the structures.                                    */
;|***    typedef struct _DLGTITEM {  /* dlgti */
;|***       USHORT  fsItemStatus;
;|***       USHORT  cChildren;
;|***       USHORT  cchClassName;
;|***       USHORT  offClassName;
;|***       USHORT  cchText;
;|***       USHORT  offText;
;|***       ULONG   flStyle;
;|***       SHORT   x;
;|***       SHORT   y;
;|***       SHORT   cx;
;|***       SHORT   cy;
;|***       USHORT  id;
;|***       USHORT  offPresParams;
;|***       USHORT  offCtlData;
;|***    } DLGTITEM;
;|***    typedef DLGTITEM FAR *PDLGTITEM;
;|*** 
;|***    /*** Dialog Template structure ******************************************/
;|*** 
;|***    /* Binary resources may be bound into application executables or */
;|***    /* passed as a parameter when creating a window or dialog        */
;|***    /* Currently they must be the same for both 16-bit and 32-bit    */
;|***    /* so we pack the structures.                                    */
;|***    typedef struct _DLGTEMPLATE {  /* dlgt */
;|***       USHORT   cbTemplate;
;|***       USHORT   type;
;|***       USHORT   codepage;
;|***       USHORT   offadlgti;
;|***       USHORT   fsTemplateStatus;
;|***       USHORT   iItemFocus;
;|***       USHORT   coffPresParams;
;|***       DLGTITEM adlgti[1];
;|***    } DLGTEMPLATE;
;|***    typedef DLGTEMPLATE FAR *PDLGTEMPLATE;
;|*** 
;|***    #pragma pack()  /* restore packing to default */
;|*** 
;|***    HWND   APIENTRY WinCreateDlg(HWND hwndParent,
;|***                                 HWND hwndOwner,
;|***                                 PFNWP pfnDlgProc,
;|***                                 PDLGTEMPLATE pdlgt,
;|***                                 PVOID pCreateParams);
;|*** 
;|*** 
;|*** #endif /* INCL_WINDIALOGS */
;|*** 
;|*** 
;|*** #ifdef INCL_WINSTATICS
;|*** 
;|***    /*** Static Control Manager */
;|*** 
;|***    /* Static control styles:
;|***    *
;|***    * NOTE: the top 9 bits of the LOWORD of the window flStyle are used for
;|***    * DT_* flags.  The lower 7 bits are for SS_* styles.  This gives us up
;|***    * to 128 distinct static control types (we currently use 11 of them).
;|***    */
;|***    #define SS_TEXT                    0x0001L
;|***    #define SS_GROUPBOX                0x0002L
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define SS_ICON                    0x0003L
;|***       #define SS_BITMAP                  0x0004L
;|***    #endif /* !INCL_SAADEFS */
;|***    #define SS_FGNDRECT                0x0005L
;|***    #ifndef INCL_SAADEFS
;|***       #define SS_HALFTONERECT            0x0006L
;|***    #endif /* !INCL_SAADEFS */
;|***    #define SS_BKGNDRECT               0x0007L
;|***    #define SS_FGNDFRAME               0x0008L
;|***    #ifndef INCL_SAADEFS
;|***       #define SS_HALFTONEFRAME           0x0009L
;|***    #endif /* !INCL_SAADEFS */
;|***    #define SS_BKGNDFRAME              0x000aL
;|***    #define SS_SYSICON                 0x000bL
;|***    #define SS_AUTOSIZE         0x0040L
;|*** 
;|*** 
;|***    /* Static control messages */
;|*** 
;|***    #define SM_SETHANDLE               0x0100
;|***    #define SM_QUERYHANDLE             0x0101
;|*** 
;|***    /* Message Box 2 notification messages */
;|***    #define WM_MSGBOXINIT              0x010E
;|***    #define WM_MSGBOXDISMISS           0x010F
;|*** #endif /* INCL_WINSTATICS */
;|*** 
;|*** 
;|*** #ifdef INCL_WINBUTTONS
;|***    /**** Button Controls Subsection */
;|*** 
;|***    /* Button control styles */
;|*** 
;|***    #define BS_PUSHBUTTON              0L
;|***    #define BS_CHECKBOX                1L
;|***    #define BS_AUTOCHECKBOX            2L
;|***    #define BS_RADIOBUTTON             3L
;|***    #define BS_AUTORADIOBUTTON         4L
;|***    #define BS_3STATE                  5L
;|***    #define BS_AUTO3STATE              6L
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define BS_USERBUTTON              7L
;|***    #endif /* !INCL_SAADEFS */
;|***    #define BS_PRIMARYSTYLES       0x000fL
;|*** 
;|***    #define BS_TEXT                 0x0010
;|***    #define BS_MINIICON             0x0020
;|***    #define BS_BITMAP           0x0040L
;|***    #define BS_ICON             0x0080L
;|***    #define BS_HELP                    0x0100L
;|***    #define BS_SYSCOMMAND              0x0200L
;|***    #define BS_DEFAULT                 0x0400L
;|***    #define BS_NOPOINTERFOCUS          0x0800L
;|***    #define BS_NOBORDER                0x1000L
;|***    #define BS_NOCURSORSELECT          0x2000L
;|***    #define BS_AUTOSIZE             0x4000L
;|*** 
;|*** 
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***       /* Binary resources may be bound into application executables or */
;|***       /* passed as a parameter when creating a window or dialog        */
;|***       /* Currently they must be the same for both 16-bit and 32-bit    */
;|***       /* so we pack the structures.                                    */
;|***       typedef struct _BTNCDATA {  /* btncd */
;|***          USHORT  cb;
;|***          USHORT  fsCheckState;
;|***          USHORT  fsHiliteState;
;|***          LHANDLE hImage;
;|***       } BTNCDATA;
;|***       typedef BTNCDATA FAR *PBTNCDATA;
;|*** 
;|***       #pragma pack()  /* restore packing to default */
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    /*** User button structure (passed in WM_CONTROL msg) *******************/
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #ifdef INCL_32
;|***          typedef struct _USERBUTTON {  /* ubtn */
;|***             HWND    hwnd;
;|***             HPS     hps;
;|***             ULONG   fsState;
;|***             ULONG   fsStateOld;
;|***          } USERBUTTON;
;|***       #else
;|***          typedef struct _USERBUTTON {  /* ubtn */
;|***             HWND    hwnd;
;|***             HPS     hps;
;|***             USHORT  fsState;
;|***             USHORT  fsStateOld;
;|***          } USERBUTTON;
;|***       #endif
;|***       typedef USERBUTTON FAR *PUSERBUTTON;
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    /* Button control messages */
;|*** 
;|***    #define BM_CLICK                   0x0120
;|***    #define BM_QUERYCHECKINDEX         0x0121
;|***    #define BM_QUERYHILITE             0x0122
;|***    #define BM_SETHILITE               0x0123
;|***    #define BM_QUERYCHECK              0x0124
;|***    #define BM_SETCHECK                0x0125
;|***    #define BM_SETDEFAULT              0x0126
;|*** 
;|***    /* Button notification codes */
;|*** 
;|***    #define BN_CLICKED                 1
;|***    #define BN_DBLCLICKED              2
;|***    #define BN_PAINT                   3
;|*** 
;|***    /* BN_PAINT button draw state codes (must be in high byte) */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define BDS_HILITED                0x0100
;|***       #define BDS_DISABLED               0x0200
;|***       #define BDS_DEFAULT                0x0400
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINBUTTONS */
;|*** 
;|*** 
;|*** #ifdef INCL_WINENTRYFIELDS
;|***    /**** Entryfield controls Subsection */
;|*** 
;|***    /* Entry field  styles */
;|*** 
;|***    #define ES_LEFT                    0x00000000L
;|***    #define ES_CENTER                  0x00000001L
;|***    #define ES_RIGHT                   0x00000002L
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define ES_AUTOSCROLL              0x00000004L
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define ES_MARGIN                  0x00000008L
;|***    #define ES_AUTOTAB                 0x00000010L
;|***    #define ES_READONLY                0x00000020L
;|***    #define ES_COMMAND                 0x00000040L
;|***    #define ES_UNREADABLE              0x00000080L
;|***    #define ES_AUTOSIZE                0x00000200L
;|*** 
;|***    #ifdef INCL_NLS
;|***       #define ES_ANY                     0x00000000L
;|***       #define ES_SBCS                    0x00001000L
;|***       #define ES_DBCS                    0x00002000L
;|***       #define ES_MIXED                   0x00003000L
;|***    #endif /* INCL_NLS */
;|*** 
;|*** 
;|***    /*
;|***    * combo box styles
;|***    */
;|***    #define CBS_SIMPLE                 0x0001L
;|***    #define CBS_DROPDOWN               0x0002L
;|***    #define CBS_DROPDOWNLIST           0x0004L
;|*** 
;|***    /*
;|***    * Use this bit for drop down combo boxes that do not want to
;|***    * receive a CBN_ENTER on a single click in their list boxes.
;|***    * This is for compatibility with releases prior to OS/2 2.0 which
;|***    * did not send this message
;|***    */
;|***    #define CBS_COMPATIBLE             0x0008L
;|*** 
;|***    /*
;|***    * The following edit and listbox styles may be used in conjunction
;|***    * with CBS_ styles
;|***    * ES_AUTOTAB ES_ANY ES_SBCS ES_DBCS ES_MIXED LS_HORZSCROLL
;|***    */
;|*** 
;|***    /*
;|***    * IDs of combobox entry field and listbox.
;|***    */
;|***    #define CBID_LIST                  0x029A
;|***    #define CBID_EDIT                  0x029B
;|*** 
;|***    #define CBM_SHOWLIST               0x0170
;|***    #define CBM_HILITE                 0x0171
;|***    #define CBM_ISLISTSHOWING          0x0172
;|*** 
;|***    #define CBN_EFCHANGE               1
;|***    #define CBN_EFSCROLL               2
;|***    #define CBN_MEMERROR               3
;|***    #define CBN_LBSELECT               4
;|***    #define CBN_LBSCROLL               5
;|***    #define CBN_SHOWLIST               6
;|***    #define CBN_ENTER                  7
;|*** 
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***       /* Binary resources may be bound into application executables or */
;|***       /* passed as a parameter when creating a window or dialog        */
;|***       /* Currently they must be the same for both 16-bit and 32-bit    */
;|***       /* so we pack the structures.                                    */
;|*** 
;|***       /*******************************************************************/
;|***       /* Combobox control data structure                                 */
;|***       /*******************************************************************/
;|***       typedef struct _COMBOCDATA          /* combocdata */
;|***       {
;|***          ULONG   cbSize;             /* Size of control block             */
;|***          ULONG   reserved;           /* reserved field                    */
;|***          PVOID   pHWXCtlData;        /* reserved for Pen CtlData (penpm.h)*/
;|***       } COMBOCDATA;
;|***       typedef COMBOCDATA *PCOMBOCDATA;
;|*** 
;|***       typedef struct _ENTRYFDATA {  /* efd */
;|***          USHORT  cb;
;|***          USHORT  cchEditLimit;
;|***          USHORT  ichMinSel;
;|***          USHORT  ichMaxSel;
;|***          PVOID   pHWXCtlData;    /* reserved for Pen CtlData (penpm.h)  */
;|***       } ENTRYFDATA;
;|***       typedef ENTRYFDATA FAR *PENTRYFDATA;
;|*** 
;|***       #pragma pack()  /* restore packing to default */
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    /* Entry Field  messages */
;|*** 
;|***    #define EM_QUERYCHANGED            0x0140
;|***    #define EM_QUERYSEL                0x0141
;|***    #define EM_SETSEL                  0x0142
;|***    #define EM_SETTEXTLIMIT            0x0143
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define EM_CUT                     0x0144
;|***       #define EM_COPY                    0x0145
;|***    #endif /* !INCL_SAADEFS */
;|***    #define EM_CLEAR                   0x0146
;|***    #ifndef INCL_SAADEFS
;|***       #define EM_PASTE                   0x0147
;|***    #endif /* !INCL_SAADEFS */
;|***    #define EM_QUERYFIRSTCHAR          0x0148
;|***    #define EM_SETFIRSTCHAR            0x0149
;|***    #ifndef INCL_SAADEFS
;|***       #define EM_QUERYREADONLY           0x014a
;|***       #define EM_SETREADONLY             0x014b
;|***       #define EM_SETINSERTMODE           0x014c
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    /* Entry Field notification messages */
;|*** 
;|***    #define EN_SETFOCUS                0x0001
;|***    #define EN_KILLFOCUS               0x0002
;|***    #define EN_CHANGE                  0x0004
;|***    #define EN_SCROLL                  0x0008
;|***    #ifndef INCL_SAADEFS
;|***       #define EN_MEMERROR                0x0010
;|***       #define EN_OVERFLOW                0x0020
;|***       #define EN_INSERTMODETOGGLE        0x0040
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINENTRYFIELDS */
;|*** 
;|*** 
;|*** /*  Multiple Line Entrys */
;|*** #ifdef INCL_WINMLE
;|***    #include <pmmle.h>
;|*** #endif /* !INCL_WINMLE */
;|*** #ifdef INCL_WINLISTBOXES
;|*** 
;|***    /**** Listboxes */
;|*** 
;|***    /* List box styles */
;|*** 
;|***    #define LS_MULTIPLESEL             0x00000001L
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define LS_OWNERDRAW               0x00000002L
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define LS_NOADJUSTPOS             0x00000004L
;|***    #define LS_HORZSCROLL              0x00000008L
;|*** 
;|***    #define LS_EXTENDEDSEL             0x00000010L
;|*** 
;|*** 
;|***    /* List box notification messages */
;|*** 
;|***    #define LN_SELECT                  1
;|***    #define LN_SETFOCUS                2
;|***    #define LN_KILLFOCUS               3
;|***    #define LN_SCROLL                  4
;|***    #define LN_ENTER                   5
;|*** 
;|***    /* List box messages */
;|*** 
;|***    #define LM_QUERYITEMCOUNT          0x0160
;|***    #define LM_INSERTITEM              0x0161
;|***    #define LM_SETTOPINDEX             0x0162
;|***    #define LM_DELETEITEM              0x0163
;|***    #define LM_SELECTITEM              0x0164
;|***    #define LM_QUERYSELECTION          0x0165
;|***    #define LM_SETITEMTEXT             0x0166
;|***    #define LM_QUERYITEMTEXTLENGTH     0x0167
;|***    #define LM_QUERYITEMTEXT           0x0168
;|*** 
;|***    #define LM_SETITEMHANDLE           0x0169
;|***    #define LM_QUERYITEMHANDLE         0x016a
;|***    #define LM_SEARCHSTRING            0x016b
;|***    #define LM_SETITEMHEIGHT           0x016c
;|***    #define LM_QUERYTOPINDEX           0x016d
;|***    #define LM_DELETEALL               0x016e
;|***    #define LM_INSERTMULTITEMS         0x016f
;|***    #define LM_SETITEMWIDTH            0x0660
;|*** 
;|*** 
;|***    /* List box constants */
;|*** 
;|***    #define LIT_CURSOR         (-4)
;|***    #define LIT_ERROR                  (-3)
;|***    #define LIT_MEMERROR               (-2)
;|***    #define LIT_NONE                   (-1)
;|***    #define LIT_FIRST                  (-1)
;|*** 
;|***    /* For LM_INSERTITEM msg */
;|*** 
;|***    #define LIT_END                    (-1)
;|***    #define LIT_SORTASCENDING          (-2)
;|***    #define LIT_SORTDESCENDING         (-3)
;|*** 
;|***    /* For LM_SEARCHSTRING msg */
;|*** 
;|***    #define LSS_SUBSTRING              0x0001
;|***    #define LSS_PREFIX                 0x0002
;|***    #define LSS_CASESENSITIVE          0x0004
;|*** 
;|***    /*******************************************************************/
;|***    /* Structure for use with LM_INSERTMULTITEMS                       */
;|***    /*******************************************************************/
;|*** 
;|***    typedef struct _LBOXINFO         /* lboxinfo */
;|***    {
;|***        LONG  lItemIndex;            /* Item index */
;|***        ULONG ulItemCount;           /* Item count */
;|***        ULONG reserved;              /* Reserved - must be zero */
;|***        ULONG reserved2;             /* Reserved - must be zero */
;|***    } LBOXINFO;
;|*** 
;|***    typedef LBOXINFO * PLBOXINFO;
;|*** 
;|***    /* Useful macros */
;|*** 
;|***    /***************************************************************************
;|***    * LONG/SHORT WinDeleteLboxItem(HWND hwndLbox, LONG/SHORT index)
;|***    *    deletes item index from the listbox.
;|***    *    returns the number of items left.
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinDeleteLboxItem(hwndLbox, index) \
;|***       ((LONG)WinSendMsg(hwndLbox, LM_DELETEITEM, MPFROMLONG(index), \
;|***       (MPARAM)NULL))
;|***    #else
;|***       #define WinDeleteLboxItem(hwndLbox, index) \
;|***       ((SHORT)WinSendMsg(hwndLbox, LM_DELETEITEM, MPFROMSHORT(index), \
;|***       (MPARAM)NULL))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * LONG/SHORT WinInsertLboxItem(HWND hwndLbox, LONG/SHORT index, PSZ psz)
;|***    *    inserts psz into a listbox at index.  Index may be an LIT_ constant.
;|***    *    returns the actual index where it was inserted.
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinInsertLboxItem(hwndLbox, index, psz) \
;|***       ((LONG)WinSendMsg(hwndLbox, LM_INSERTITEM, MPFROMLONG(index), \
;|***       MPFROMP(psz)))
;|***    #else
;|***       #define WinInsertLboxItem(hwndLbox, index, psz) \
;|***       ((SHORT)WinSendMsg(hwndLbox, LM_INSERTITEM, MPFROMSHORT(index), \
;|***       MPFROMP(psz)))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * LONG/SHORT WinQueryLboxCount(HWND hwndLbox)
;|***    *    returns the number of items in the listbox.
;|***    *
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinQueryLboxCount(hwndLbox) \
;|***       ((LONG)WinSendMsg(hwndLbox, LM_QUERYITEMCOUNT, (MPARAM)NULL, \
;|***       (MPARAM)NULL))
;|***    #else
;|***       #define WinQueryLboxCount(hwndLbox) \
;|***       ((SHORT)WinSendMsg(hwndLbox, LM_QUERYITEMCOUNT, (MPARAM)NULL, \
;|***       (MPARAM)NULL))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * LONG/SHORT WinQueryLboxItemText(HWND hwndLbox, LONG/SHORT index, PSZ psz, SHORT cchMax)
;|***    *    fills psz with the text if item index.
;|***    *    returns the text length copied.
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinQueryLboxItemText(hwndLbox, index, psz, cchMax) \
;|***       ((LONG)WinSendMsg(hwndLbox, LM_QUERYITEMTEXT, \
;|***       MPFROM2SHORT((index), (cchMax)), MPFROMP(psz)))
;|***    #else
;|***       #define WinQueryLboxItemText(hwndLbox, index, psz, cchMax) \
;|***       ((SHORT)WinSendMsg(hwndLbox, LM_QUERYITEMTEXT, \
;|***       MPFROM2SHORT((index), (cchMax)), MPFROMP(psz)))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * LONG/SHORT WinQueryLboxItemTextLength(HWND hwndLbox, LONG/SHORT index)
;|***    *    returns the length of item index.
;|***    *
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinQueryLboxItemTextLength(hwndLbox, index)         \
;|***       ((SHORT)WinSendMsg(hwndLbox, LM_QUERYITEMTEXTLENGTH,    \
;|***       MPFROMSHORT(index), (MPARAM)NULL))
;|***    #else
;|***       #define WinQueryLboxItemTextLength(hwndLbox, index)         \
;|***       ((SHORT)WinSendMsg(hwndLbox, LM_QUERYITEMTEXTLENGTH,    \
;|***       MPFROMSHORT(index), (MPARAM)NULL))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinSetLboxItemText(HWND hwndLbox, LONG/SHORT index, PSZ psz)
;|***    *    sets the text of item index to psz.
;|***    *    returns fSuccess.
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinSetLboxItemText(hwndLbox, index, psz) \
;|***       ((BOOL)WinSendMsg(hwndLbox, LM_SETITEMTEXT, \
;|***       MPFROMLONG(index), MPFROMP(psz)))
;|***    #else
;|***       #define WinSetLboxItemText(hwndLbox, index, psz) \
;|***       ((BOOL)WinSendMsg(hwndLbox, LM_SETITEMTEXT, \
;|***       MPFROMSHORT(index), MPFROMP(psz)))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * LONG/SHORT WinQueryLboxSelectedItem(HWND hwndLbox)
;|***    *    returns the item index selected. (for single selection only)
;|***    *
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinQueryLboxSelectedItem(hwndLbox) \
;|***       ((LONG)WinSendMsg(hwndLbox, LM_QUERYSELECTION, MPFROMLONG(LIT_FIRST), \
;|***       (MPARAM)NULL))
;|***    #else
;|***       #define WinQueryLboxSelectedItem(hwndLbox) \
;|***       ((SHORT)WinSendMsg(hwndLbox, LM_QUERYSELECTION, MPFROMSHORT(LIT_FIRST), \
;|***       (MPARAM)NULL))
;|***    #endif
;|*** 
;|*** #endif /* INCL_WINLISTBOXES */
;|*** 
;|*** 
;|*** #ifdef INCL_WINMENUS
;|*** 
;|***    /**** Menu Manager Subsection */
;|*** 
;|***    /* Menu control styles */
;|*** 
;|***    #define MS_ACTIONBAR               0x00000001L
;|***    #define MS_TITLEBUTTON             0x00000002L
;|***    #define MS_VERTICALFLIP            0x00000004L
;|*** 
;|***    #define MS_CONDITIONALCASCADE      0x00000040L
;|*** 
;|***    #ifdef INCL_32
;|***       HWND APIENTRY WinLoadMenu(HWND hwndFrame,
;|***                                 HMODULE hmod,
;|***                                 ULONG idMenu);
;|***    #else
;|***       HWND APIENTRY WinLoadMenu(HWND hwndFrame,
;|***                                 HMODULE hmod,
;|***                                 USHORT idMenu);
;|***    #endif
;|*** 
;|*** 
;|***    /* Menu control messages */
;|*** 
;|***    #define MM_INSERTITEM              0x0180
;|***    #define MM_DELETEITEM              0x0181
;|***    #define MM_QUERYITEM               0x0182
;|***    #define MM_SETITEM                 0x0183
;|***    #define MM_QUERYITEMCOUNT          0x0184
;|***    #define MM_STARTMENUMODE           0x0185
;|***    #define MM_ENDMENUMODE             0x0186
;|***    #define MM_REMOVEITEM              0x0188
;|***    #define MM_SELECTITEM              0x0189
;|***    #define MM_QUERYSELITEMID          0x018a
;|***    #define MM_QUERYITEMTEXT           0x018b
;|***    #define MM_QUERYITEMTEXTLENGTH     0x018c
;|***    #define MM_SETITEMHANDLE           0x018d
;|***    #define MM_SETITEMTEXT             0x018e
;|***    #define MM_ITEMPOSITIONFROMID      0x018f
;|***    #define MM_ITEMIDFROMPOSITION      0x0190
;|***    #define MM_QUERYITEMATTR           0x0191
;|***    #define MM_SETITEMATTR             0x0192
;|***    #define MM_ISITEMVALID             0x0193
;|***    #define MM_QUERYITEMRECT           0x0194
;|*** 
;|***    #define MM_QUERYDEFAULTITEMID      0x0431
;|***    #define MM_SETDEFAULTITEMID        0x0432
;|*** 
;|***    #ifndef MTI_INCLUDED
;|***       #define MTI_INCLUDED
;|*** 
;|***       typedef struct _mti {   /* mti */
;|***          USHORT afStyle;      /* Style Flags      */
;|***          USHORT pad;          /* pad for template */
;|***          USHORT idItem;       /* Item ID          */
;|***          CHAR   c[2];         /*                  */
;|***       } MTI;
;|*** 
;|***       typedef struct _mt {    /* mt */
;|***          ULONG  len;          /* Length of template in bytes */
;|***          USHORT codepage;     /* Codepage                    */
;|***          USHORT reserved;     /* Reserved.                   */
;|***          USHORT cMti;         /* Count of template items.    */
;|***          MTI    rgMti[1];     /* Array of template items.    */
;|***       } MT;
;|***       typedef MT FAR * LPMT;
;|*** 
;|***    #endif
;|*** 
;|***    HWND APIENTRY WinCreateMenu(HWND hwndParent,
;|***                                PVOID lpmt);
;|*** 
;|***    /* Owner Item Structure (Also used for listboxes) */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #ifdef INCL_32
;|***          typedef struct _OWNERITEM {  /* oi */
;|***             HWND    hwnd;
;|***             HPS     hps;
;|***             ULONG   fsState;
;|***             ULONG   fsAttribute;
;|***             ULONG   fsStateOld;
;|***             ULONG   fsAttributeOld;
;|***             RECTL   rclItem;
;|***             LONG    idItem; /* This field contains idItem for menus, iItem for lb. */
;|***             ULONG   hItem;
;|***          } OWNERITEM;
;|***       #else
;|***          typedef struct _OWNERITEM {  /* oi */
;|***             HWND    hwnd;
;|***             HPS     hps;
;|***             USHORT  fsState;
;|***             USHORT  fsAttribute;
;|***             USHORT  fsStateOld;
;|***             USHORT  fsAttributeOld;
;|***             RECTL   rclItem;
;|***             SHORT   idItem; /* This field contains idItem for menus, iItem for lb. */
;|***             ULONG   hItem;
;|***          } OWNERITEM;
;|***       #endif
;|***       typedef OWNERITEM FAR *POWNERITEM;
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    /* Menu item */
;|*** 
;|***    #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***    /* Binary resources may be bound into application executables or */
;|***    /* passed as a parameter when creating a window or dialog        */
;|***    /* Currently they must be the same for both 16-bit and 32-bit    */
;|***    /* so we pack the structures.                                    */
;|***    typedef struct _MENUITEM {  /* mi */
;|***       SHORT   iPosition;
;|***       USHORT  afStyle;
;|***       USHORT  afAttribute;
;|***       USHORT  id;
;|***       HWND    hwndSubMenu;
;|***       ULONG   hItem;
;|***    } MENUITEM;
;|***    typedef MENUITEM FAR *PMENUITEM;
;|*** 
;|***    #pragma pack()  /* restore packing to default */
;|*** 
;|***    #define MIT_END                    (-1)
;|***    #define MIT_NONE                   (-1)
;|***    #define MIT_MEMERROR               (-1)
;|***    #define MIT_ERROR                  (-1)
;|***    #define MIT_FIRST                  (-2)
;|***    #define MIT_LAST                   (-3)
;|***    #define MID_NONE                   MIT_NONE
;|***    #define MID_ERROR                  (-1)
;|*** 
;|***    /* Menu item styles & attributes */
;|*** 
;|***    #define MIS_TEXT                   0x0001
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define MIS_BITMAP                 0x0002
;|***    #endif /* !INCL_SAADEFS */
;|***    #define MIS_SEPARATOR              0x0004
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define MIS_OWNERDRAW              0x0008
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define MIS_SUBMENU                0x0010
;|***    #define MIS_MULTMENU               0x0020      /* multiple choice submenu     */
;|***    #define MIS_SYSCOMMAND             0x0040
;|***    #define MIS_HELP                   0x0080
;|***    #define MIS_STATIC                 0x0100
;|***    #define MIS_BUTTONSEPARATOR        0x0200
;|***    #define MIS_BREAK                  0x0400
;|***    #define MIS_BREAKSEPARATOR         0x0800
;|***    #define MIS_GROUP                  0x1000      /* multiple choice group start */
;|***    /* In multiple choice submenus a style of 'single' denotes the item is a
;|***    ** radiobutton.  Absence of this style defaults the item to a checkbox.       */
;|***    #define MIS_SINGLE                 0x2000
;|*** 
;|***    #define MIA_NODISMISS              0x0020
;|***    #define MIA_FRAMED                 0x1000
;|***    #define MIA_CHECKED                0x2000
;|***    #define MIA_DISABLED               0x4000
;|***    #define MIA_HILITED                0x8000
;|*** 
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL APIENTRY WinPopupMenu(HWND hwndParent,
;|***                                  HWND hwndOwner,
;|***                                  HWND hwndMenu,
;|***                                  LONG x,
;|***                                  LONG y,
;|***                                  LONG idItem,
;|***                                  ULONG fs);
;|***    #else
;|***       BOOL APIENTRY WinPopupMenu(HWND hwndParent,
;|***                                  HWND hwndOwner,
;|***                                  HWND hwndMenu,
;|***                                  SHORT x,
;|***                                  SHORT y,
;|***                                  SHORT idItem,
;|***                                  USHORT fs);
;|***    #endif
;|*** 
;|***    /* Values of fs in WinPopupMenu call */
;|*** 
;|***    #define PU_POSITIONONITEM          0x0001 /* Need idItem parameter */
;|*** 
;|***    #define PU_HCONSTRAIN              0x0002 /* Keep menu on left and right edge */
;|***    #define PU_VCONSTRAIN              0x0004 /* Keep menu on top and bottom edge */
;|*** 
;|***    #define PU_NONE                    0x0000 /* If invoked by keyboard */
;|***    #define PU_MOUSEBUTTON1DOWN        0x0008 /* If invoked by button 1 */
;|***    #define PU_MOUSEBUTTON2DOWN        0x0010 /* If invoked by button 2 */
;|***    #define PU_MOUSEBUTTON3DOWN        0x0018 /* If invoked by button 3 */
;|*** 
;|***    #define PU_SELECTITEM              0x0020 /* Set selected item (use with kbd) */
;|*** 
;|***    #define PU_MOUSEBUTTON1            0x0040 /* If button1 use allowed */
;|***    #define PU_MOUSEBUTTON2            0x0080 /* If button2 use allowed */
;|***    #define PU_MOUSEBUTTON3            0x0100 /* If button3 use allowed */
;|***    #define PU_KEYBOARD                0x0200 /* If keyboard use allowed */
;|*** 
;|*** 
;|***    /* Useful macros */
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinCheckMenuItem(HWND hwndMenu, ULONG/USHORT id, BOOL fcheck)
;|***    *    Sets the check state of menuitem #id to fcheck.
;|***    *    returns fSuccess.
;|***    ***************************************************************************/
;|***    #define WinCheckMenuItem(hwndMenu, id, fcheck) \
;|***    ((BOOL)WinSendMsg(hwndMenu, MM_SETITEMATTR, \
;|***    MPFROM2SHORT(id, TRUE), \
;|***    MPFROM2SHORT(MIA_CHECKED, (USHORT)(fcheck) ? MIA_CHECKED : 0)))
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinIsMenuItemChecked(HWND hwndMenu, USHORT/ULONG id)
;|***    *    returns the check state of menuitem #id.
;|***    *
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinIsMenuItemChecked(hwndMenu, id) \
;|***       ((BOOL)WinSendMsg(hwndMenu, MM_QUERYITEMATTR, \
;|***       MPFROM2SHORT(id, TRUE), \
;|***       MPFROMLONG(MIA_CHECKED)))
;|***    #else
;|***       #define WinIsMenuItemChecked(hwndMenu, id) \
;|***       ((BOOL)WinSendMsg(hwndMenu, MM_QUERYITEMATTR, \
;|***       MPFROM2SHORT(id, TRUE), \
;|***       MPFROMSHORT(MIA_CHECKED)))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinEnableMenuItem(HWND hwndMenu, ULONG/USHORT id, BOOL fenable)
;|***    *    sets the enable state of menuitem #id to fenable.
;|***    *    returns fSuccess.
;|***    ***************************************************************************/
;|***    #define WinEnableMenuItem(hwndMenu, id, fEnable) \
;|***    ((BOOL)WinSendMsg(hwndMenu, MM_SETITEMATTR, \
;|***    MPFROM2SHORT(id, TRUE), \
;|***    MPFROM2SHORT(MIA_DISABLED, (USHORT)(fEnable) ? 0 : MIA_DISABLED)))
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinIsMenuItemEnabled(HWND hwndMenu, USHORT/ULONG id)
;|***    *    returns the enable state of menuitem #id.
;|***    *
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinIsMenuItemEnabled(hwndMenu, id)  \
;|***       (!(BOOL)WinSendMsg(hwndMenu, MM_QUERYITEMATTR, \
;|***       MPFROM2SHORT(id, TRUE), \
;|***       MPFROMLONG(MIA_DISABLED)))
;|***    #else
;|***       #define WinIsMenuItemEnabled(hwndMenu, id)  \
;|***       (!(BOOL)WinSendMsg(hwndMenu, MM_QUERYITEMATTR, \
;|***       MPFROM2SHORT(id, TRUE), \
;|***       MPFROMSHORT(MIA_DISABLED)))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinSetMenuItemText(HWND hwndMenu, ULONG/USHORT id, PSZ psz)
;|***    *    sets the text of menuitem #id.
;|***    *    returns fSuccess.
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinSetMenuItemText(hwndMenu, id, psz) \
;|***       ((BOOL)WinSendMsg(hwndMenu, MM_SETITEMTEXT, \
;|***       MPFROMLONG(id), MPFROMP(psz)))
;|***    #else
;|***       #define WinSetMenuItemText(hwndMenu, id, psz) \
;|***       ((BOOL)WinSendMsg(hwndMenu, MM_SETITEMTEXT, \
;|***       MPFROMSHORT(id), MPFROMP(psz)))
;|***    #endif
;|*** 
;|***    /***************************************************************************
;|***    * BOOL WinIsMenuItemValid(HWND hwndMenu, ULONG/USHORT id)
;|***    *    Returns TRUE if the specified item is a valid choice.
;|***    ***************************************************************************/
;|***    #ifdef INCL_32
;|***       #define WinIsMenuItemValid(hwndMenu, id) \
;|***       ((BOOL)WinSendMsg(hwndMenu, MM_ISITEMVALID, \
;|***       MPFROM2SHORT(id, TRUE), MPFROMLONG(FALSE)))
;|***    #else
;|***       #define WinIsMenuItemValid(hwndMenu, id) \
;|***       ((BOOL)WinSendMsg(hwndMenu, MM_ISITEMVALID, \
;|***       MPFROM2SHORT(id, TRUE), MPFROMSHORT(FALSE)))
;|***    #endif
;|*** 
;|*** #endif /* INCL_WINMENUS */
;|*** 
;|*** 
;|*** #ifdef INCL_WINSCROLLBARS
;|*** 
;|***    /*** Scroll Bar controls Subsection */
;|*** 
;|***    /* Scroll Bar styles */
;|*** 
;|***    #define SBS_HORZ                   0L
;|***    #define SBS_VERT                   1L
;|***    #define SBS_THUMBSIZE              2L
;|***    #define SBS_AUTOTRACK              4L
;|***    #define SBS_AUTOSIZE        0x2000L
;|*** 
;|*** 
;|*** 
;|***    /* Scroll Bar messages */
;|*** 
;|***    #define SBM_SETSCROLLBAR           0x01a0
;|***    #define SBM_SETPOS                 0x01a1
;|***    #define SBM_QUERYPOS               0x01a2
;|***    #define SBM_QUERYRANGE             0x01a3
;|***    #define SBM_SETTHUMBSIZE           0x01a6
;|*** 
;|***    /* Scroll Bar Commands */
;|*** 
;|***    #define SB_LINEUP                  1
;|***    #define SB_LINEDOWN                2
;|***    #define SB_LINELEFT                1
;|***    #define SB_LINERIGHT               2
;|***    #define SB_PAGEUP                  3
;|***    #define SB_PAGEDOWN                4
;|***    #define SB_PAGELEFT                3
;|***    #define SB_PAGERIGHT               4
;|***    #define SB_SLIDERTRACK             5
;|***    #define SB_SLIDERPOSITION          6
;|***    #define SB_ENDSCROLL               7
;|*** 
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***       /* Binary resources may be bound into application executables or */
;|***       /* passed as a parameter when creating a window or dialog        */
;|***       /* Currently they must be the same for both 16-bit and 32-bit    */
;|***       /* so we pack the structures.                                    */
;|***       typedef struct _SBCDATA {  /* sbcd */
;|***          USHORT  cb;
;|***          USHORT  sHilite;      /* reserved, should be set to zero */
;|***          SHORT   posFirst;
;|***          SHORT   posLast;
;|***          SHORT   posThumb;
;|***          SHORT   cVisible;
;|***          SHORT   cTotal;
;|***       } SBCDATA;
;|***       typedef SBCDATA FAR *PSBCDATA;
;|*** 
;|***       #pragma pack()  /* restore packing to default */
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINSCROLLBARS */
;|*** 
;|*** 
;|*** #if (defined(INCL_WINFRAMEMGR) || !defined(INCL_NOCOMMON))
;|***    /*** Frame Manager Common subsection */
;|*** 
;|***    #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***    /* Binary resources may be bound into application executables or */
;|***    /* passed as a parameter when creating a window or dialog        */
;|***    /* Currently they must be the same for both 16-bit and 32-bit    */
;|***    /* so we pack the structures.                                    */
;|***    typedef struct _FRAMECDATA {  /* fcdata */
;|***       USHORT  cb;
;|***       ULONG   flCreateFlags;
;|***       USHORT  hmodResources;
;|***       USHORT  idResources;
;|***    } FRAMECDATA;
;|***    typedef FRAMECDATA FAR *PFRAMECDATA;
;|*** 
;|***    #pragma pack()  /* restore packing to default */
;|*** 
;|***    /* Frame window styles */
;|***    /* All unused FCF_xxx bits are reserved */
;|***    #define FCF_TITLEBAR               0x00000001L
;|***    #define FCF_SYSMENU                0x00000002L
;|***    #define FCF_MENU                   0x00000004L
;|***    #define FCF_SIZEBORDER             0x00000008L
;|***    #define FCF_MINBUTTON              0x00000010L
;|***    #define FCF_MAXBUTTON              0x00000020L
;|***    #define FCF_MINMAX                 0x00000030L /* minmax means BOTH buttons */
;|***    #define FCF_VERTSCROLL             0x00000040L
;|***    #define FCF_HORZSCROLL             0x00000080L
;|***    #define FCF_DLGBORDER              0x00000100L
;|***    #define FCF_BORDER                 0x00000200L
;|***    #define FCF_SHELLPOSITION          0x00000400L
;|***    #define FCF_TASKLIST               0x00000800L
;|***    #define FCF_NOBYTEALIGN            0x00001000L
;|***    #define FCF_NOMOVEWITHOWNER        0x00002000L
;|***    #define FCF_ICON                   0x00004000L
;|***    #define FCF_ACCELTABLE             0x00008000L
;|***    #define FCF_SYSMODAL               0x00010000L
;|***    #define FCF_SCREENALIGN            0x00020000L
;|***    #define FCF_MOUSEALIGN             0x00040000L
;|***    #define FCF_HIDEBUTTON             0x01000000L
;|***    #define FCF_HIDEMAX                0x01000020L /* hidemax means BOTH buttons */
;|***    #ifdef INCL_16
;|***       /* New values to enable multiple palettes.  Note that if none of the four   */
;|***       /* styles specified below are used then we default to the 'system' palette  */
;|***       #define FCF_PALETTE_NORMAL      0x00080000L /* normal palette            */
;|***       #define FCF_PALETTE_HELP        0x00100000L /* help palette              */
;|***       #define FCF_PALETTE_POPUPODD    0x00200000L /* odd level popup palette   */
;|***       #define FCF_PALETTE_POPUPEVEN   0x00400000L /* even level popup palette  */
;|***    #endif
;|***    #ifdef INCL_NLS
;|***       #define FCF_DBE_APPSTAT         0x80000000L
;|***    #endif /* INCL_NLS */
;|***    #define FCF_AUTOICON               0x40000000L
;|*** 
;|***    #ifdef INCL_32
;|***       /* FCF_TITLEBAR | FCF_SYSMENU | FCF_MENU | FCF_SIZEBORDER | FCF_MINMAX |
;|***       FCF_ICON | FCF_ACCELTABLE | FCF_SHELLPOSITION | FCF_TASKLIST */
;|***       #define FCF_STANDARD            0x0000CC3FL
;|***    #else
;|***       /* FCF_TITLEBAR | FCF_SYSMENU | FCF_MENU | FCF_SIZEBORDER | FCF_MINMAX |
;|***       FCF_ICON | FCF_ACCELTABLE | FCF_SHELLPOSITION | FCF_TASKLIST | FCF_PALETTE_NORMAL */
;|***       #define FCF_STANDARD            0x0008CC3FL
;|***    #endif
;|*** 
;|*** 
;|***    #define FS_ICON                    0x00000001L
;|***    #define FS_ACCELTABLE              0x00000002L
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define FS_SHELLPOSITION        0x00000004L
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define FS_TASKLIST                0x00000008L
;|***    #define FS_NOBYTEALIGN             0x00000010L
;|***    #define FS_NOMOVEWITHOWNER         0x00000020L
;|***    #define FS_SYSMODAL                0x00000040L
;|***    #define FS_DLGBORDER               0x00000080L
;|***    #define FS_BORDER                  0x00000100L
;|***    #define FS_SCREENALIGN             0x00000200L
;|***    #define FS_MOUSEALIGN              0x00000400L
;|***    #define FS_SIZEBORDER              0x00000800L
;|***    #define FS_AUTOICON                0x00001000L
;|***    #ifdef INCL_NLS
;|***       #define FS_DBE_APPSTAT          0x00008000L
;|***    #endif /* INCL_NLS */
;|*** 
;|***    /* FS_ICON | FS_ACCELTABLE | FS_SHELLPOSITION | FS_TASKLIST */
;|***    #define FS_STANDARD                0x0000000FL
;|*** 
;|*** 
;|***    /* Frame Window Flags accessed via WinSet/QueryWindowUShort(QWS_FLAGS) */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define FF_FLASHWINDOW             0x0001
;|***       #define FF_ACTIVE                  0x0002
;|***       #define FF_FLASHHILITE             0x0004
;|***       #define FF_OWNERHIDDEN             0x0008
;|***       #define FF_DLGDISMISSED            0x0010
;|***       #define FF_OWNERDISABLED           0x0020
;|***       #define FF_SELECTED                0x0040
;|***       #define FF_NOACTIVATESWP           0x0080
;|***       #define FF_DIALOGBOX               0x0100
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** 
;|***    #ifdef INCL_32
;|***       HWND  APIENTRY WinCreateStdWindow(HWND hwndParent,
;|***                                         ULONG flStyle,
;|***                                         PULONG pflCreateFlags,
;|***                                         PSZ pszClientClass,
;|***                                         PSZ pszTitle,
;|***                                         ULONG styleClient,
;|***                                         HMODULE hmod,
;|***                                         ULONG idResources,
;|***                                         PHWND phwndClient);
;|***    #else
;|***       HWND  APIENTRY WinCreateStdWindow(HWND hwndParent,
;|***                                         ULONG flStyle,
;|***                                         PULONG pflCreateFlags,
;|***                                         PSZ pszClientClass,
;|***                                         PSZ pszTitle,
;|***                                         ULONG styleClient,
;|***                                         HMODULE hmod,
;|***                                         USHORT idResources,
;|***                                         PHWND phwndClient);
;|***    #endif
;|*** 
;|*** 
;|*** #endif /* Frame Manager Common subsection */
;|*** 
;|*** 
;|*** #ifdef INCL_WINFRAMEMGR
;|*** 
;|***    BOOL  APIENTRY WinFlashWindow(HWND hwndFrame,
;|***                                  BOOL fFlash);
;|*** 
;|***    /* Frame window related messages */
;|*** 
;|***    #define WM_FLASHWINDOW             0x0040
;|***    #define WM_FORMATFRAME             0x0041
;|***    #define WM_UPDATEFRAME             0x0042
;|***    #define WM_FOCUSCHANGE             0x0043
;|*** 
;|***    #define WM_SETBORDERSIZE           0x0044
;|***    #define WM_TRACKFRAME              0x0045
;|***    #define WM_MINMAXFRAME             0x0046
;|***    #define WM_SETICON                 0x0047
;|***    #define WM_QUERYICON               0x0048
;|***    #define WM_SETACCELTABLE           0x0049
;|***    #define WM_QUERYACCELTABLE         0x004a
;|***    #define WM_TRANSLATEACCEL          0x004b
;|***    #define WM_QUERYTRACKINFO          0x004c
;|***    #define WM_QUERYBORDERSIZE         0x004d
;|***    #define WM_NEXTMENU                0x004e
;|***    #define WM_ERASEBACKGROUND         0x004f
;|***    #define WM_QUERYFRAMEINFO          0x0050
;|***    #define WM_QUERYFOCUSCHAIN         0x0051
;|***    #define WM_OWNERPOSCHANGE          0x0052
;|***    #define WM_CALCFRAMERECT           0x0053
;|***    /* Note 0x0054 is reserved */
;|***    #define WM_WINDOWPOSCHANGED        0x0055
;|***    #define WM_ADJUSTFRAMEPOS          0x0056
;|***    #define WM_QUERYFRAMECTLCOUNT      0x0059
;|***    #ifndef INCL_SAADEFS
;|***       /* Note 0x005A is reserved */
;|***       #define WM_QUERYHELPINFO        0x005B
;|***       #define WM_SETHELPINFO          0x005C
;|***       #define WM_ERROR                0x005D
;|***       #define WM_REALIZEPALETTE       0x005E
;|*** 
;|*** 
;|***       /* WM_QUERYFRAMEINFO constants */
;|*** 
;|***       #define FI_FRAME                0x00000001L
;|***       #define FI_OWNERHIDE            0x00000002L
;|***       #define FI_ACTIVATEOK           0x00000004L
;|***       #define FI_NOMOVEWITHOWNER      0x00000008L
;|*** 
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** 
;|***    BOOL  APIENTRY WinCreateFrameControls(HWND hwndFrame,
;|***                                          PFRAMECDATA pfcdata,
;|***                                          PSZ pszTitle);
;|*** 
;|***    BOOL  APIENTRY WinCalcFrameRect(HWND hwndFrame,
;|***                                    PRECTL prcl,
;|***                                    BOOL fClient);
;|*** 
;|***    BOOL  APIENTRY WinGetMinPosition(HWND hwnd,
;|***                                     PSWP pswp,
;|***                                     PPOINTL pptl);
;|***    #ifndef INCL_SAADEFS
;|***       BOOL  APIENTRY WinGetMaxPosition(HWND hwnd,
;|***                                        PSWP pswp);
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    typedef LHANDLE HSAVEWP;      /* hsvwp */
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL APIENTRY WinSaveWindowPos(HSAVEWP hsvwp,
;|***                                      PSWP pswp,
;|***                                      ULONG cswp);
;|***    #else
;|***       BOOL APIENTRY WinSaveWindowPos(HSAVEWP hsvwp,
;|***                                      PSWP pswp,
;|***                                      USHORT cswp);
;|***    #endif
;|*** 
;|***    /* Frame control IDs    */
;|*** 
;|***    #define FID_SYSMENU                0x8002
;|***    #define FID_TITLEBAR               0x8003
;|***    #define FID_MINMAX                 0x8004
;|***    #define FID_MENU                   0x8005
;|***    #define FID_VERTSCROLL             0x8006
;|***    #define FID_HORZSCROLL             0x8007
;|***    #define FID_CLIENT                 0x8008
;|***    /* Note 0x8009 is reserved */
;|*** 
;|***    #define FID_DBE_APPSTAT            0x8010
;|***    #define FID_DBE_KBDSTAT            0x8011
;|***    #define FID_DBE_PECIC              0x8012
;|***    #define FID_DBE_KKPOPUP            0x8013
;|*** 
;|***    /* Standard WM_SYSCOMMAND command values */
;|*** 
;|***    #define SC_SIZE                    0x8000
;|***    #define SC_MOVE                    0x8001
;|***    #define SC_MINIMIZE                0x8002
;|***    #define SC_MAXIMIZE                0x8003
;|***    #define SC_CLOSE                   0x8004
;|***    #define SC_NEXT                    0x8005
;|***    #define SC_APPMENU                 0x8006
;|***    #define SC_SYSMENU                 0x8007
;|***    #define SC_RESTORE                 0x8008
;|***    #define SC_NEXTFRAME               0x8009
;|***    #define SC_NEXTWINDOW              0x8010
;|***    #ifndef INCL_SAADEFS
;|***       #define SC_TASKMANAGER             0x8011
;|***       #define SC_HELPKEYS                0x8012
;|***       #define SC_HELPINDEX               0x8013
;|***       #define SC_HELPEXTENDED            0x8014
;|***       #define SC_SWITCHPANELIDS          0x8015
;|***       #define SC_DBE_FIRST               0x8018
;|***       #define SC_DBE_LAST                0x801F
;|*** 
;|***       #define SC_BEGINDRAG               0x8020
;|***       #define SC_ENDDRAG                 0x8021
;|***       #define SC_SELECT                  0x8022
;|***       #define SC_OPEN                    0x8023
;|***       #define SC_CONTEXTMENU             0x8024
;|***       #define SC_CONTEXTHELP             0x8025
;|***       #define SC_TEXTEDIT                0x8026
;|***       #define SC_BEGINSELECT             0x8027
;|***       #define SC_ENDSELECT               0x8028
;|***       #define SC_WINDOW                  0x8029
;|***       #define SC_HIDE                    0x802a
;|*** 
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINFRAMEMGR */
;|*** 
;|*** /*** Frame controls */
;|*** 
;|*** #ifdef INCL_WINFRAMECTLS
;|*** 
;|***    /** Title bar controls */
;|*** 
;|*** 
;|***    /* Title bar control messages */
;|*** 
;|***    #define TBM_SETHILITE              0x01e3
;|***    #define TBM_QUERYHILITE            0x01e4
;|*** 
;|***    #ifdef INCL_16
;|***       #define TBM_TRACKMOVE              0x01e5
;|***    #endif /* INCL_16 */
;|*** 
;|*** #endif /* INCL_WINFRAMECTLS */
;|*** 
;|*** #ifdef INCL_WINRECTANGLES
;|***    /*** Rectangle routines */
;|*** 
;|***    BOOL APIENTRY WinCopyRect(HAB hab,
;|***                              PRECTL prclDst,
;|***                              PRECTL prclSrc);
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #ifdef INCL_32
;|***          BOOL APIENTRY WinSetRect(HAB hab,
;|***                                   PRECTL prcl,
;|***                                   LONG xLeft,
;|***                                   LONG yBottom,
;|***                                   LONG xRight,
;|***                                   LONG yTop);
;|***       #else
;|***          BOOL APIENTRY WinSetRect(HAB hab,
;|***                                   PRECTL prcl,
;|***                                   SHORT xLeft,
;|***                                   SHORT yBottom,
;|***                                   SHORT xRight,
;|***                                   SHORT yTop);
;|***       #endif
;|***       BOOL APIENTRY WinIsRectEmpty(HAB hab,
;|***                                    PRECTL prcl);
;|***       BOOL APIENTRY WinEqualRect(HAB hab,
;|***                                  PRECTL prcl1,
;|***                                  PRECTL prcl2);
;|***       BOOL APIENTRY WinSetRectEmpty(HAB hab,
;|***                                     PRECTL prcl);
;|***       #ifdef INCL_32
;|***          BOOL APIENTRY WinOffsetRect(HAB hab,
;|***                                      PRECTL prcl,
;|***                                      LONG cx,
;|***                                      LONG cy);
;|***          BOOL APIENTRY WinInflateRect(HAB hab,
;|***                                       PRECTL prcl,
;|***                                       LONG cx,
;|***                                       LONG cy);
;|***       #else
;|***          BOOL APIENTRY WinOffsetRect(HAB hab,
;|***                                      PRECTL prcl,
;|***                                      SHORT cx,
;|***                                      SHORT cy);
;|***          BOOL APIENTRY WinInflateRect(HAB hab,
;|***                                       PRECTL prcl,
;|***                                       SHORT cx,
;|***                                       SHORT cy);
;|***       #endif
;|***       BOOL APIENTRY WinPtInRect(HAB hab,
;|***                                 PRECTL prcl,
;|***                                 PPOINTL pptl);
;|***       BOOL APIENTRY WinIntersectRect(HAB hab,
;|***                                      PRECTL prclDst,
;|***                                      PRECTL prclSrc1,
;|***                                      PRECTL prclSrc2);
;|***       BOOL APIENTRY WinUnionRect(HAB hab,
;|***                                  PRECTL prclDst,
;|***                                  PRECTL prclSrc1,
;|***                                  PRECTL prclSrc2);
;|***       BOOL APIENTRY WinSubtractRect(HAB hab,
;|***                                     PRECTL prclDst,
;|***                                     PRECTL prclSrc1,
;|***                                     PRECTL prclSrc2);
;|***       #ifdef INCL_32
;|***          BOOL APIENTRY WinMakeRect(HAB hab,
;|***                                    PRECTL pwrc);
;|***          BOOL APIENTRY WinMakePoints(HAB hab,
;|***                                      PPOINTL pwpt,
;|***                                      ULONG cwpt);
;|***       #else
;|***          BOOL APIENTRY WinMakeRect(HAB hab,
;|***                                    PWRECT pwrc);
;|***          BOOL APIENTRY WinMakePoints(HAB hab,
;|***                                      PWPOINT pwpt,
;|***                                      USHORT cwpt);
;|***       #endif
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINRECTANGLES */
;|*** 
;|*** 
;|*** #ifdef INCL_WINSYS
;|*** 
;|***    /*** System values */
;|*** 
;|***    #ifdef INCL_32
;|***       LONG APIENTRY WinQuerySysValue(HWND hwndDesktop,
;|***                                      LONG iSysValue);
;|***       BOOL  APIENTRY WinSetSysValue(HWND hwndDesktop,
;|***                                     LONG iSysValue,
;|***                                     LONG lValue);
;|***    #else
;|***       LONG APIENTRY WinQuerySysValue(HWND hwndDesktop,
;|***                                      SHORT iSysValue);
;|***       BOOL  APIENTRY WinSetSysValue(HWND hwndDesktop,
;|***                                     SHORT iSysValue,
;|***                                     LONG lValue);
;|***    #endif
;|*** 
;|***    #define SV_SWAPBUTTON              0
;|***    #define SV_DBLCLKTIME              1
;|***    #define SV_CXDBLCLK                2
;|***    #define SV_CYDBLCLK                3
;|***    #define SV_CXSIZEBORDER            4
;|***    #define SV_CYSIZEBORDER            5
;|***    #define SV_ALARM                   6
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define SV_RESERVEDFIRST1          7
;|***       #define SV_RESERVEDLAST1           8
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define SV_CURSORRATE              9
;|***    #define SV_FIRSTSCROLLRATE         10
;|***    #define SV_SCROLLRATE              11
;|***    #define SV_NUMBEREDLISTS           12
;|***    #define SV_WARNINGFREQ             13
;|***    #define SV_NOTEFREQ                14
;|***    #define SV_ERRORFREQ               15
;|***    #define SV_WARNINGDURATION         16
;|***    #define SV_NOTEDURATION            17
;|***    #define SV_ERRORDURATION           18
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define SV_RESERVEDFIRST           19
;|***       #define SV_RESERVEDLAST            19
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define SV_CXSCREEN                20
;|***    #define SV_CYSCREEN                21
;|***    #define SV_CXVSCROLL               22
;|***    #define SV_CYHSCROLL               23
;|***    #define SV_CYVSCROLLARROW          24
;|***    #define SV_CXHSCROLLARROW          25
;|***    #define SV_CXBORDER                26
;|***    #define SV_CYBORDER                27
;|***    #define SV_CXDLGFRAME              28
;|***    #define SV_CYDLGFRAME              29
;|***    #define SV_CYTITLEBAR              30
;|***    #define SV_CYVSLIDER               31
;|***    #define SV_CXHSLIDER               32
;|***    #define SV_CXMINMAXBUTTON          33
;|***    #define SV_CYMINMAXBUTTON          34
;|***    #define SV_CYMENU                  35
;|***    #define SV_CXFULLSCREEN            36
;|***    #define SV_CYFULLSCREEN            37
;|***    #define SV_CXICON                  38
;|***    #define SV_CYICON                  39
;|***    #define SV_CXPOINTER               40
;|***    #define SV_CYPOINTER               41
;|*** 
;|***    #define SV_DEBUG                   42
;|***    #define SV_CMOUSEBUTTONS           43
;|***    #define SV_CPOINTERBUTTONS         43
;|***    #define SV_POINTERLEVEL            44
;|***    #define SV_CURSORLEVEL             45
;|***    #define SV_TRACKRECTLEVEL          46
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #define SV_CTIMERS                 47
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #define SV_MOUSEPRESENT            48
;|*** 
;|***    #define SV_CXBYTEALIGN             49
;|***    #define SV_CXALIGN                 49
;|***    #define SV_CYBYTEALIGN             50
;|***    #define SV_CYALIGN                 50
;|*** 
;|***    /* The following value enables any greater value to be set by WinSetSysVlaue. */
;|***    /* Values of 51-55 are spare for extra non-settable system values             */
;|***    /* This is to enable the setting of SV_EXTRAKEYBEEP by applications.          */
;|*** 
;|***    #define SV_NOTRESERVED             56
;|***    #define SV_EXTRAKEYBEEP            57
;|*** 
;|***    /* The following system value controls whether PM controls the keyboard      */
;|***    /* lights for light key keystrokes (else applications will)                  */
;|***    #define SV_SETLIGHTS               58
;|***    #define SV_INSERTMODE              59
;|*** 
;|*** 
;|***    #define SV_MENUROLLDOWNDELAY       64
;|***    #define SV_MENUROLLUPDELAY         65
;|***    #define SV_ALTMNEMONIC             66
;|***    #define SV_TASKLISTMOUSEACCESS     67
;|*** 
;|***    #define SV_CXICONTEXTWIDTH         68
;|***    #define SV_CICONTEXTLINES          69
;|*** 
;|***    #define SV_CHORDTIME               70
;|***    #define SV_CXCHORD                 71
;|***    #define SV_CYCHORD                 72
;|***    #define SV_CXMOTIONSTART           73
;|***    #define SV_CYMOTIONSTART           74
;|*** 
;|***    #define SV_BEGINDRAG               75
;|***    #define SV_ENDDRAG                 76
;|***    #define SV_SINGLESELECT            77
;|***    #define SV_OPEN                    78
;|***    #define SV_CONTEXTMENU             79
;|***    #define SV_CONTEXTHELP             80
;|***    #define SV_TEXTEDIT                81
;|***    #define SV_BEGINSELECT             82
;|***    #define SV_ENDSELECT               83
;|*** 
;|***    #define SV_BEGINDRAGKB             84
;|***    #define SV_ENDDRAGKB               85
;|***    #define SV_SELECTKB                86
;|***    #define SV_OPENKB                  87
;|***    #define SV_CONTEXTMENUKB           88
;|***    #define SV_CONTEXTHELPKB           89
;|***    #define SV_TEXTEDITKB              90
;|***    #define SV_BEGINSELECTKB           91
;|***    #define SV_ENDSELECTKB             92
;|*** 
;|***    #define SV_ANIMATION               93
;|***    #define SV_ANIMATIONSPEED          94
;|*** 
;|***    #define SV_MONOICONS               95
;|*** 
;|***    #define SV_KBDALTERED              96
;|*** 
;|***    #define SV_PRINTSCREEN             97
;|*** 
;|***    #define SV_LOCKSTARTINPUT          98
;|*** 
;|***    #define SV_CSYSVALUES              99
;|*** 
;|*** 
;|***    /*
;|***    * Presentation parameter structures.
;|***    */
;|***    typedef struct _PARAM {  /* param */
;|***       ULONG   id;
;|***       ULONG   cb;
;|***       BYTE    ab[1];
;|***    } PARAM;
;|***    typedef PARAM NEAR *NPPARAM;
;|***    typedef PARAM FAR  *PPARAM;
;|*** 
;|***    typedef struct _PRESPARAMS {  /* pres */
;|***       ULONG   cb;
;|***       PARAM   aparam[1];
;|***    } PRESPARAMS;
;|***    typedef PRESPARAMS NEAR *NPPRESPARAMS;
;|***    typedef PRESPARAMS FAR  *PPRESPARAMS;
;|*** 
;|***    /*
;|***    * Presentation parameter APIs
;|***    */
;|***    BOOL  APIENTRY WinSetPresParam(HWND hwnd,
;|***                                   ULONG id,
;|***                                   ULONG cbParam,
;|***                                   PVOID pbParam);
;|***    #ifdef INCL_32
;|***       ULONG APIENTRY WinQueryPresParam(HWND hwnd,
;|***                                        ULONG id1,
;|***                                        ULONG id2,
;|***                                        PULONG pulId,
;|***                                        ULONG cbBuf,
;|***                                        PVOID pbBuf,
;|***                                        ULONG fs);
;|***    #else
;|***       ULONG APIENTRY WinQueryPresParam(HWND hwnd,
;|***                                        ULONG id1,
;|***                                        ULONG id2,
;|***                                        PULONG pulId,
;|***                                        ULONG cbBuf,
;|***                                        PVOID pbBuf,
;|***                                        USHORT fs);
;|***    #endif
;|***    BOOL  APIENTRY WinRemovePresParam(HWND hwnd,
;|***                                      ULONG id);
;|*** 
;|***    /*
;|***    * Presentation parameter types.
;|***    */
;|*** 
;|***    #define PP_FOREGROUNDCOLOR                      1L
;|***    #define PP_FOREGROUNDCOLORINDEX                 2L
;|***    #define PP_BACKGROUNDCOLOR                      3L
;|***    #define PP_BACKGROUNDCOLORINDEX                 4L
;|***    #define PP_HILITEFOREGROUNDCOLOR                5L
;|***    #define PP_HILITEFOREGROUNDCOLORINDEX           6L
;|***    #define PP_HILITEBACKGROUNDCOLOR                7L
;|***    #define PP_HILITEBACKGROUNDCOLORINDEX           8L
;|***    #define PP_DISABLEDFOREGROUNDCOLOR              9L
;|***    #define PP_DISABLEDFOREGROUNDCOLORINDEX         10L
;|***    #define PP_DISABLEDBACKGROUNDCOLOR              11L
;|***    #define PP_DISABLEDBACKGROUNDCOLORINDEX         12L
;|***    #define PP_BORDERCOLOR                          13L
;|***    #define PP_BORDERCOLORINDEX                     14L
;|***    #define PP_FONTNAMESIZE                         15L
;|***    #define PP_FONTHANDLE                           16L
;|***    #define PP_RESERVED                             17L
;|***    #define PP_ACTIVECOLOR                          18L
;|***    #define PP_ACTIVECOLORINDEX                     19L
;|***    #define PP_INACTIVECOLOR                        20L
;|***    #define PP_INACTIVECOLORINDEX                   21L
;|***    #define PP_ACTIVETEXTFGNDCOLOR                  22L
;|***    #define PP_ACTIVETEXTFGNDCOLORINDEX             23L
;|***    #define PP_ACTIVETEXTBGNDCOLOR                  24L
;|***    #define PP_ACTIVETEXTBGNDCOLORINDEX             25L
;|***    #define PP_INACTIVETEXTFGNDCOLOR                26L
;|***    #define PP_INACTIVETEXTFGNDCOLORINDEX           27L
;|***    #define PP_INACTIVETEXTBGNDCOLOR                28L
;|***    #define PP_INACTIVETEXTBGNDCOLORINDEX           29L
;|***    #define PP_SHADOW                               30L
;|***    #define PP_MENUFOREGROUNDCOLOR                  31L
;|***    #define PP_MENUFOREGROUNDCOLORINDEX             32L
;|***    #define PP_MENUBACKGROUNDCOLOR                  33L
;|***    #define PP_MENUBACKGROUNDCOLORINDEX             34L
;|***    #define PP_MENUHILITEFGNDCOLOR                  35L
;|***    #define PP_MENUHILITEFGNDCOLORINDEX             36L
;|***    #define PP_MENUHILITEBGNDCOLOR                  37L
;|***    #define PP_MENUHILITEBGNDCOLORINDEX             38L
;|***    #define PP_MENUDISABLEDFGNDCOLOR                39L
;|***    #define PP_MENUDISABLEDFGNDCOLORINDEX           40L
;|***    #define PP_MENUDISABLEDBGNDCOLOR                41L
;|***    #define PP_MENUDISABLEDBGNDCOLORINDEX           42L
;|***    #define PP_SHADOWTEXTCOLOR                      43L
;|***    #define PP_SHADOWTEXTCOLORINDEX                 44L
;|***    #define PP_SHADOWHILITEFGNDCOLOR                45L
;|***    #define PP_SHADOWHILITEFGNDCOLORINDEX           46L
;|***    #define PP_SHADOWHILITEBGNDCOLOR                47L
;|***    #define PP_SHADOWHILITEBGNDCOLORINDEX           48L
;|***    #define PP_ICONTEXTBACKGROUNDCOLOR              49L
;|***    #define PP_ICONTEXTBACKGROUNDCOLORINDEX         50L
;|*** 
;|***    /* PP_ values 0x100 - 0x012F are reserved*/
;|***    /* for bidirectional language support.   */
;|*** 
;|***    #define PP_BIDI_FIRST                           0x0100L
;|***    #define PP_BIDI_LAST                            0x012FL
;|*** 
;|***    #define PP_USER                                 0x8000L
;|*** 
;|***    /*
;|***    * Flags for WinQueryPresParams()
;|***    */
;|***    #define QPF_NOINHERIT            0x0001 /* Don't inherit                      */
;|***    #define QPF_ID1COLORINDEX        0x0002 /* Convert id1 color index into RGB   */
;|***    #define QPF_ID2COLORINDEX        0x0004 /* Convert id2 color index into RGB   */
;|***    #define QPF_PURERGBCOLOR         0x0008 /* Return pure RGB colors             */
;|***    #define QPF_VALIDFLAGS           0x000F /* Valid WinQueryPresParams() flags.  */
;|*** 
;|***    /*** System color functions */
;|*** 
;|***    LONG APIENTRY WinQuerySysColor(HWND hwndDesktop,
;|***                                   LONG clr,
;|***                                   LONG lReserved);
;|***    BOOL APIENTRY WinSetSysColors(HWND hwndDesktop,
;|***                                  ULONG flOptions,
;|***                                  ULONG flFormat,
;|***                                  LONG clrFirst,
;|***                                  ULONG cclr,
;|***                                  PLONG pclr);
;|*** 
;|***    #define SYSCLR_SHADOWHILITEBGND         (-50L)
;|***    #define SYSCLR_SHADOWHILITEFGND         (-49L)
;|***    #define SYSCLR_SHADOWTEXT               (-48L)
;|***    #define SYSCLR_ENTRYFIELD               (-47L)
;|***    #define SYSCLR_MENUDISABLEDTEXT         (-46L)
;|***    #define SYSCLR_MENUHILITE               (-45L)
;|***    #define SYSCLR_MENUHILITEBGND           (-44L)
;|***    #define SYSCLR_PAGEBACKGROUND           (-43L)
;|***    #define SYSCLR_FIELDBACKGROUND          (-42L)
;|***    #define SYSCLR_BUTTONLIGHT              (-41L)
;|***    #define SYSCLR_BUTTONMIDDLE             (-40L)
;|***    #define SYSCLR_BUTTONDARK               (-39L)
;|***    #define SYSCLR_BUTTONDEFAULT            (-38L)
;|***    #define SYSCLR_TITLEBOTTOM              (-37L)
;|***    #define SYSCLR_SHADOW                   (-36L)
;|***    #define SYSCLR_ICONTEXT                 (-35L)
;|***    #define SYSCLR_DIALOGBACKGROUND         (-34L)
;|***    #define SYSCLR_HILITEFOREGROUND         (-33L)
;|***    #define SYSCLR_HILITEBACKGROUND         (-32L)
;|***    #define SYSCLR_INACTIVETITLETEXTBGND    (-31L)
;|***    #define SYSCLR_ACTIVETITLETEXTBGND      (-30L)
;|***    #define SYSCLR_INACTIVETITLETEXT        (-29L)
;|***    #define SYSCLR_ACTIVETITLETEXT          (-28L)
;|***    #define SYSCLR_OUTPUTTEXT               (-27L)
;|***    #define SYSCLR_WINDOWSTATICTEXT         (-26L)
;|***    #define SYSCLR_SCROLLBAR                (-25L)
;|***    #define SYSCLR_BACKGROUND               (-24L)
;|***    #define SYSCLR_ACTIVETITLE              (-23L)
;|***    #define SYSCLR_INACTIVETITLE            (-22L)
;|***    #define SYSCLR_MENU                     (-21L)
;|***    #define SYSCLR_WINDOW                   (-20L)
;|***    #define SYSCLR_WINDOWFRAME              (-19L)
;|***    #define SYSCLR_MENUTEXT                 (-18L)
;|***    #define SYSCLR_WINDOWTEXT               (-17L)
;|***    #define SYSCLR_TITLETEXT                (-16L)
;|***    #define SYSCLR_ACTIVEBORDER             (-15L)
;|***    #define SYSCLR_INACTIVEBORDER           (-14L)
;|***    #define SYSCLR_APPWORKSPACE             (-13L)
;|***    #define SYSCLR_HELPBACKGROUND           (-12L)
;|***    #define SYSCLR_HELPTEXT                 (-11L)
;|***    #define SYSCLR_HELPHILITE               (-10L)
;|*** 
;|***    #define SYSCLR_CSYSCOLORS               41L
;|*** 
;|*** #endif /* INCL_WINSYS */
;|*** 
;|*** 
;|*** #ifdef INCL_WINTIMER
;|***    /**** Timer manager */
;|*** 
;|***    #ifndef INCL_SAADEFS
;|*** 
;|***       #ifdef INCL_32
;|*** 
;|***          ULONG APIENTRY WinStartTimer(HAB hab,
;|***                                       HWND hwnd,
;|***                                       ULONG idTimer,
;|***                                       ULONG dtTimeout);
;|***          BOOL   APIENTRY WinStopTimer(HAB hab,
;|***                                       HWND hwnd,
;|***                                       ULONG idTimer);
;|*** 
;|***       #else /* not INCL_32 */
;|*** 
;|***          USHORT APIENTRY WinStartTimer(HAB hab,
;|***                                        HWND hwnd,
;|***                                        USHORT idTimer,
;|***                                        USHORT dtTimeout);
;|***          BOOL   APIENTRY WinStopTimer(HAB hab,
;|***                                       HWND hwnd,
;|***                                       USHORT idTimer);
;|*** 
;|***       #endif /* INCL_32 */
;|*** 
;|***       ULONG  APIENTRY WinGetCurrentTime(HAB hab);
;|*** 
;|***       #define TID_CURSOR          0xffff  /* Reserved cursor timer ID              */
;|***       #define TID_SCROLL          0xfffe  /* Reserved scrolling timer ID           */
;|***       #define TID_FLASHWINDOW     0xfffd  /* Reserved for window flashing timer ID */
;|***       #define TID_USERMAX         0x7fff  /* Maximum user timer ID                 */
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINTIMER */
;|*** 
;|*** typedef LHANDLE HACCEL; /* haccel */
;|*** 
;|*** #ifdef INCL_WINACCELERATORS
;|***    /**** Accelerator functions */
;|*** 
;|***    /* ACCEL fs bits
;|***    *
;|***    * NOTE: the first six AF_ code bits have the same value
;|***    * as their KC_ counterparts
;|***    */
;|***    #ifndef INCL_SAADEFS
;|***       #define AF_CHAR                    0x0001
;|***       #define AF_VIRTUALKEY              0x0002
;|***       #define AF_SCANCODE                0x0004
;|***       #define AF_SHIFT                   0x0008
;|***       #define AF_CONTROL                 0x0010
;|***       #define AF_ALT                     0x0020
;|***       #define AF_LONEKEY                 0x0040
;|***       #define AF_SYSCOMMAND              0x0100
;|***       #define AF_HELP                    0x0200
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***    /* Binary resources may be bound into application executables or */
;|***    /* passed as a parameter when creating a window or dialog        */
;|***    /* Currently they must be the same for both 16-bit and 32-bit    */
;|***    /* so we pack the structures.                                    */
;|***    typedef struct _ACCEL {  /* acc */
;|***       USHORT  fs;
;|***       USHORT  key;
;|***       USHORT  cmd;
;|***    } ACCEL;
;|***    typedef ACCEL FAR *PACCEL;
;|*** 
;|***    /* Binary resources may be bound into application executables or */
;|***    /* passed as a parameter when creating a window or dialog        */
;|***    /* Currently they must be the same for both 16-bit and 32-bit    */
;|***    /* so we pack the structures.                                    */
;|***    typedef struct _ACCELTABLE {  /* acct  */
;|***       USHORT  cAccel;
;|***       USHORT  codepage;
;|***       ACCEL   aaccel[1];
;|***    } ACCELTABLE;
;|***    typedef ACCELTABLE FAR *PACCELTABLE;
;|*** 
;|***    #pragma pack()  /* restore packing to default */
;|*** 
;|***    #ifdef INCL_32
;|***       HACCEL APIENTRY WinLoadAccelTable(HAB hab,
;|***                                         HMODULE hmod,
;|***                                         ULONG idAccelTable);
;|***       ULONG APIENTRY WinCopyAccelTable(HACCEL haccel,
;|***                                        PACCELTABLE pAccelTable,
;|***                                        ULONG cbCopyMax);
;|***    #else
;|***       HACCEL APIENTRY WinLoadAccelTable(HAB hab,
;|***                                         HMODULE hmod,
;|***                                         USHORT idAccelTable);
;|***       USHORT APIENTRY WinCopyAccelTable(HACCEL haccel,
;|***                                         PACCELTABLE pAccelTable,
;|***                                         USHORT cbCopyMax);
;|***    #endif
;|***    HACCEL APIENTRY WinCreateAccelTable(HAB hab,
;|***                                        PACCELTABLE pAccelTable);
;|***    BOOL   APIENTRY WinDestroyAccelTable(HACCEL haccel);
;|***    BOOL   APIENTRY WinTranslateAccel(HAB hab,
;|***                                      HWND hwnd,
;|***                                      HACCEL haccel,
;|***                                      PQMSG pqmsg);
;|***    BOOL   APIENTRY WinSetAccelTable(HAB hab,
;|***                                     HACCEL haccel,
;|***                                     HWND hwndFrame);
;|***    HACCEL APIENTRY WinQueryAccelTable(HAB hab,
;|***                                       HWND hwndFrame);
;|*** 
;|*** #endif /* INCL_WINACCELERATORS */
;|*** 
;|*** /**** Extended Attribute Flags (Association Table) */
;|*** 
;|*** #define EAF_DEFAULTOWNER           0x0001
;|*** #define EAF_UNCHANGEABLE           0x0002
;|*** #define EAF_REUSEICON              0x0004
;|*** 
;|*** /*** WinTrackRect() information */
;|*** 
;|*** #ifdef INCL_WINTRACKRECT
;|*** 
;|***    /* WinTrackRect() tracking information structure */
;|*** 
;|***    #ifdef INCL_32
;|***       typedef struct _TRACKINFO {  /* ti */
;|***          LONG    cxBorder;
;|***          LONG    cyBorder;
;|***          LONG    cxGrid;
;|***          LONG    cyGrid;
;|***          LONG    cxKeyboard;
;|***          LONG    cyKeyboard;
;|***          RECTL   rclTrack;
;|***          RECTL   rclBoundary;
;|***          POINTL  ptlMinTrackSize;
;|***          POINTL  ptlMaxTrackSize;
;|***          ULONG   fs;
;|***       } TRACKINFO;
;|***    #else
;|***       typedef struct _TRACKINFO {  /* ti */
;|***          SHORT   cxBorder;
;|***          SHORT   cyBorder;
;|***          SHORT   cxGrid;
;|***          SHORT   cyGrid;
;|***          SHORT   cxKeyboard;
;|***          SHORT   cyKeyboard;
;|***          RECTL   rclTrack;
;|***          RECTL   rclBoundary;
;|***          POINTL  ptlMinTrackSize;
;|***          POINTL  ptlMaxTrackSize;
;|***          USHORT  fs;
;|***       } TRACKINFO;
;|***    #endif
;|***    typedef TRACKINFO FAR *PTRACKINFO;
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       BOOL APIENTRY WinTrackRect(HWND hwnd,
;|***                                  HPS hps,
;|***                                  PTRACKINFO pti);
;|***       BOOL APIENTRY WinShowTrackRect(HWND hwnd,
;|***                                      BOOL fShow);
;|*** 
;|***       /* WinTrackRect() flags */
;|*** 
;|***       #define TF_LEFT                    0x0001
;|***       #define TF_TOP                     0x0002
;|***       #define TF_RIGHT                   0x0004
;|***       #define TF_BOTTOM                  0x0008
;|***       /* TF_MOVE = TF_LEFT | TF_TOP | TF_RIGHT | TF_BOTTOM */
;|***       #define TF_MOVE                    0x000F
;|*** 
;|***       #define TF_SETPOINTERPOS           0x0010
;|***       #define TF_GRID                    0x0020
;|***       #define TF_STANDARD                0x0040
;|***       #define TF_ALLINBOUNDARY           0x0080
;|***       #define TF_VALIDATETRACKRECT       0x0100
;|***       #define TF_PARTINBOUNDARY          0x0200
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINTRACKRECT */
;|*** 
;|*** 
;|*** /**** Clipboard Manager */
;|*** 
;|*** #if (defined(INCL_WINCLIPBOARD) || defined(INCL_WINDDE))
;|***    #ifndef INCL_SAADEFS
;|*** 
;|***       /* Clipboard messages */
;|*** 
;|***       #define WM_RENDERFMT               0x0060
;|***       #define WM_RENDERALLFMTS           0x0061
;|***       #define WM_DESTROYCLIPBOARD        0x0062
;|***       #define WM_PAINTCLIPBOARD          0x0063
;|***       #define WM_SIZECLIPBOARD           0x0064
;|***       #define WM_HSCROLLCLIPBOARD        0x0065
;|***       #define WM_VSCROLLCLIPBOARD        0x0066
;|***       #define WM_DRAWCLIPBOARD           0x0067
;|*** 
;|***       /*
;|***       * Standard Clipboard formats
;|***       */
;|***       #define CF_TEXT                    1
;|***       #define CF_BITMAP                  2
;|***       #define CF_DSPTEXT                 3
;|***       #define CF_DSPBITMAP               4
;|***       #define CF_METAFILE                5
;|***       #define CF_DSPMETAFILE             6
;|***       #define CF_PALETTE                 9
;|***       #define CF_MMPMFIRST              10
;|***       #define CF_MMPMLAST               19
;|***       /*
;|***       * standard DDE and clipboard format stings
;|***       */
;|***       #define SZFMT_TEXT                   "#1"
;|***       #define SZFMT_BITMAP                 "#2"
;|***       #define SZFMT_DSPTEXT                "#3"
;|***       #define SZFMT_DSPBITMAP              "#4"
;|***       #define SZFMT_METAFILE               "#5"
;|***       #define SZFMT_DSPMETAFILE            "#6"
;|***       #define SZFMT_PALETTE                "#9"
;|***       #define SZFMT_SYLK                   "Sylk"
;|***       #define SZFMT_DIF                    "Dif"
;|***       #define SZFMT_TIFF                   "Tiff"
;|***       #define SZFMT_OEMTEXT                "OemText"
;|***       #define SZFMT_DIB                    "Dib"
;|***       #define SZFMT_OWNERDISPLAY           "OwnerDisplay"
;|***       #define SZFMT_LINK                   "Link"
;|***       #define SZFMT_METAFILEPICT           "MetaFilePict"
;|***       #define SZFMT_DSPMETAFILEPICT        "DspMetaFilePict"
;|***       #define SZFMT_CPTEXT                 "Codepage Text"
;|***       #define SZDDEFMT_RTF                 "Rich Text Format"
;|***       #define SZDDEFMT_PTRPICT             "Printer_Picture"
;|*** 
;|***       #pragma pack(2) /* force structure alignment packing */
;|*** 
;|***       /* Metafiles are the same no matter whether they are used in     */
;|***       /* 16-bit or 32-bit applications. While not strictly necessary   */
;|***       /* because of inherent alignment we force packing on a 2 byte    */
;|***       /* boundary to avoid any confusion.                              */
;|***       typedef struct _MFP {  /* mfp */
;|***          POINTL sizeBounds;  /* metafile notional grid size      */
;|***          POINTL sizeMM;      /* metafile size high metric units  */
;|***          ULONG  cbLength;    /* length of metafile data          */
;|***          USHORT mapMode;     /* a PM metaflie map mode           */
;|***          USHORT reserved;
;|***          BYTE   abData[1];   /* metafile Data                    */
;|***       } MFP;
;|***       typedef MFP FAR *PMFP;
;|*** 
;|***       /* CPTEXT DDE data are the same no matter whether they are used  */
;|***       /* in 16-bit or 32-bit applications. While not strictly necessary*/
;|***       /* because of inherent alignment we force packing on a 2 byte    */
;|***       /* boundary to avoid any confusion.                              */
;|***       typedef struct _CPTEXT {  /* cptxt */
;|***          USHORT idCountry;
;|***          USHORT usCodepage;
;|***          USHORT usLangID;
;|***          USHORT usSubLangID;
;|***          BYTE   abText[1];   /* text string starts here          */
;|***       } CPTEXT;
;|***       typedef CPTEXT FAR *PCPTEXT;
;|*** 
;|***       #pragma pack()  /* restore packing to default */
;|*** 
;|***    #endif /* not INCL_SAADEFS */
;|*** #endif /* INCL_WINCLIPBOARD | INCL_WINDDE */
;|*** 
;|*** #ifdef INCL_WINCLIPBOARD
;|***    #ifndef INCL_SAADEFS
;|***       BOOL   APIENTRY WinSetClipbrdOwner(HAB hab,
;|***                                          HWND hwnd);
;|***       #ifdef INCL_32
;|***          BOOL   APIENTRY WinSetClipbrdData(HAB hab,
;|***                                            ULONG ulData,
;|***                                            ULONG fmt,
;|***                                            ULONG rgfFmtInfo);
;|***          ULONG  APIENTRY WinQueryClipbrdData(HAB hab,
;|***                                              ULONG fmt);
;|***          BOOL   APIENTRY WinQueryClipbrdFmtInfo(HAB hab,
;|***                                                 ULONG fmt,
;|***                                                 PULONG prgfFmtInfo);
;|***       #else
;|***          BOOL   APIENTRY WinSetClipbrdData(HAB hab,
;|***                                            ULONG ulData,
;|***                                            USHORT fmt,
;|***                                            USHORT rgfFmtInfo);
;|***          ULONG  APIENTRY WinQueryClipbrdData(HAB hab,
;|***                                              USHORT fmt);
;|***          BOOL   APIENTRY WinQueryClipbrdFmtInfo(HAB hab,
;|***                                                 USHORT fmt,
;|***                                                 PUSHORT prgfFmtInfo);
;|***       #endif
;|***       BOOL   APIENTRY WinSetClipbrdViewer(HAB hab,
;|***                                           HWND hwndNewClipViewer);
;|*** 
;|***       /* WinSetClipbrdData() flags */
;|*** 
;|***       #define CFI_OWNERFREE              0x0001
;|***       #define CFI_OWNERDISPLAY           0x0002
;|***       #ifdef INCL_32
;|***          #define CFI_POINTER                0x0400
;|***       #else
;|***          #define CFI_SELECTOR               0x0100
;|***       #endif
;|***       #define CFI_HANDLE                 0x0200
;|*** 
;|***    #endif /* !INCL_SAADEFS */
;|*** 
;|***    #ifdef INCL_32
;|***       ULONG APIENTRY WinEnumClipbrdFmts(HAB hab,
;|***                                         ULONG fmt);
;|***    #else
;|***       USHORT APIENTRY WinEnumClipbrdFmts(HAB hab,
;|***                                          USHORT fmt);
;|***    #endif
;|***    BOOL   APIENTRY WinEmptyClipbrd(HAB hab);
;|***    BOOL   APIENTRY WinOpenClipbrd(HAB hab);
;|***    BOOL   APIENTRY WinCloseClipbrd(HAB hab);
;|*** 
;|***    #ifdef INCL_32
;|***       HWND   APIENTRY WinQueryClipbrdOwner(HAB hab);
;|***       HWND   APIENTRY WinQueryClipbrdViewer(HAB hab);
;|***    #else
;|***       HWND   APIENTRY WinQueryClipbrdOwner(HAB hab,
;|***                                            BOOL fLock);
;|***       HWND   APIENTRY WinQueryClipbrdViewer(HAB hab,
;|***                                             BOOL fLock);
;|***    #endif  /* INCL_32 */
;|*** 
;|*** #endif /* INCL_WINCLIPBOARD */
;|*** 
;|*** 
;|*** #if (defined(INCL_WINCURSORS) || !defined(INCL_NOCOMMON))
;|***    /**** Cursor manager common subsection */
;|*** 
;|***    BOOL APIENTRY WinDestroyCursor(HWND hwnd);
;|***    BOOL APIENTRY WinShowCursor(HWND hwnd,
;|***                                BOOL fShow);
;|***    #ifdef INCL_32
;|***       BOOL APIENTRY WinCreateCursor(HWND hwnd,
;|***                                     LONG x,
;|***                                     LONG y,
;|***                                     LONG cx,
;|***                                     LONG cy,
;|***                                     ULONG fs,
;|***                                     PRECTL prclClip);
;|***    #else
;|***       BOOL APIENTRY WinCreateCursor(HWND hwnd,
;|***                                     SHORT x,
;|***                                     SHORT y,
;|***                                     SHORT cx,
;|***                                     SHORT cy,
;|***                                     USHORT fs,
;|***                                     PRECTL prclClip);
;|***    #endif
;|*** 
;|***    /* WinCreateCursor() flags */
;|*** 
;|***    #define CURSOR_SOLID               0x0000
;|***    #define CURSOR_HALFTONE            0x0001
;|***    #define CURSOR_FRAME               0x0002
;|***    #define CURSOR_FLASH               0x0004
;|***    #define CURSOR_SETPOS              0x8000
;|*** 
;|***    /* Cursor flags 0x0100 and 0x0200 reserved */
;|***    /* for bidirectional language support.     */
;|*** 
;|***    #define CURSOR_BIDI_FIRST          0x0100
;|***    #define CURSOR_BIDI_LAST           0x0200
;|*** 
;|*** 
;|*** #endif /* Cursor manager common subsection */
;|*** 
;|*** #ifdef INCL_WINCURSORS
;|*** 
;|***    #ifdef INCL_32
;|***       typedef struct _CURSORINFO {  /* csri */
;|***          HWND    hwnd;
;|***          LONG    x;
;|***          LONG    y;
;|***          LONG    cx;
;|***          LONG    cy;
;|***          ULONG   fs;
;|***          RECTL   rclClip;
;|***       } CURSORINFO;
;|***    #else
;|***       typedef struct _CURSORINFO {  /* csri */
;|***          HWND    hwnd;
;|***          SHORT   x;
;|***          SHORT   y;
;|***          SHORT   cx;
;|***          SHORT   cy;
;|***          USHORT  fs;
;|***          RECTL   rclClip;
;|***       } CURSORINFO;
;|***    #endif
;|***    typedef CURSORINFO FAR *PCURSORINFO;
;|*** 
;|***    BOOL APIENTRY WinQueryCursorInfo(HWND hwndDesktop,
;|***                                     PCURSORINFO pCursorInfo);
;|*** 
;|*** #endif /* INCL_WINCURSORS */
;|*** 
;|*** 
;|*** #ifdef INCL_WINPOINTERS
;|***    /**** Pointer manager */
;|*** 
;|***    BOOL     APIENTRY WinSetPointer(HWND hwndDesktop,
;|***                                    HPOINTER hptrNew);
;|***    BOOL     APIENTRY WinSetPointerOwner(HPOINTER hptr,
;|***                                         PID pid,
;|***                                         BOOL fDestroy);
;|***    BOOL     APIENTRY WinShowPointer(HWND hwndDesktop,
;|***                                     BOOL fShow);
;|***    #ifdef INCL_32
;|***    BOOL     APIENTRY WinLockPointerUpdate(HWND hwndDesktop,
;|***                                           HPOINTER hptrNew,
;|***                                           ULONG ulTimeInterval);
;|***       HPOINTER APIENTRY WinQuerySysPointer(HWND hwndDesktop,
;|***                                            LONG iptr,
;|***                                            BOOL fLoad);
;|***    #else
;|***    BOOL     APIENTRY WinLockPointerUpdate(HWND hwndDesktop,
;|***                                           HPOINTER hptrNew,
;|***                                           USHORT usTimeInterval);
;|***       HPOINTER APIENTRY WinQuerySysPointer(HWND hwndDesktop,
;|***                                            SHORT iptr,
;|***                                            BOOL fLoad);
;|***    #endif
;|*** 
;|***    #ifdef INCL_32
;|***       BOOL APIENTRY WinQuerySysPointerData(HWND hwndDesktop,
;|***                                            ULONG iptr,
;|***                                            PICONINFO pIconInfo);
;|***       BOOL APIENTRY WinSetSysPointerData(HWND hwndDesktop,
;|***                                          ULONG iptr,
;|***                                          PICONINFO pIconInfo);
;|***    #endif
;|*** 
;|***    /* System pointers (NOTE: these are 1-based) */
;|*** 
;|***    #define SPTR_ARROW                 1
;|***    #define SPTR_TEXT                  2
;|***    #define SPTR_WAIT                  3
;|***    #define SPTR_SIZE                  4
;|***    #define SPTR_MOVE                  5
;|***    #define SPTR_SIZENWSE              6
;|***    #define SPTR_SIZENESW              7
;|***    #define SPTR_SIZEWE                8
;|***    #define SPTR_SIZENS                9
;|***    #define SPTR_APPICON               10
;|*** 
;|***    #define SPTR_ICONINFORMATION       11
;|***    #define SPTR_ICONQUESTION          12
;|***    #define SPTR_ICONERROR             13
;|***    #define SPTR_ICONWARNING           14
;|*** 
;|***    #define SPTR_ILLEGAL               18
;|***    #define SPTR_FILE                  19
;|***    #define SPTR_FOLDER                20
;|***    #define SPTR_MULTFILE              21
;|***    #define SPTR_PROGRAM               22
;|***    #define SPTR_DISPLAY_PTRS          22
;|***    #define SPTR_PENFIRST              23
;|***    #define SPTR_PENLAST               39
;|***    #define SPTR_CPTR                  39  /* total # of system pointers */
;|*** 
;|***    /* backward compatibility */
;|***    #define SPTR_HANDICON         SPTR_ICONERROR
;|***    #define SPTR_QUESICON         SPTR_ICONQUESTION
;|***    #define SPTR_BANGICON         SPTR_ICONWARNING
;|***    #define SPTR_NOTEICON         SPTR_ICONINFORMATION
;|*** 
;|*** 
;|***    #ifdef INCL_32
;|***       HPOINTER APIENTRY WinLoadPointer(HWND hwndDesktop,
;|***                                        HMODULE hmod,
;|***                                        ULONG idres);
;|***       HPOINTER APIENTRY WinCreatePointer(HWND hwndDesktop,
;|***                                          HBITMAP hbmPointer,
;|***                                          BOOL fPointer,
;|***                                          LONG xHotspot,
;|***                                          LONG yHotspot);
;|***       BOOL     APIENTRY WinSetPointerPos(HWND hwndDesktop,
;|***                                          LONG x,
;|***                                          LONG y);
;|***    #else
;|***       HPOINTER APIENTRY WinLoadPointer(HWND hwndDesktop,
;|***                                        HMODULE hmod,
;|***                                        USHORT idres);
;|***       HPOINTER APIENTRY WinCreatePointer(HWND hwndDesktop,
;|***                                          HBITMAP hbmPointer,
;|***                                          BOOL fPointer,
;|***                                          SHORT xHotspot,
;|***                                          SHORT yHotspot);
;|***       BOOL     APIENTRY WinSetPointerPos(HWND hwndDesktop,
;|***                                          SHORT x,
;|***                                          SHORT y);
;|***    #endif
;|***    BOOL     APIENTRY WinDestroyPointer(HPOINTER hptr);
;|*** 
;|***    HPOINTER APIENTRY WinQueryPointer(HWND hwndDesktop);
;|***    BOOL     APIENTRY WinQueryPointerPos(HWND hwndDesktop,
;|***                                         PPOINTL pptl);
;|*** 
;|***    #ifdef INCL_32
;|***       typedef struct _POINTERINFO {  /* ptri */
;|***          ULONG   fPointer;
;|***          LONG    xHotspot;
;|***          LONG    yHotspot;
;|***          HBITMAP hbmPointer;
;|***          HBITMAP hbmColor;
;|***          HBITMAP hbmMiniPointer;
;|***          HBITMAP hbmMiniColor;
;|***       } POINTERINFO;
;|***    #else
;|***       typedef struct _POINTERINFO {  /* ptri */
;|***          USHORT  fPointer;
;|***          SHORT   xHotspot;
;|***          SHORT   yHotspot;
;|***          HBITMAP hbmPointer;
;|***          HBITMAP hbmColor;
;|***       } POINTERINFO;
;|***    #endif
;|***    typedef POINTERINFO FAR *PPOINTERINFO;
;|*** 
;|***    HPOINTER APIENTRY WinCreatePointerIndirect(HWND hwndDesktop,
;|***                                               PPOINTERINFO pptri);
;|***    BOOL     APIENTRY WinQueryPointerInfo(HPOINTER hptr,
;|***                                          PPOINTERINFO pPointerInfo);
;|***    #ifdef INCL_32
;|***       BOOL     APIENTRY WinDrawPointer(HPS hps,
;|***                                        LONG x,
;|***                                        LONG y,
;|***                                        HPOINTER hptr,
;|***                                        ULONG fs);
;|***    #else
;|***       BOOL     APIENTRY WinDrawPointer(HPS hps,
;|***                                        SHORT x,
;|***                                        SHORT y,
;|***                                        HPOINTER hptr,
;|***                                        USHORT fs);
;|***    #endif
;|*** 
;|*** 
;|*** 
;|***    /* WinDrawPointer() constants */
;|*** 
;|***    #define DP_NORMAL                  0x0000
;|***    #define DP_HALFTONED               0x0001
;|***    #define DP_INVERTED                0x0002
;|***    #define DP_MINI                    0x0004  /*   Feature:85493  */
;|*** 
;|*** 
;|***    #ifdef INCL_32
;|***       HBITMAP APIENTRY WinGetSysBitmap(HWND hwndDesktop,
;|***                                        ULONG ibm);
;|***    #else
;|***       HBITMAP APIENTRY WinGetSysBitmap(HWND hwndDesktop,
;|***                                        USHORT ibm);
;|***    #endif
;|*** 
;|***    /* System bitmaps (NOTE: these are 1-based) */
;|*** 
;|***    #define SBMP_OLD_SYSMENU           1
;|***    #define SBMP_OLD_SBUPARROW         2
;|***    #define SBMP_OLD_SBDNARROW         3
;|***    #define SBMP_OLD_SBRGARROW         4
;|***    #define SBMP_OLD_SBLFARROW         5
;|***    #define SBMP_MENUCHECK             6
;|***    #define SBMP_OLD_CHECKBOXES        7
;|***    #define SBMP_BTNCORNERS            8
;|***    #define SBMP_OLD_MINBUTTON         9
;|***    #define SBMP_OLD_MAXBUTTON         10
;|***    #define SBMP_OLD_RESTOREBUTTON     11
;|***    #define SBMP_OLD_CHILDSYSMENU      12
;|***    #define SBMP_DRIVE                 15
;|***    #define SBMP_FILE                  16
;|***    #define SBMP_FOLDER                17
;|***    #define SBMP_TREEPLUS              18
;|***    #define SBMP_TREEMINUS             19
;|***    #define SBMP_PROGRAM               22
;|***    #define SBMP_MENUATTACHED          23
;|***    #define SBMP_SIZEBOX               24
;|*** 
;|***    #define SBMP_SYSMENU               25
;|***    #define SBMP_MINBUTTON             26
;|***    #define SBMP_MAXBUTTON             27
;|***    #define SBMP_RESTOREBUTTON         28
;|***    #define SBMP_CHILDSYSMENU          29
;|***    #define SBMP_SYSMENUDEP            30
;|***    #define SBMP_MINBUTTONDEP          31
;|***    #define SBMP_MAXBUTTONDEP          32
;|***    #define SBMP_RESTOREBUTTONDEP      33
;|***    #define SBMP_CHILDSYSMENUDEP       34
;|***    #define SBMP_SBUPARROW             35
;|***    #define SBMP_SBDNARROW             36
;|***    #define SBMP_SBLFARROW             37
;|***    #define SBMP_SBRGARROW             38
;|***    #define SBMP_SBUPARROWDEP          39
;|***    #define SBMP_SBDNARROWDEP          40
;|***    #define SBMP_SBLFARROWDEP          41
;|***    #define SBMP_SBRGARROWDEP          42
;|***    #define SBMP_SBUPARROWDIS          43
;|***    #define SBMP_SBDNARROWDIS          44
;|***    #define SBMP_SBLFARROWDIS          45
;|***    #define SBMP_SBRGARROWDIS          46
;|***    #define SBMP_COMBODOWN             47
;|***    #define SBMP_CHECKBOXES        48
;|*** 
;|*** #endif /* INCL_WINPOINTERS */
;|*** 
;|*** 
;|*** /**** Hook manager */
;|*** 
;|*** #ifdef INCL_WINHOOKS
;|*** 
;|***    #ifndef INCL_SAADEFS
;|***       #ifdef INCL_32
;|***          BOOL APIENTRY WinSetHook(HAB hab,
;|***                                   HMQ hmq,
;|***                                   LONG iHook,
;|***                                   PFN pfnHook,
;|***                                   HMODULE hmod);
;|***          BOOL APIENTRY WinReleaseHook(HAB hab,
;|***                                       HMQ hmq,
;|***                                       LONG iHook,
;|***                                       PFN pfnHook,
;|***                                       HMODULE hmod);
;|***          BOOL APIENTRY WinCallMsgFilter(HAB hab,
;|***                                         PQMSG pqmsg,
;|***                                         ULONG msgf);
;|***       #else
;|***          BOOL APIENTRY WinSetHook(HAB hab,
;|***                                   HMQ hmq,
;|***                                   SHORT iHook,
;|***                                   PFN pfnHook,
;|***                                   HMODULE hmod);
;|***          BOOL APIENTRY WinReleaseHook(HAB hab,
;|***                                       HMQ hmq,
;|***                                       SHORT iHook,
;|***                                       PFN pfnHook,
;|***                                       HMODULE hmod);
;|***          BOOL APIENTRY WinCallMsgFilter(HAB hab,
;|***                                         PQMSG pqmsg,
;|***                                         USHORT msgf);
;|***       #endif
;|*** 
;|*** 
;|***       /**********************************************************************
;|***       * Hook codes
;|***       *
;|***       * Whether the hook receives a (U)SHORT or (U)LONG parameter depends
;|***       * on the memory model that the hook executes in. 32-bit hook will
;|***       * receive long parameters
;|***       *
;|***       **********************************************************************/
;|*** 
;|***       #define HK_SENDMSG                 0
;|***       /* VOID EXPENTRY SendMsgHook(HAB hab,               ** installer's hab
;|***       *                            PSMHSTRUCT psmh,       ** p send msg struct
;|***       *                            BOOL fInterTask);      ** between threads */
;|*** 
;|***       #define HK_INPUT                   1
;|***       /* BOOL EXPENTRY InputHook(HAB hab,                 ** installer's hab
;|***       *                          PQMSG pQmsg,             ** p qmsg
;|***       *                          ULONG/USHORT fs);        ** remove/noremove */
;|*** 
;|***       #define HK_MSGFILTER               2
;|***       /* BOOL EXPENTRY MsgFilterHook(HAB hab,             ** installer's hab
;|***       *                              PQMSG pQmsg,         ** p qmsg
;|***       *                              ULONG/USHORT msgf);  ** filter flag */
;|*** 
;|***       #define HK_JOURNALRECORD           3
;|***       /* VOID EXPENTRY JournalRecordHook(HAB hab,         ** installer's hab
;|***       *                                  PQMSG pQmsg);    ** p qmsg */
;|*** 
;|***       #define HK_JOURNALPLAYBACK         4
;|***       /* ULONG EXPENTRY JournalPlaybackHook(HAB hab,      **installer's hab
;|***       *                                     BOOL fSkip,   ** skip messages
;|***       *                                     PQMSG pQmsg); ** p qmsg */
;|*** 
;|***       #define HK_HELP                    5
;|***       /* BOOL EXPENTRY HelpHook(HAB hab,                  ** installer's hab
;|***       *                         ULONG/USHORT usMode,      ** mode
;|***       *                         ULONG/USHORT idTopic,     ** main topic
;|***       *                         ULONG/USHORT idSubTopic,  ** sub topic
;|***       *                         PRECTL prcPosition);      ** associated position */
;|*** 
;|***       #define HK_LOADER                  6
;|***       /* BOOL EXPENTRY LoaderHook(HAB hab,                ** installer's hab
;|***       *                           LONG/USHORT idContext,  ** who called hook
;|***       *                           PSZ pszLibname,         ** lib name string
;|***       *                           PHLIB hlib,             ** p to lib handle
;|***       *                           PSZ pszProcname,        ** procedure name
;|***       *                           PFNWP wndProc);         ** window procedure */
;|*** 
;|***       #define HK_REGISTERUSERMSG         7
;|***       /* BOOL EXPENTRY RegisterUserHook(HAB hab,          ** installer's hab
;|***       *                                 ULONG cUshort,    ** entries in arRMP
;|***       *                                 PULONG/PUSHORT arRMP, ** RMP array
;|***       *                                 PBOOL fRegistered); ** msg parms already reg*/
;|*** 
;|***       #define HK_MSGCONTROL              8
;|***       /* BOOL EXPENTRY MsgControlHook(HAB hab,            ** installer's hab
;|***       *                               LONG/SHORT idContext,** who called hook
;|***       *                               HWND hwnd,          ** SEI window handle
;|***       *                               PSZ pszClassname,   ** window class name
;|***       *                               ULONG/USHORT usMsgclass,** interested msg class **
;|***       *                               LONG/SHORT idControl,** SMI_*
;|***       *                               PBOOL fSuccess);    ** mode already set */
;|*** 
;|***       #define HK_PLIST_ENTRY             9
;|***       /* BOOL EXPENTRY ProgramListEntryHook(HAB hab,      ** installer's hab
;|***       *                                     PPRFHOOKPARMS pProfileHookParams,** data
;|***       *                                     PBOOL fNoExecute);  ** cease hook processing*/
;|*** 
;|***       #define HK_PLIST_EXIT              10
;|***       /* BOOL EXPENTRY ProgramListExitHook(HAB hab,       ** installer's hab
;|***       *                                    PPRFHOOKPARMS pProfileHookParams);** data*/
;|*** 
;|***       #define HK_FINDWORD                11
;|***       /* BOOL EXPENTRY FindWordHook(usCodepage,           ** code page to use
;|***       *                             PSZ pszText,          ** text to break
;|***       *                             ULONG cb,             ** maximum text size
;|***       *                             ULONG ich,            ** break 'near' here
;|***       *                             PULONG pichStart,     ** where break began
;|***       *                             PULONG pichEnd,       ** where break ended
;|***       *                             PULONG pichNext);     ** where next word begin*/
;|*** 
;|***       #define HK_CODEPAGECHANGED         12
;|***       /* VOID EXPENTRY CodePageChangedHook(HMQ hmq,       ** msg q handle
;|***       *                                    ULONG/USHORT usOldCodepage, ** old code page
;|***       *                                    ULONG/USHORT usNewCodepage);** new code page*/
;|*** 
;|***       #define HK_WINDOWDC                15
;|***       /* BOOL EXPENTRY WindowDCHook(HAB  hab,             ** installer's hab
;|***       *                             HDC  hdc,             ** current hdc
;|***       *                             HWND hwnd,            ** current hwnd
;|***       *                             BOOL);                ** association flag */
;|*** 
;|***       #define HK_DESTROYWINDOW           16
;|***       /* BOOL EXPENTRY DestroyWindowHook (HAB  hab,       ** installer's hab
;|***       *                                   HWND hwnd,      ** destroyed win hwnd
;|***       *                                   ULONG Reserved);** association flag  */
;|*** 
;|***       #define HK_CHECKMSGFILTER          20
;|***       /* BOOL EXPENTRY CheckMsgFilteHook (HAB  hab,       ** installer's hab
;|***       *                                   PQMSG pQmsg,    ** p qmsg
;|***       *                                   ULONG/USHORT usFirst,  ** first msg
;|***       *                                   ULONG/USHORT usLast,   ** last msg
;|***       *                                   ULONG/USHORT fOptions);** flags  */
;|*** 
;|***       #define HK_MSGINPUT                21
;|***       /* BOOL EXPENTRY MsgInputHook (HAB  hab,          ** installer's hab
;|***       *                              PQMSG pQmsg,       ** p qmsg
;|***       *                              BOOL fSkip,        ** skip msg
;|***       *                              PBOOL pfNoRecord); ** journal record event */
;|*** 
;|***       #define HK_LOCKUP                  23
;|***       /* BOOL EXPENTRY LockupHook (HAB  hab,              ** installer's hab
;|***       *                           HWND hwndLockupFrame); ** hwnd     */
;|*** 
;|***       #define HK_FLUSHBUF                24
;|***       /* BOOL EXPENTRY FlushBufHook (HAB  hab);           ** installer's hab */
;|*** 
;|***       /*** Current message queue constant **********************************/
;|***       #define HMQ_CURRENT          ((HMQ)1)
;|*** 
;|***       /*** WH_MSGFILTER context codes **************************************/
;|***       #define MSGF_DIALOGBOX             1
;|***       #define MSGF_MESSAGEBOX            2
;|***       #define MSGF_TRACK                 8
;|***       #define MSGF_DDEPOSTMSG            3
;|*** 
;|***       /*** HK_HELP Help modes **********************************************/
;|***       #define HLPM_FRAME              (-1)
;|***       #define HLPM_WINDOW             (-2)
;|***       #define HLPM_MENU               (-3)
;|*** 
;|***       /*** HK_SENDMSG structure ********************************************/
;|***       #define PM_MODEL_1X      0
;|***       #define PM_MODEL_2X      1
;|*** 
;|***       #ifdef INCL_32
;|***          typedef struct _SMHSTRUCT {    /* smhs */
;|***             MPARAM mp2;
;|***             MPARAM mp1;
;|***             ULONG  msg;
;|***             HWND   hwnd;
;|***             ULONG  model;
;|***          } SMHSTRUCT;
;|***       #else
;|***          typedef struct _SMHSTRUCT {    /* smhs */
;|***             MPARAM mp2;
;|***             MPARAM mp1;
;|***             USHORT msg;
;|***             HWND   hwnd;
;|***             USHORT model;
;|***          } SMHSTRUCT;
;|***       #endif
;|***       typedef SMHSTRUCT *PSMHSTRUCT;
;|*** 
;|***       /*HK_LOADER context codes */
;|*** 
;|***       #define LHK_DELETEPROC             1
;|***       #define LHK_DELETELIB              2
;|***       #define LHK_LOADPROC               3
;|***       #define LHK_LOADLIB                4
;|*** 
;|***       /*HK_MSGCONTROL context codes */
;|*** 
;|***       #define MCHK_MSGINTEREST           1
;|***       #define MCHK_CLASSMSGINTEREST      2
;|***       #define MCHK_SYNCHRONISATION       3
;|***       #define MCHK_MSGMODE               4
;|*** 
;|***       /*HK_REGISTERUSERMSG conext codes */
;|*** 
;|***       #define RUMHK_DATATYPE             1
;|***       #define RUMHK_MSG                  2
;|*** 
;|***    #endif /* INCL_SAADEFS */
;|*** 
;|*** #endif /* INCL_WINHOOKS */
;|*** 
;|*** 
;|*** #ifdef INCL_WINTHUNKAPI
;|*** 
;|***    BOOL    APIENTRY WinSetClassThunkProc(PSZ pszClassname,
;|***                                          PFN pfnThunkProc);
;|***    PFN     APIENTRY WinQueryClassThunkProc(PSZ pszClassname);
;|***    BOOL    APIENTRY WinSetWindowThunkProc(HWND hwnd,
;|***                                           PFN pfnThunkProc);
;|***    PFN     APIENTRY WinQueryWindowThunkProc(HWND hwnd);
;|***    #ifdef INCL_32
;|***       LONG   APIENTRY WinQueryWindowModel(HWND hwnd);
;|***    #else
;|***       SHORT   APIENTRY WinQueryWindowModel(HWND hwnd);
;|***    #endif
;|*** 
;|*** #endif /* INCL_WINTHUNKAPI */
;|*** 
;|*** /*
;|*** * Include Shell API
;|*** */
;|*** #ifndef INCL_SAADEFS
;|***    #include <pmshl.h>      /* OS/2 Shell definitions */
; Line 4753
;|*** #include <pmgpi.h>        /* OS/2 GPI definitions               */
; Line 96
;|*** #include <pmdev.h>        /* OS/2 Device Context definitions    */
; Line 97
;|*** #ifndef __IBMC__
;|*** /* LATER should include pmwp.h for both IBM and MS, but I don't want */
;|*** /* to break anyone now! David Kerr */
;|*** #else
;|*** #include <pmwp.h>         /* OS/2 Workplace Shell               */
;|*** #endif
;|*** 
;|*** #ifdef INCL_AVIO
;|***    #ifndef __IBMC__
;|***       #ifdef INCL_16
;|***          #include <pmavio.h> /* OS/2 AVIO definitions              */
;|***       #endif
;|***    #else
;|***       #include <pmavio.h>    /* OS/2 AVIO definitions              */
;|***    #endif
;|*** #endif
;|*** 
;|*** #ifdef INCL_SPL
;|***    #include <pmspl.h>     /* OS/2 Spooler definitions           */
;|*** #endif
;|*** 
;|*** #ifdef INCL_PIC
;|***    #include <pmpic.h>     /* OS/2 Picture Utilities definitions */
;|*** #endif
;|*** 
;|*** #ifdef INCL_ORDERS
;|***    #include <pmord.h>     /* OS/2 Graphical Order Formats       */
;|*** #endif
;|*** 
;|*** #ifdef INCL_FONTFILEFORMAT
;|***    #include <pmfont.h>    /* OS/2 Font File Format definition   */
;|*** #endif
;|*** 
;|*** #include <pmstddlg.h>     /* CUA controls and dialogs           */
; Line 131
;|*** //#include <memory.h>
;|*** //#include <stdlib.h>
;|*** #include "COMDD.H"
; Line 43
;|*** #include "CUTIL.H"
; Line 44
;|*** 
;|*** #define MAX_41_BAUD_RATE 57600
;|*** #define MAX_43_BAUD_RATE 115200
;|*** #define MAX_REMAINDER 12
;|*** 
;|*** extern char _abyPath[];
;|*** extern char chFailedBadPath[];
;|*** 
;|*** WORD StringLength(BYTE abyString[])
;|***   {
; Line 54
	PUBLIC	_StringLength
_StringLength	PROC FAR
	*** 000000	c8 02 00 00 		enter	2,0
	*** 000004	57 			push	di
	*** 000005	56 			push	si
;	wIndex = -2
;	abyString = 6
;|***   WORD wIndex = 0;
; Line 55
	*** 000006	c7 46 fe 00 00 		mov	WORD PTR [bp-2],0	;wIndex
;|*** 
;|***   while (abyString[wIndex] != 0)
; Line 57
					$FC2008:
	*** 00000b	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;abyString
	*** 00000e	8b 76 fe 		mov	si,WORD PTR [bp-2]	;wIndex
	*** 000011	26 80 38 00 		cmp	BYTE PTR es:[bx][si],0
	*** 000015	75 03 			jne	$JCC21
	*** 000017	e9 06 00 		jmp	$FB2009
					$JCC21:
;|***     wIndex++;
; Line 58
	*** 00001a	ff 46 fe 		inc	WORD PTR [bp-2]	;wIndex
	*** 00001d	e9 eb ff 		jmp	$FC2008
					$FB2009:
;|***   return(wIndex);
; Line 59
	*** 000020	8b 46 fe 		mov	ax,WORD PTR [bp-2]	;wIndex
	*** 000023	e9 00 00 		jmp	$EX2005
;|***   }
; Line 60
					$EX2005:
	*** 000026	5e 			pop	si
	*** 000027	5f 			pop	di
	*** 000028	c9 			leave	
	*** 000029	cb 			ret	

_StringLength	ENDP
;|*** 
;|*** unsigned int CalcBaudRate(unsigned long ulBaudRate)
;|***   {
; Line 63
	PUBLIC	_CalcBaudRate
_CalcBaudRate	PROC FAR
	*** 00002a	c8 00 00 00 		enter	0,0
	*** 00002e	57 			push	di
	*** 00002f	56 			push	si
;	ulBaudRate = 6
;|***   if (ulBaudRate > MAX_41_BAUD_RATE)
; Line 64
	*** 000030	83 7e 08 00 		cmp	WORD PTR [bp+8],0
	*** 000034	76 03 			jbe	$JCC52
	*** 000036	e9 0a 00 		jmp	$L20000
					$JCC52:
	*** 000039	81 7e 06 00 e1 		cmp	WORD PTR [bp+6],-7936	;ulBaudRate
	*** 00003e	77 03 			ja	$JCC62
	*** 000040	e9 26 00 		jmp	$I2013
					$JCC62:
					$L20000:
;|***     if ((MAX_43_BAUD_RATE % ulBaudRate) > MAX_REMAINDER)
; Line 65
	*** 000043	ff 76 08 		push	WORD PTR [bp+8]
	*** 000046	ff 76 06 		push	WORD PTR [bp+6]	;ulBaudRate
	*** 000049	6a 01 			push	1
	*** 00004b	68 00 c2 		push	-15872
	*** 00004e	9a 00 00 00 00 		call	FAR PTR __aFulrem
	*** 000053	83 fa 00 		cmp	dx,0
	*** 000056	76 03 			jbe	$JCC86
	*** 000058	e9 08 00 		jmp	$L20001
					$JCC86:
	*** 00005b	3d 0c 00 		cmp	ax,12
	*** 00005e	77 03 			ja	$JCC94
	*** 000060	e9 06 00 		jmp	$I2014
					$JCC94:
					$L20001:
;|***       return(0);
; Line 66
	*** 000063	b8 00 00 		mov	ax,0
	*** 000066	e9 13 00 		jmp	$EX2012
;|***   return((unsigned int)(MAX_43_BAUD_RATE / ulBaudRate));
; Line 67
					$I2014:
					$I2013:
	*** 000069	ff 76 08 		push	WORD PTR [bp+8]
	*** 00006c	ff 76 06 		push	WORD PTR [bp+6]	;ulBaudRate
	*** 00006f	6a 01 			push	1
	*** 000071	68 00 c2 		push	-15872
	*** 000074	9a 00 00 00 00 		call	FAR PTR __aFuldiv
	*** 000079	e9 00 00 		jmp	$EX2012
;|***   }
; Line 68
					$EX2012:
	*** 00007c	5e 			pop	si
	*** 00007d	5f 			pop	di
	*** 00007e	c9 			leave	
	*** 00007f	cb 			ret	

_CalcBaudRate	ENDP
;|*** 
;|*** #ifndef NO_COMscope
;|*** VOID MakeCOMscopeName(char _far szString[])
;|***   {
; Line 72
	PUBLIC	_MakeCOMscopeName
_MakeCOMscopeName	PROC FAR
	*** 000080	c8 00 00 00 		enter	0,0
	*** 000084	57 			push	di
	*** 000085	56 			push	si
;	szString = 6
;|***   szString[7] = szString[4];
; Line 73
	*** 000086	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;szString
	*** 000089	26 8a 47 04 		mov	al,BYTE PTR es:[bx+4]
	*** 00008d	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;szString
	*** 000090	26 88 47 07 		mov	BYTE PTR es:[bx+7],al
;|***   szString[6] = szString[3];
; Line 74
	*** 000094	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;szString
	*** 000097	26 8a 47 03 		mov	al,BYTE PTR es:[bx+3]
	*** 00009b	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;szString
	*** 00009e	26 88 47 06 		mov	BYTE PTR es:[bx+6],al
;|***   szString[5] = '$';
; Line 75
	*** 0000a2	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;szString
	*** 0000a5	26 c6 47 05 24 		mov	BYTE PTR es:[bx+5],36
;|***   szString[4] = '$';
; Line 76
	*** 0000aa	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;szString
	*** 0000ad	26 c6 47 04 24 		mov	BYTE PTR es:[bx+4],36
;|***   szString[3] = '$';
; Line 77
	*** 0000b2	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;szString
	*** 0000b5	26 c6 47 03 24 		mov	BYTE PTR es:[bx+3],36
;|***   }
; Line 78
					$EX2017:
	*** 0000ba	5e 			pop	si
	*** 0000bb	5f 			pop	di
	*** 0000bc	c9 			leave	
	*** 0000bd	cb 			ret	

_MakeCOMscopeName	ENDP
_TEXT	ENDS
END
;|*** #endif
